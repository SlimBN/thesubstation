@charset "UTF-8";
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Correct the line-height for all headings in Chrome mobile, Firefox,
 * iOS Safari, Microsoft Edge and IE.
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.15; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */
/**
 * Prevent margin and border from affecting element width.
 * https://goo.gl/pYtbK7
 *
 */
html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit; }

/**
 * Removes the default spacing and border for appropriate elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
p,
pre {
  margin: 0; }

button {
  background: transparent;
  border: 0;
  padding: 0; }

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

iframe {
  border: 0; }

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0; }

/**
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */
[tabindex="-1"]:focus {
  outline: none !important; }

.mist .header {
  background-color: #dcfac0; }

.mist .content {
  background-color: #00968b; }

.mist .footer {
  background-color: #85c79c; }

.spring .header {
  background-color: #f4fac7; }

.spring .content {
  background-color: #c2454e; }

.spring .footer {
  background-color: #ffb158; }

@font-face {
  font-family: Thin;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Thin.eot");
  src: url("/assets/fonts/Thin.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Thin.woff") format("woff"), url("/assets/fonts/Thin.ttf") format("truetype"), url("/assets/fonts/Thin.svg#Thin") format("svg"); }

@font-face {
  font-family: Light;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Light.eot");
  src: url("/assets/fonts/Light.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Light.woff") format("woff"), url("/assets/fonts/Light.ttf") format("truetype"), url("/assets/fonts/Light.svg#Light") format("svg"); }

@font-face {
  font-family: Regular;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Regular.eot");
  src: url("/assets/fonts/Regular.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Regular.woff") format("woff"), url("/assets/fonts/Regular.ttf") format("truetype"), url("/assets/fonts/Regular.svg#Regular") format("svg"); }

@font-face {
  font-family: Regular;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Regular.eot");
  src: url("/assets/fonts/Regular.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Regular.woff") format("woff"), url("/assets/fonts/Regular.ttf") format("truetype"), url("/assets/fonts/Regular.svg#Regular") format("svg"); }

@font-face {
  font-family: Medium;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Medium.eot");
  src: url("/assets/fonts/Medium.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Medium.woff") format("woff"), url("/assets/fonts/Medium.ttf") format("truetype"), url("/assets/fonts/Medium.svg#Medium") format("svg"); }

@font-face {
  font-family: Bold;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Bold.eot");
  src: url("/assets/fonts/Bold.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Bold.woff") format("woff"), url("/assets/fonts/Bold.ttf") format("truetype"), url("/assets/fonts/Bold.svg#Bold") format("svg"); }

@font-face {
  font-family: Black;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Black.eot");
  src: url("/assets/fonts/Black.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Black.woff") format("woff"), url("/assets/fonts/Black.ttf") format("truetype"), url("/assets/fonts/Black.svg#Black") format("svg"); }

@font-face {
  font-family: regularSerif;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts2/regularSerif.eot");
  src: url("/assets/fonts2/regularSerif.eot?#iefix") format("embedded-opentype"), url("/assets/fonts2/regularSerif.woff") format("woff"), url("/assets/fonts2/regularSerif.ttf") format("truetype"), url("/assets/fonts2/regularSerif.svg#regularSerif") format("svg"); }

/**
 * @define utilities
 * Sizing utilities
 */
/* Proportional widths
   ========================================================================== */
/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 *
 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
 *    http://git.io/vllMD
 */
[class*="u-size"] {
  -webkit-flex-basis: auto !important;
  -ms-flex-preferred-size: auto !important;
  flex-basis: auto !important;
  /* 1 */ }

.u-size1of12 {
  width: -webkit-calc(100% * 1 / 12) !important;
  width: calc(100% * 1 / 12) !important; }

.u-size1of10 {
  width: 10% !important; }

.u-size1of8 {
  width: 12.5% !important; }

.u-size1of6,
.u-size2of12 {
  width: -webkit-calc(100% * 1 / 6) !important;
  width: calc(100% * 1 / 6) !important; }

.u-size1of5,
.u-size2of10 {
  width: 20% !important; }

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  width: 25% !important; }

.u-size3of10 {
  width: 30% !important; }

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  width: -webkit-calc(100% * 1 / 3) !important;
  width: calc(100% * 1 / 3) !important; }

.u-size3of8 {
  width: 37.5% !important; }

.u-size2of5,
.u-size4of10 {
  width: 40% !important; }

.u-size5of12 {
  width: -webkit-calc(100% * 5 / 12) !important;
  width: calc(100% * 5 / 12) !important; }

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  width: 50% !important; }

.u-size7of12 {
  width: -webkit-calc(100% * 7 / 12) !important;
  width: calc(100% * 7 / 12) !important; }

.u-size3of5,
.u-size6of10 {
  width: 60% !important; }

.u-size5of8 {
  width: 62.5% !important; }

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  width: -webkit-calc(100% * 2 / 3) !important;
  width: calc(100% * 2 / 3) !important; }

.u-size7of10 {
  width: 70% !important; }

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  width: 75% !important; }

.u-size4of5,
.u-size8of10 {
  width: 80% !important; }

.u-size5of6,
.u-size10of12 {
  width: -webkit-calc(100% * 5 / 6) !important;
  width: calc(100% * 5 / 6) !important; }

.u-size7of8 {
  width: 87.5% !important; }

.u-size9of10 {
  width: 90% !important; }

.u-size11of12 {
  width: -webkit-calc(100% * 11 / 12) !important;
  width: calc(100% * 11 / 12) !important; }

/* Intrinsic widths
   ========================================================================== */
/**
 * Make an element shrink wrap its content.
 */
.u-sizeFit {
  -webkit-flex-basis: auto !important;
  -ms-flex-preferred-size: auto !important;
  flex-basis: auto !important; }

/**
 * Make an element fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex
 *    http://git.io/vllC7
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
 *    http://git.io/vllMt
 */
.u-sizeFill {
  -webkit-box-flex: 1 !important;
  -webkit-flex: 1 1 0% !important;
  -ms-flex: 1 1 0% !important;
  flex: 1 1 0% !important;
  /* 1 */
  -webkit-flex-basis: 0% !important;
  -ms-flex-preferred-size: 0% !important;
  flex-basis: 0% !important;
  /* 2 */ }

/**
 * An alternative method to make an element fill the remaining space.
 * Distributes space based on the initial width and height of the element
 *
 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
 */
.u-sizeFillAlt {
  -webkit-box-flex: 1 !important;
  -webkit-flex: 1 1 auto !important;
  -ms-flex: 1 1 auto !important;
  flex: 1 1 auto !important;
  -webkit-flex-basis: auto !important;
  -ms-flex-preferred-size: auto !important;
  flex-basis: auto !important; }

/**
 * Make an element the width of its parent.
 */
.u-sizeFull {
  -webkit-box-sizing: border-box !important;
  box-sizing: border-box !important;
  display: block !important;
  width: 100% !important; }

[class*="u-xs-size"] {
  -webkit-flex-basis: auto !important;
  -ms-flex-preferred-size: auto !important;
  flex-basis: auto !important; }

.u-xs-size1of12 {
  width: -webkit-calc(100% * 1 / 12) !important;
  width: calc(100% * 1 / 12) !important; }

.u-xs-size1of10 {
  width: 10% !important; }

.u-xs-size1of8 {
  width: 12.5% !important; }

.u-xs-size1of6,
.u-xs-size2of12 {
  width: -webkit-calc(100% * 1 / 6) !important;
  width: calc(100% * 1 / 6) !important; }

.u-xs-size1of5,
.u-xs-size2of10 {
  width: 20% !important; }

.u-xs-size1of4,
.u-xs-size2of8,
.u-xs-size3of12 {
  width: 25% !important; }

.u-xs-size3of10 {
  width: 30% !important; }

.u-xs-size1of3,
.u-xs-size2of6,
.u-xs-size4of12 {
  width: -webkit-calc(100% * 1 / 3) !important;
  width: calc(100% * 1 / 3) !important; }

.u-xs-size3of8 {
  width: 37.5% !important; }

.u-xs-size2of5,
.u-xs-size4of10 {
  width: 40% !important; }

.u-xs-size5of12 {
  width: -webkit-calc(100% * 5 / 12) !important;
  width: calc(100% * 5 / 12) !important; }

.u-xs-size1of2,
.u-xs-size2of4,
.u-xs-size3of6,
.u-xs-size4of8,
.u-xs-size5of10,
.u-xs-size6of12 {
  width: 50% !important; }

.u-xs-size7of12 {
  width: -webkit-calc(100% * 7 / 12) !important;
  width: calc(100% * 7 / 12) !important; }

.u-xs-size3of5,
.u-xs-size6of10 {
  width: 60% !important; }

.u-xs-size5of8 {
  width: 62.5% !important; }

.u-xs-size2of3,
.u-xs-size4of6,
.u-xs-size8of12 {
  width: -webkit-calc(100% * 2 / 3) !important;
  width: calc(100% * 2 / 3) !important; }

.u-xs-size7of10 {
  width: 70% !important; }

.u-xs-size3of4,
.u-xs-size6of8,
.u-xs-size9of12 {
  width: 75% !important; }

.u-xs-size4of5,
.u-xs-size8of10 {
  width: 80% !important; }

.u-xs-size5of6,
.u-xs-size10of12 {
  width: -webkit-calc(100% * 5 / 6) !important;
  width: calc(100% * 5 / 6) !important; }

.u-xs-size7of8 {
  width: 87.5% !important; }

.u-xs-size9of10 {
  width: 90% !important; }

.u-xs-size11of12 {
  width: -webkit-calc(100% * 11 / 12) !important;
  width: calc(100% * 11 / 12) !important; }

@media (min-width: 544px) {
  [class*="u-sm-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-sm-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-sm-size1of10 {
    width: 10% !important; }
  .u-sm-size1of8 {
    width: 12.5% !important; }
  .u-sm-size1of6,
  .u-sm-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-sm-size1of5,
  .u-sm-size2of10 {
    width: 20% !important; }
  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    width: 25% !important; }
  .u-sm-size3of10 {
    width: 30% !important; }
  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-sm-size3of8 {
    width: 37.5% !important; }
  .u-sm-size2of5,
  .u-sm-size4of10 {
    width: 40% !important; }
  .u-sm-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    width: 50% !important; }
  .u-sm-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-sm-size3of5,
  .u-sm-size6of10 {
    width: 60% !important; }
  .u-sm-size5of8 {
    width: 62.5% !important; }
  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-sm-size7of10 {
    width: 70% !important; }
  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    width: 75% !important; }
  .u-sm-size4of5,
  .u-sm-size8of10 {
    width: 80% !important; }
  .u-sm-size5of6,
  .u-sm-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-sm-size7of8 {
    width: 87.5% !important; }
  .u-sm-size9of10 {
    width: 90% !important; }
  .u-sm-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

@media (min-width: 768px) {
  [class*="u-md-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-md-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-md-size1of10 {
    width: 10% !important; }
  .u-md-size1of8 {
    width: 12.5% !important; }
  .u-md-size1of6,
  .u-md-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-md-size1of5,
  .u-md-size2of10 {
    width: 20% !important; }
  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    width: 25% !important; }
  .u-md-size3of10 {
    width: 30% !important; }
  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-md-size3of8 {
    width: 37.5% !important; }
  .u-md-size2of5,
  .u-md-size4of10 {
    width: 40% !important; }
  .u-md-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    width: 50% !important; }
  .u-md-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-md-size3of5,
  .u-md-size6of10 {
    width: 60% !important; }
  .u-md-size5of8 {
    width: 62.5% !important; }
  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-md-size7of10 {
    width: 70% !important; }
  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    width: 75% !important; }
  .u-md-size4of5,
  .u-md-size8of10 {
    width: 80% !important; }
  .u-md-size5of6,
  .u-md-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-md-size7of8 {
    width: 87.5% !important; }
  .u-md-size9of10 {
    width: 90% !important; }
  .u-md-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

@media (min-width: 992px) {
  [class*="u-lg-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-lg-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-lg-size1of10 {
    width: 10% !important; }
  .u-lg-size1of8 {
    width: 12.5% !important; }
  .u-lg-size1of6,
  .u-lg-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-lg-size1of5,
  .u-lg-size2of10 {
    width: 20% !important; }
  .u-lg-size1of4,
  .u-lg-size2of8,
  .u-lg-size3of12 {
    width: 25% !important; }
  .u-lg-size3of10 {
    width: 30% !important; }
  .u-lg-size1of3,
  .u-lg-size2of6,
  .u-lg-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-lg-size3of8 {
    width: 37.5% !important; }
  .u-lg-size2of5,
  .u-lg-size4of10 {
    width: 40% !important; }
  .u-lg-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-lg-size1of2,
  .u-lg-size2of4,
  .u-lg-size3of6,
  .u-lg-size4of8,
  .u-lg-size5of10,
  .u-lg-size6of12 {
    width: 50% !important; }
  .u-lg-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-lg-size3of5,
  .u-lg-size6of10 {
    width: 60% !important; }
  .u-lg-size5of8 {
    width: 62.5% !important; }
  .u-lg-size2of3,
  .u-lg-size4of6,
  .u-lg-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-lg-size7of10 {
    width: 70% !important; }
  .u-lg-size3of4,
  .u-lg-size6of8,
  .u-lg-size9of12 {
    width: 75% !important; }
  .u-lg-size4of5,
  .u-lg-size8of10 {
    width: 80% !important; }
  .u-lg-size5of6,
  .u-lg-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-lg-size7of8 {
    width: 87.5% !important; }
  .u-lg-size9of10 {
    width: 90% !important; }
  .u-lg-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

@media (min-width: 1200px) {
  [class*="u-xl-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-xl-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-xl-size1of10 {
    width: 10% !important; }
  .u-xl-size1of8 {
    width: 12.5% !important; }
  .u-xl-size1of6,
  .u-xl-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-xl-size1of5,
  .u-xl-size2of10 {
    width: 20% !important; }
  .u-xl-size1of4,
  .u-xl-size2of8,
  .u-xl-size3of12 {
    width: 25% !important; }
  .u-xl-size3of10 {
    width: 30% !important; }
  .u-xl-size1of3,
  .u-xl-size2of6,
  .u-xl-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-xl-size3of8 {
    width: 37.5% !important; }
  .u-xl-size2of5,
  .u-xl-size4of10 {
    width: 40% !important; }
  .u-xl-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-xl-size1of2,
  .u-xl-size2of4,
  .u-xl-size3of6,
  .u-xl-size4of8,
  .u-xl-size5of10,
  .u-xl-size6of12 {
    width: 50% !important; }
  .u-xl-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-xl-size3of5,
  .u-xl-size6of10 {
    width: 60% !important; }
  .u-xl-size5of8 {
    width: 62.5% !important; }
  .u-xl-size2of3,
  .u-xl-size4of6,
  .u-xl-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-xl-size7of10 {
    width: 70% !important; }
  .u-xl-size3of4,
  .u-xl-size6of8,
  .u-xl-size9of12 {
    width: 75% !important; }
  .u-xl-size4of5,
  .u-xl-size8of10 {
    width: 80% !important; }
  .u-xl-size5of6,
  .u-xl-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-xl-size7of8 {
    width: 87.5% !important; }
  .u-xl-size9of10 {
    width: 90% !important; }
  .u-xl-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

@media (min-width: 1700px) {
  [class*="u-su-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-su-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-su-size1of10 {
    width: 10% !important; }
  .u-su-size1of8 {
    width: 12.5% !important; }
  .u-su-size1of6,
  .u-su-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-su-size1of5,
  .u-su-size2of10 {
    width: 20% !important; }
  .u-su-size1of4,
  .u-su-size2of8,
  .u-su-size3of12 {
    width: 25% !important; }
  .u-su-size3of10 {
    width: 30% !important; }
  .u-su-size1of3,
  .u-su-size2of6,
  .u-su-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-su-size3of8 {
    width: 37.5% !important; }
  .u-su-size2of5,
  .u-su-size4of10 {
    width: 40% !important; }
  .u-su-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-su-size1of2,
  .u-su-size2of4,
  .u-su-size3of6,
  .u-su-size4of8,
  .u-su-size5of10,
  .u-su-size6of12 {
    width: 50% !important; }
  .u-su-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-su-size3of5,
  .u-su-size6of10 {
    width: 60% !important; }
  .u-su-size5of8 {
    width: 62.5% !important; }
  .u-su-size2of3,
  .u-su-size4of6,
  .u-su-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-su-size7of10 {
    width: 70% !important; }
  .u-su-size3of4,
  .u-su-size6of8,
  .u-su-size9of12 {
    width: 75% !important; }
  .u-su-size4of5,
  .u-su-size8of10 {
    width: 80% !important; }
  .u-su-size5of6,
  .u-su-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-su-size7of8 {
    width: 87.5% !important; }
  .u-su-size9of10 {
    width: 90% !important; }
  .u-su-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

/** @define utilities */
/* Applies to flex container
   ========================================================================== */
/**
 * Container
 */
.u-flex {
  display: -webkit-box !important;
  display: -webkit-flex !important;
  display: -ms-flexbox !important;
  display: flex !important; }

.u-flexInline {
  display: -webkit-inline-box !important;
  display: -webkit-inline-flex !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important; }

/**
 * Direction: row
 */
.u-flexRow {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: normal !important;
  -webkit-flex-direction: row !important;
  -ms-flex-direction: row !important;
  flex-direction: row !important; }

.u-flexRowReverse {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: reverse !important;
  -webkit-flex-direction: row-reverse !important;
  -ms-flex-direction: row-reverse !important;
  flex-direction: row-reverse !important; }

/**
 * Direction: column
 */
.u-flexCol {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important;
  -webkit-flex-direction: column !important;
  -ms-flex-direction: column !important;
  flex-direction: column !important; }

.u-flexColReverse {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: reverse !important;
  -webkit-flex-direction: column-reverse !important;
  -ms-flex-direction: column-reverse !important;
  flex-direction: column-reverse !important; }

/**
 * Wrap
 */
.u-flexWrap {
  -webkit-flex-wrap: wrap !important;
  -ms-flex-wrap: wrap !important;
  flex-wrap: wrap !important; }

.u-flexNoWrap {
  -webkit-flex-wrap: nowrap !important;
  -ms-flex-wrap: nowrap !important;
  flex-wrap: nowrap !important; }

.u-flexWrapReverse {
  -webkit-flex-wrap: wrap-reverse !important;
  -ms-flex-wrap: wrap-reverse !important;
  flex-wrap: wrap-reverse !important; }

/**
 * Align items along the main axis of the current line of the flex container
 */
.u-flexJustifyStart {
  -webkit-box-pack: start !important;
  -webkit-justify-content: flex-start !important;
  -ms-flex-pack: start !important;
  justify-content: flex-start !important; }

.u-flexJustifyEnd {
  -webkit-box-pack: end !important;
  -webkit-justify-content: flex-end !important;
  -ms-flex-pack: end !important;
  justify-content: flex-end !important; }

.u-flexJustifyCenter {
  -webkit-box-pack: center !important;
  -webkit-justify-content: center !important;
  -ms-flex-pack: center !important;
  justify-content: center !important; }

.u-flexJustifyBetween {
  -webkit-box-pack: justify !important;
  -webkit-justify-content: space-between !important;
  -ms-flex-pack: justify !important;
  justify-content: space-between !important; }

.u-flexJustifyAround {
  -webkit-justify-content: space-around !important;
  -ms-flex-pack: distribute !important;
  justify-content: space-around !important; }

/**
 * Align items in the cross axis of the current line of the flex container
 * Similar to `justify-content` but in the perpendicular direction
 */
.u-flexAlignItemsStart {
  -webkit-box-align: start !important;
  -webkit-align-items: flex-start !important;
  -ms-flex-align: start !important;
  align-items: flex-start !important; }

.u-flexAlignItemsEnd {
  -webkit-box-align: end !important;
  -webkit-align-items: flex-end !important;
  -ms-flex-align: end !important;
  align-items: flex-end !important; }

.u-flexAlignItemsCenter {
  -webkit-box-align: center !important;
  -webkit-align-items: center !important;
  -ms-flex-align: center !important;
  align-items: center !important; }

.u-flexAlignItemsStretch {
  -webkit-box-align: stretch !important;
  -webkit-align-items: stretch !important;
  -ms-flex-align: stretch !important;
  align-items: stretch !important; }

.u-flexAlignItemsBaseline {
  -webkit-box-align: baseline !important;
  -webkit-align-items: baseline !important;
  -ms-flex-align: baseline !important;
  align-items: baseline !important; }

/**
 * Aligns items within the flex container when there is extra
 * space in the cross-axis
 *
 * Has no effect when there is only one line of flex items.
 */
.u-flexAlignContentStart {
  -webkit-align-content: flex-start !important;
  -ms-flex-line-pack: start !important;
  align-content: flex-start !important; }

.u-flexAlignContentEnd {
  -webkit-align-content: flex-end !important;
  -ms-flex-line-pack: end !important;
  align-content: flex-end !important; }

.u-flexAlignContentCenter {
  -webkit-align-content: center !important;
  -ms-flex-line-pack: center !important;
  align-content: center !important; }

.u-flexAlignContentStretch {
  -webkit-align-content: stretch !important;
  -ms-flex-line-pack: stretch !important;
  align-content: stretch !important; }

.u-flexAlignContentBetween {
  -webkit-align-content: space-between !important;
  -ms-flex-line-pack: justify !important;
  align-content: space-between !important; }

.u-flexAlignContentAround {
  -webkit-align-content: space-around !important;
  -ms-flex-line-pack: distribute !important;
  align-content: space-around !important; }

/**
 * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
 */
/* postcss-bem-linter: ignore */
.u-flex > *,
.u-flexInline > * {
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  /* 1 */ }

/* Applies to flex items
   ========================================================================== */
/**
 * Override default alignment of single item when specified by `align-items`
 */
.u-flexAlignSelfStart {
  -webkit-align-self: flex-start !important;
  -ms-flex-item-align: start !important;
  align-self: flex-start !important; }

.u-flexAlignSelfEnd {
  -webkit-align-self: flex-end !important;
  -ms-flex-item-align: end !important;
  align-self: flex-end !important; }

.u-flexAlignSelfCenter {
  -webkit-align-self: center !important;
  -ms-flex-item-align: center !important;
  -ms-grid-row-align: center !important;
  align-self: center !important; }

.u-flexAlignSelfStretch {
  -webkit-align-self: stretch !important;
  -ms-flex-item-align: stretch !important;
  -ms-grid-row-align: stretch !important;
  align-self: stretch !important; }

.u-flexAlignSelfBaseline {
  -webkit-align-self: baseline !important;
  -ms-flex-item-align: baseline !important;
  align-self: baseline !important; }

.u-flexAlignSelfAuto {
  -webkit-align-self: auto !important;
  -ms-flex-item-align: auto !important;
  -ms-grid-row-align: auto !important;
  align-self: auto !important; }

/**
 * Change order without editing underlying HTML
 */
.u-flexOrderFirst {
  -webkit-box-ordinal-group: 0 !important;
  -webkit-order: -1 !important;
  -ms-flex-order: -1 !important;
  order: -1 !important; }

.u-flexOrderLast {
  -webkit-box-ordinal-group: 2 !important;
  -webkit-order: 1 !important;
  -ms-flex-order: 1 !important;
  order: 1 !important; }

.u-flexOrderNone {
  -webkit-box-ordinal-group: 1 !important;
  -webkit-order: 0 !important;
  -ms-flex-order: 0 !important;
  order: 0 !important; }

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    - http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis. Using this
 *    instead of `auto` as this matches what the default would be with `flex`
 *    shorthand - http://git.io/vllWx
 */
.u-flexGrow1 {
  -webkit-box-flex: 1 !important;
  -webkit-flex: 1 1 0% !important;
  -ms-flex: 1 1 0% !important;
  flex: 1 1 0% !important;
  /* 1 */ }

.u-flexGrow2 {
  -webkit-box-flex: 2 !important;
  -webkit-flex: 2 1 0% !important;
  -ms-flex: 2 1 0% !important;
  flex: 2 1 0% !important; }

.u-flexGrow3 {
  -webkit-box-flex: 3 !important;
  -webkit-flex: 3 1 0% !important;
  -ms-flex: 3 1 0% !important;
  flex: 3 1 0% !important; }

.u-flexGrow4 {
  -webkit-box-flex: 4 !important;
  -webkit-flex: 4 1 0% !important;
  -ms-flex: 4 1 0% !important;
  flex: 4 1 0% !important; }

.u-flexGrow5 {
  -webkit-box-flex: 5 !important;
  -webkit-flex: 5 1 0% !important;
  -ms-flex: 5 1 0% !important;
  flex: 5 1 0% !important; }

/**
 * Aligning with `auto` margins
 * http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */
.u-flexExpand {
  margin: auto !important; }

.u-flexExpandLeft {
  margin-left: auto !important; }

.u-flexExpandRight {
  margin-right: auto !important; }

.u-flexExpandTop {
  margin-top: auto !important; }

.u-flexExpandBottom {
  margin-bottom: auto !important; }

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */
.u-textBreak {
  word-wrap: break-word !important; }

/**
 * Horizontal text alignment
 */
.u-textCenter {
  text-align: center !important; }

.u-textLeft {
  text-align: left !important; }

.u-textRight {
  text-align: right !important; }

/**
 * Inherit the ancestor's text color.
 */
.u-textInheritColor {
  color: inherit !important; }

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, IE 10+
 * 2. Safari 7 and future browsers
 * 3. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 */
.u-textKern {
  font-feature-settings: "kern" 1;
  /* 1 */
  font-kerning: normal;
  /* 2 */
  text-rendering: optimizeLegibility;
  /* 3 */ }

/**
 * Prevent whitespace wrapping
 */
.u-textNoWrap {
  white-space: nowrap !important; }

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */
.u-textTruncate {
  max-width: 100%;
  /* 1 */
  overflow: hidden !important;
  -o-text-overflow: ellipsis !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important;
  /* 2 */ }

/** @define Button */
/**
 * The button classes are best applied to links and buttons.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */
/**
 * 1. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 2. Inherit text color from ancestor.
 * 3. Inherit font styles from ancestor.
 * 4. Prevent button text from being selectable.
 */
.Button {
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 1px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  cursor: pointer;
  display: inline-block;
  font: inherit;
  /* 3 */
  margin: 0;
  padding: 0.4em 0.75em;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  /* 4 */ }

/**
 * Remove excess padding and border in Firefox 4+
 */
.Button::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */
.Button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

/**
 * UI states
 */
.Button:hover,
.Button:focus,
.Button:active {
  text-decoration: none; }

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: var(--Button-disabled-opacity); }

/** @define FlexEmbed */
/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */
.FlexEmbed {
  display: block;
  overflow: hidden;
  position: relative; }

/**
 * The aspect-ratio hack is applied to an empty element because it allows
 * the component to respect `max-height`. Default aspect ratio is 1:1.
 */
.FlexEmbed-ratio {
  display: block;
  padding-bottom: 100%;
  width: 100%; }

/**
 * Modifier: 3:1 aspect ratio
 */
.FlexEmbed-ratio--3by1 {
  padding-bottom: -webkit-calc(100% / 3);
  padding-bottom: calc(100% / 3); }

/**
 * Modifier: 2:1 aspect ratio
 */
.FlexEmbed-ratio--2by1 {
  padding-bottom: 50%; }

/**
 * Modifier: 16:9 aspect ratio
 */
.FlexEmbed-ratio--16by9 {
  padding-bottom: 56.25%; }

/**
 * Modifier: 4:3 aspect ratio
 */
.FlexEmbed-ratio--4by3 {
  padding-bottom: 75%; }

/**
 * Fit the content to the aspect ratio
 */
.FlexEmbed-content {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%; }

/** @define Grid */
/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */
/* Grid container
   ========================================================================== */
/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */
.Grid {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  /* 1 */
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */ }

/**
 * Modifier: center align all grid cells
 */
.Grid--alignCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

/**
 * Modifier: right align all grid cells
 */
.Grid--alignRight {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

/**
 * Modifier: middle-align grid cells
 */
.Grid--alignMiddle {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }

/**
 * Modifier: bottom-align grid cells
 */
.Grid--alignBottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end; }

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */
.Grid--fit > .Grid-cell {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
  /* 1 */ }

/**
 * Modifier: all cells match height of tallest cell in a row
 */
.Grid--equalHeight > .Grid-cell {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

/**
 * Modifier: gutters
 */
.Grid--withGutter {
  margin: 0 -webkit-calc(-0.5 * 18px);
  margin: 0 calc(-0.5 * 18px); }

.Grid--withGutter > .Grid-cell {
  padding: 0 -webkit-calc(0.5 * 18px);
  padding: 0 calc(0.5 * 18px); }

/* Grid cell
   ========================================================================== */
/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'Grid'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `Grid-cell` container - https://git.io/vw5oF
 */
.Grid-cell {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  /* 1 */
  min-width: 0;
  /* 2 */ }

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */
.Grid-cell--center {
  margin: 0 auto; }

.xs-Grid--alignCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

.xs-Grid--alignRight {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

.xs-Grid--alignMiddle {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }

.xs-Grid--alignBottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end; }

.xs-Grid-cell--center {
  margin: 0 auto; }

@media (min-width: 544px) {
  .sm-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .sm-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .sm-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .sm-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .sm-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 768px) {
  .md-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .md-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .md-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .md-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .md-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 992px) {
  .lg-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .lg-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .lg-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .lg-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .lg-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 1200px) {
  .xl-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .xl-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .xl-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .xl-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .xl-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 1700px) {
  .su-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .su-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .su-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .su-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .su-Grid-cell--center {
    margin: 0 auto; } }

.Grid--withGutter {
  margin: 0 -12px; }
  @media (min-width: 992px) {
    .Grid--withGutter {
      margin: 0 -24px; } }

.Grid--withGutter > .Grid-cell {
  padding: 0 12px; }
  @media (min-width: 992px) {
    .Grid--withGutter > .Grid-cell {
      padding: 0 24px; } }

.Grid--withGutterSm {
  margin: 0 -1px; }
  @media (min-width: 992px) {
    .Grid--withGutterSm {
      margin: 0 -1px; } }

.Grid--withGutterSm > .Grid-cell {
  padding: 0 1px; }
  @media (min-width: 992px) {
    .Grid--withGutterSm > .Grid-cell {
      padding: 0 1px; } }

.Grid--withGutterLg {
  margin: 0 -24px; }
  @media (min-width: 992px) {
    .Grid--withGutterLg {
      margin: 0 -72px; } }

.Grid--withGutterLg > .Grid-cell {
  padding: 0 24px; }
  @media (min-width: 992px) {
    .Grid--withGutterLg > .Grid-cell {
      padding: 0 72px; } }

/**
  * Simple page-level setup from InuitCSS.
  *
  * 1. Set the default `font-size` and `line-height` for the entire project,
  *    sourced from our default variables. The `font-size` is calculated to exist
  *    in ems, the `line-height` is calculated to exist unitlessly.
  * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
  *    navigating between pages that do/do not have enough content to produce
  *    scrollbars naturally.
  * 3. Ensure the page always fills at least the entire height of the viewport.
  */
html {
  background-color: #fdfdfd;
  min-height: 100%;
  /* 3 */
  overflow-y: scroll;
  /* 2 */ }

a {
  color: currentColor;
  text-decoration: none; }
  a:hover, a:active, a:focus {
    color: currentColor; }

img {
  max-width: 100%;
  font-style: italic;
  vertical-align: middle; }

.gm-style img,
img[width],
img[height] {
  max-width: none; }

.o-image--circle {
  border-radius: 50%; }

/* uncss:ignore */
h1, h2, h3, h4, h5, h6,
blockquote,
ul, ol, li, dl, dd
p, address,
table, time,
form, fieldset, legend,
figure, figcaption,
table, th, td, caption
pre, small,
em, b {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal; }

html {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  font-size: 100%;
  line-height: 1.5;
  text-align: left;
  text-rendering: geometricPrecision;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

/* uncss:ignore */
ul, ol, li, dl,
blockquote, p, address,
table, time,
fieldset,
pre {
  margin-bottom: 18px; }

.o-posAbsoluteCenter {
  left: 50%;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }

.o-posFixedCenter {
  left: 50%;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }

.o-posFullScreen {
  bottom: 0;
  left: 0;
  margin: auto;
  position: fixed;
  right: 0;
  top: 0; }

.o-posAbsoluteCenterAlt {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0; }

.o-posFullScreen,
.o-posFixedCenter {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.o-container {
  height: inherit;
  margin: 0 auto;
  max-width: 1040px;
  padding: 0 24px;
  position: relative; }
  .o-container:before, .o-container:after {
    content: " ";
    display: table; }
  .o-container:after {
    clear: both; }
  .o-container p:last-child,
  .o-container p:last-child a,
  .o-container li:last-child,
  .o-container li:last-child a,
  .o-container ol:last-child,
  .o-container ol:last-child a {
    margin-bottom: 0; }
  @media (min-width: 544px) {
    .o-container {
      padding: 0 36px; } }
  .o-container--md {
    height: inherit;
    margin: 0 auto;
    max-width: 660px;
    padding: 0 24px;
    position: relative; }
    .o-container--md:before, .o-container--md:after {
      content: " ";
      display: table; }
    .o-container--md:after {
      clear: both; }
    .o-container--md p:last-child,
    .o-container--md p:last-child a,
    .o-container--md li:last-child,
    .o-container--md li:last-child a,
    .o-container--md ol:last-child,
    .o-container--md ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--md {
        padding: 0 36px; } }
  .o-container--xl {
    height: inherit;
    margin: 0 auto;
    max-width: 1200px;
    padding: 0 24px;
    position: relative; }
    .o-container--xl:before, .o-container--xl:after {
      content: " ";
      display: table; }
    .o-container--xl:after {
      clear: both; }
    .o-container--xl p:last-child,
    .o-container--xl p:last-child a,
    .o-container--xl li:last-child,
    .o-container--xl li:last-child a,
    .o-container--xl ol:last-child,
    .o-container--xl ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--xl {
        padding: 0 36px; } }
  .o-container--super {
    max-width: 100%;
    padding: 0 36px; }
    @media (min-width: 544px) {
      .o-container--super {
        padding: 0 96px; } }

.o-grid {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }

.o-grid > * {
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 5em;
  -ms-flex: 1 0 5em;
  flex: 1 0 5em; }

.o-grid--spaceBetween {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between; }

[data-modal-toggle],
[data-toggle-fold],
[data-dismiss] {
  cursor: pointer; }

ul {
  list-style-type: disc;
  margin-left: 18px;
  padding-left: 0; }

ol {
  list-style-type: decimal; }

li {
  margin-bottom: 0; }
  li > ul,
  li > ol {
    margin-bottom: 0; }

.o-list {
  margin-left: 18px;
  padding-left: 0; }

.o-listClean {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0; }

.o-listInline {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0; }
  .o-listInline li,
  .o-listInline div {
    display: inline-block; }
    .o-listInline li:not(:last-child),
    .o-listInline div:not(:last-child) {
      margin-right: 6px; }

a {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out; }
  a:hover, a:active, a:focus {
    -webkit-transition-property: all;
    -o-transition-property: all;
    transition-property: all;
    -webkit-transition-duration: 500ms;
    -o-transition-duration: 500ms;
    transition-duration: 500ms;
    -webkit-transition-timing-function: ease-out;
    -o-transition-timing-function: ease-out;
    transition-timing-function: ease-out; }

.o-linkBuried {
  display: block;
  width: 100%;
  margin-bottom: 12px; }
  .o-linkBuried:hover .o-linkBuriedTarget, .o-linkBuried:active .o-linkBuriedTarget, .o-linkBuried:focus .o-linkBuriedTarget {
    background-color: #65bd24; }

.o-linkBuriedTarget {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  color: #151515; }

.o-link {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(38, 38, 38, 0)), color-stop(50%, rgba(38, 38, 38, 0.4)));
  background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: -o-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: linear-gradient(to bottom, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-link:hover, .o-link:active, .o-link:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLink a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(38, 38, 38, 0)), color-stop(50%, rgba(38, 38, 38, 0.4)));
  background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: -o-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: linear-gradient(to bottom, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLink a:hover, .o-childLink a:active, .o-childLink a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkGrey {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(179, 179, 179, 0)), color-stop(50%, #b3b3b3));
  background-image: -webkit-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-image: -o-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-image: linear-gradient(to bottom, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-linkGrey:hover, .o-linkGrey:active, .o-linkGrey:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkGrey a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(179, 179, 179, 0)), color-stop(50%, #b3b3b3));
  background-image: -webkit-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-image: -o-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-image: linear-gradient(to bottom, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLinkGrey a:hover, .o-childLinkGrey a:active, .o-childLinkGrey a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkLite {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(232, 232, 232, 0)), color-stop(50%, #e8e8e8));
  background-image: -webkit-linear-gradient(top, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-image: -o-linear-gradient(top, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-image: linear-gradient(to bottom, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-linkLite:hover, .o-linkLite:active, .o-linkLite:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkLite a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(232, 232, 232, 0)), color-stop(50%, #e8e8e8));
  background-image: -webkit-linear-gradient(top, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-image: -o-linear-gradient(top, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-image: linear-gradient(to bottom, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLinkLite a:hover, .o-childLinkLite a:active, .o-childLinkLite a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkBrand {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(101, 189, 36, 0)), color-stop(50%, #65bd24));
  background-image: -webkit-linear-gradient(top, rgba(101, 189, 36, 0) 50%, #65bd24 50%);
  background-image: -o-linear-gradient(top, rgba(101, 189, 36, 0) 50%, #65bd24 50%);
  background-image: linear-gradient(to bottom, rgba(101, 189, 36, 0) 50%, #65bd24 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-linkBrand:hover, .o-linkBrand:active, .o-linkBrand:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkBrand a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(101, 189, 36, 0)), color-stop(50%, #65bd24));
  background-image: -webkit-linear-gradient(top, rgba(101, 189, 36, 0) 50%, #65bd24 50%);
  background-image: -o-linear-gradient(top, rgba(101, 189, 36, 0) 50%, #65bd24 50%);
  background-image: linear-gradient(to bottom, rgba(101, 189, 36, 0) 50%, #65bd24 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLinkBrand a:hover, .o-childLinkBrand a:active, .o-childLinkBrand a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkWhite {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(255, 255, 255, 0)), color-stop(50%, #FFF));
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-image: -o-linear-gradient(top, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-linkWhite:hover, .o-linkWhite:active, .o-linkWhite:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkWhite a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(255, 255, 255, 0)), color-stop(50%, #FFF));
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-image: -o-linear-gradient(top, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLinkWhite a:hover, .o-childLinkWhite a:active, .o-childLinkWhite a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkInvisible {
  background-image: none; }
  .o-linkInvisible:hover, .o-linkInvisible:active, .o-linkInvisible:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkInvisible a {
  background-image: none; }
  .o-childLinkInvisible a:hover, .o-childLinkInvisible a:active, .o-childLinkInvisible a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-aligner {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

.o-aligner-item {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1; }

.o-aligner-item--top {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start; }

.o-aligner-item--bottom {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end; }

.o-aligner-item--fixed {
  -webkit-box-flex: 0;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  max-width: 50%; }

.o-ghost {
  font-size: 0;
  height: inherit; }

.o-ghost:before {
  content: "";
  height: 100%;
  margin-left: -1px;
  width: 1px; }

.o-ghost:before,
.o-ghost-child {
  display: inline-block;
  vertical-align: middle; }

.HzRule {
  border: 0;
  border-top: 1px solid #e8e8e8;
  height: 0;
  margin-top: -webkit-calc( 24px - 1px);
  margin-top: calc( 24px - 1px);
  margin-bottom: 24px; }

.Rule {
  border: 0;
  border-top: 1px solid #65bd24; }

.DivRule--light {
  border: 0;
  border-top: #dbdbdb solid 1px; }

.DivRule--bottom {
  border-bottom: 1px solid #151515; }

.VertRule--left {
  border-left: 1px solid #dbdbdb; }

.o-icon {
  width: 32px;
  height: 32px;
  display: inline-block;
  fill: currentColor;
  cursor: pointer;
  display: inline-block;
  line-height: 1;
  position: relative;
  text-align: center;
  vertical-align: middle; }
  .o-icon:hover, .o-icon:active, .o-icon:focus {
    outline: 0; }
  .o-icon--stroke {
    fill: transparent;
    stroke: currentColor;
    stroke-width: 2px;
    stroke-linejoin: round; }
  .o-icon--nav {
    height: 20px;
    margin-left: 12px;
    width: 15px; }
  .o-icon--sm {
    height: 10px;
    vertical-align: baseline;
    width: 10px; }
    @media (min-width: 544px) {
      .o-icon--sm {
        width: 11px;
        height: 11px; } }
  .o-icon--md {
    width: 27px;
    height: 27px; }
    @media (min-width: 544px) {
      .o-icon--md {
        width: 36px;
        height: 36px; } }
  .o-icon--lg {
    width: 2rem;
    height: 2rem; }
  .o-icon--xl {
    border: 1px solid currentColor;
    height: 48px;
    width: 48px; }
    @media (min-width: 544px) {
      .o-icon--xl {
        height: 60px;
        width: 60px; } }
  .o-icon--super {
    width: 2.5rem;
    height: 2.5rem; }
    @media (min-width: 544px) {
      .o-icon--super {
        width: 3rem;
        height: 3rem; } }
  .o-icon--left {
    margin-right: 3px; }
    @media (min-width: 544px) {
      .o-icon--left {
        margin-right: 4px; } }
  .o-icon--leftSm {
    margin-right: 1px; }
    @media (min-width: 544px) {
      .o-icon--leftSm {
        margin-right: 0.125rem; } }
  .o-icon--right {
    margin-left: 8px; }
    @media (min-width: 544px) {
      .o-icon--right {
        margin-left: 12px; } }
  .o-icon--rightSm {
    margin-left: 1px; }
    @media (min-width: 544px) {
      .o-icon--rightSm {
        margin-left: 0.125rem; } }
  .o-icon + [class^="-arrow-inline"] {
    vertical-align: super; }
  .o-icon--textAlign {
    line-height: inherit;
    -webkit-transform: translateY(-2px);
    -ms-transform: translateY(-2px);
    transform: translateY(-2px);
    vertical-align: middle; }
  .o-icon--textLgAlign {
    -webkit-transform: translateY(1px);
    -ms-transform: translateY(1px);
    transform: translateY(1px); }
  .o-icon--buttonAlign {
    line-height: inherit;
    -webkit-transform: translateY(-2px);
    -ms-transform: translateY(-2px);
    transform: translateY(-2px);
    vertical-align: middle; }
  .o-icon--formAlign {
    position: relative;
    vertical-align: top; }
  .o-icon--mediaAlign {
    -webkit-transform: translateY(-0.25rem);
    -ms-transform: translateY(-0.25rem);
    transform: translateY(-0.25rem); }

.o-coverImage {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none; }

.o-coverImage--dark {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%; }
  .o-coverImage--dark:before {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#65bd24), to(rgba(101, 189, 36, 0.2)));
    background-image: -webkit-linear-gradient(top, #65bd24 0%, rgba(101, 189, 36, 0.2) 100%);
    background-image: -o-linear-gradient(top, #65bd24 0%, rgba(101, 189, 36, 0.2) 100%);
    background-image: linear-gradient(to bottom, #65bd24 0%, rgba(101, 189, 36, 0.2) 100%);
    background-blend-mode: multiply;
    content: " ";
    opacity: 1; }

@media (max-width: 767px) {
  .o-coverImage--blends {
    background-position-x: 0; } }

.o-containImage {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none;
  background-size: contain; }

.FlexEmbed-fitImage {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%; }

.FlexEmbed-content--dark:before {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(101, 189, 36, 0.9)), to(rgba(101, 189, 36, 0)));
  background-image: -webkit-linear-gradient(top, rgba(101, 189, 36, 0.9) 0%, rgba(101, 189, 36, 0) 100%);
  background-image: -o-linear-gradient(top, rgba(101, 189, 36, 0.9) 0%, rgba(101, 189, 36, 0) 100%);
  background-image: linear-gradient(to bottom, rgba(101, 189, 36, 0.9) 0%, rgba(101, 189, 36, 0) 100%);
  background-blend-mode: multiply;
  content: " ";
  opacity: 1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.c-text--xs {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 12px; }
  @media (min-width: 544px) {
    .c-text--xs {
      font-size: 12px; } }
  @media (min-width: 768px) {
    .c-text--xs {
      font-size: 12px; } }
  .c-text--xs > li,
  .c-text--xs > li a,
  .c-text--xs > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-text--sm {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 13px; }
  @media (min-width: 544px) {
    .c-text--sm {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .c-text--sm {
      font-size: 14px; } }
  .c-text--sm > li,
  .c-text--sm > li a,
  .c-text--sm > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-text {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 16px; }
  @media (min-width: 544px) {
    .c-text {
      font-size: 18px; } }
  @media (min-width: 768px) {
    .c-text {
      font-size: 21px; } }
  .c-text > li,
  .c-text > li a,
  .c-text > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-text--medium {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 16px;
  color: gray; }
  @media (min-width: 544px) {
    .c-text--medium {
      font-size: 18px; } }
  @media (min-width: 768px) {
    .c-text--medium {
      font-size: 21px; } }
  .c-text--medium > li,
  .c-text--medium > li a,
  .c-text--medium > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-text--intro {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 16px;
  color: gray;
  margin-bottom: 12px; }
  @media (min-width: 544px) {
    .c-text--intro {
      font-size: 18px; } }
  @media (min-width: 768px) {
    .c-text--intro {
      font-size: 21px; } }
  .c-text--intro > li,
  .c-text--intro > li a,
  .c-text--intro > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-text--aside {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-text--aside {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .c-text--aside {
      font-size: 14px; } }
  .c-text--aside > li,
  .c-text--aside > li a,
  .c-text--aside > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-text--meta {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 13px;
  color: gray !important; }
  @media (min-width: 544px) {
    .c-text--meta {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .c-text--meta {
      font-size: 14px; } }
  .c-text--meta > li,
  .c-text--meta > li a,
  .c-text--meta > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }
  .c-text--meta > a {
    border-color: transparent !important; }
    .c-text--meta > a:hover, .c-text--meta > a:active, .c-text--meta > a:focus {
      border-color: gray !important; }
  @media (min-width: 544px) {
    .c-text--meta {
      margin: auto; } }

.c-text-block > * {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 16px; }
  @media (min-width: 544px) {
    .c-text-block > * {
      font-size: 18px; } }
  @media (min-width: 768px) {
    .c-text-block > * {
      font-size: 21px; } }
  .c-text-block > * > li,
  .c-text-block > * > li a,
  .c-text-block > * > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-text-block--footer {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
  margin: 0; }
  .c-text-block--footer::before {
    background-color: rgba(253, 253, 253, 0.2);
    content: " ";
    display: block;
    height: 1px;
    margin: 24px 0 27.6px;
    width: 2.5%; }
  .c-text-block--footer > * {
    color: #151515;
    font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.0125em;
    line-height: 1.5;
    font-size: 16px;
    margin-bottom: 0; }
    @media (min-width: 544px) {
      .c-text-block--footer > * {
        font-size: 18px; } }
    @media (min-width: 768px) {
      .c-text-block--footer > * {
        font-size: 21px; } }
    .c-text-block--footer > * > li,
    .c-text-block--footer > * > li a,
    .c-text-block--footer > * > a {
      color: currentColor;
      font-size: inherit;
      margin: 0; }

.c-list--itemTag {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 13px;
  display: inline-block;
  width: 18px; }
  @media (min-width: 544px) {
    .c-list--itemTag {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .c-list--itemTag {
      font-size: 14px; } }
  .c-list--itemTag > li,
  .c-list--itemTag > li a,
  .c-list--itemTag > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-list--meta {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 13px;
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
  color: gray;
  margin-bottom: 30px; }
  @media (min-width: 544px) {
    .c-list--meta {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .c-list--meta {
      font-size: 14px; } }
  .c-list--meta > li,
  .c-list--meta > li a,
  .c-list--meta > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-list--meta-title {
  color: #151515 !important;
  margin: 30px 0 15px !important; }
  .c-list--meta-title:first-child {
    margin-top: 0 !important; }

.u-textWtLt {
  font-family: Light, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtRg {
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtMd {
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

ul, ol, dl,
p, address,
table, time,
fieldset, figcaption,
pre, a {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 16px; }
  @media (min-width: 544px) {
    ul, ol, dl,
    p, address,
    table, time,
    fieldset, figcaption,
    pre, a {
      font-size: 18px; } }
  @media (min-width: 768px) {
    ul, ol, dl,
    p, address,
    table, time,
    fieldset, figcaption,
    pre, a {
      font-size: 21px; } }
  ul > li,
  ul > li a,
  ul > a, ol > li,
  ol > li a,
  ol > a, dl > li,
  dl > li a,
  dl > a,
  p > li,
  p > li a,
  p > a, address > li,
  address > li a,
  address > a,
  table > li,
  table > li a,
  table > a, time > li,
  time > li a,
  time > a,
  fieldset > li,
  fieldset > li a,
  fieldset > a, figcaption > li,
  figcaption > li a,
  figcaption > a,
  pre > li,
  pre > li a,
  pre > a, a > li,
  a > li a,
  a > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

em,
.u-textEm {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal; }

b,
strong,
.u-textBold {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 14px;
  margin-bottom: 9px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    b,
    strong,
    .u-textBold {
      font-size: 15px; } }
  @media (min-width: 768px) {
    b,
    strong,
    .u-textBold {
      font-size: 15px; } }
  b > li,
  b > li a,
  b > a,
  strong > li,
  strong > li a,
  strong > a,
  .u-textBold > li,
  .u-textBold > li a,
  .u-textBold > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

blockquote,
.Blockquote {
  color: gray;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  font-size: 16px;
  margin-bottom: 18px; }
  @media (min-width: 544px) {
    blockquote,
    .Blockquote {
      font-size: 18px;
      margin-bottom: 24px; } }

.c-display {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: -0.005em;
  line-height: 1.1;
  margin-bottom: 0;
  text-align: left;
  font-size: 40px; }
  @media (min-width: 544px) {
    .c-display {
      font-size: 54px; } }
  @media (min-width: 992px) {
    .c-display {
      font-size: 60px; } }
  .c-display > li,
  .c-display > li a,
  .c-display > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.25em;
  line-height: 1.25;
  margin-bottom: 0;
  text-align: left;
  font-size: 44px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-headline {
      font-size: 54px; } }
  @media (min-width: 992px) {
    .c-headline {
      font-size: 72px; } }
  .c-headline > li,
  .c-headline > li a,
  .c-headline > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--md {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.25em;
  line-height: 1.25;
  margin-bottom: 0;
  text-align: left;
  font-size: 18px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-headline--md {
      font-size: 22px; } }
  @media (min-width: 992px) {
    .c-headline--md {
      font-size: 27px; } }
  .c-headline--md > li,
  .c-headline--md > li a,
  .c-headline--md > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--sm {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.125em;
  line-height: 1.5;
  margin-bottom: 0;
  text-align: left;
  font-size: 16px;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-headline--sm {
      font-size: 20px; } }
  @media (min-width: 992px) {
    .c-headline--sm {
      font-size: 21px; } }
  .c-headline--sm > li,
  .c-headline--sm > li a,
  .c-headline--sm > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--xs {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.1em;
  line-height: 1.25;
  margin-bottom: 0;
  text-align: left;
  font-size: 13px;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-headline--xs {
      font-size: 14px; } }
  .c-headline--xs > li,
  .c-headline--xs > li a,
  .c-headline--xs > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline em {
  font-family: inherit;
  font-style: normal;
  font-weight: normal; }

h2 + h3 {
  margin-top: 4.8px; }

h3 + p {
  margin-top: 9.6px; }

@media (max-width: 1199px) {
  span.u-lg-lineBreak {
    display: table !important;
    margin: auto; } }

@media (min-width: 544px) {
  .u-sm-lineBreak {
    display: table !important; } }

@media (max-width: 767px) {
  span.u-smDown-lineBreak {
    display: table !important; } }

@media (max-width: 767px) {
  .u-smDown-hide {
    display: none !important; } }

.c-content--post {
  padding-bottom: 7.5vh !important; }

.c-content .FlexEmbed,
.c-postCell .FlexEmbed {
  background-color: #151515; }

.c-header {
  padding: 3.6vh 0 4.5vh;
  position: relative; }

@media (min-width: 544px) {
  .c-header-brand {
    margin-bottom: 4.5vh; } }

.c-header-logo > img {
  margin-bottom: 0;
  width: 150px; }
  @media (min-width: 544px) {
    .c-header-logo > img {
      width: 300px; } }

.c-nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0;
  padding: 0 36px; }
  @media (min-width: 992px) {
    .c-nav {
      padding: 0 4%; } }
  @media (min-width: 1200px) {
    .c-nav {
      padding: 0 12%; } }
  @media (min-width: 1700px) {
    .c-nav {
      padding: 0 18%; } }
  @media (max-width: 767px) {
    .c-nav {
      display: none; } }

.c-nav-item {
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  margin: 0; }
  .c-nav-item a {
    color: #151515;
    font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.075em;
    line-height: 1.5;
    font-size: 13px;
    text-transform: uppercase;
    border-bottom: 1px solid transparent;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important;
    padding-bottom: 6px; }
    @media (min-width: 544px) {
      .c-nav-item a {
        font-size: 14px; } }
    @media (min-width: 768px) {
      .c-nav-item a {
        font-size: 14px; } }
    .c-nav-item a > li,
    .c-nav-item a > li a,
    .c-nav-item a > a {
      color: currentColor;
      font-size: inherit;
      margin: 0; }
    @media (max-width: 767px) {
      .c-nav-item a {
        line-height: 36px; } }
  .c-nav-item.is-active a {
    border-color: #151515; }
  .c-nav-item:hover a, .c-nav-item:active a, .c-nav-item:focus a {
    border-color: #151515;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

.c-nav-trigger {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase;
  border: 1px solid #e8e8e8;
  border-radius: 3px;
  height: 107%;
  padding: 6px 12px;
  position: absolute;
  right: 24px;
  top: 0; }
  @media (min-width: 544px) {
    .c-nav-trigger {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .c-nav-trigger {
      font-size: 14px; } }
  .c-nav-trigger > li,
  .c-nav-trigger > li a,
  .c-nav-trigger > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }
  @media (min-width: 544px) {
    .c-nav-trigger {
      display: none; } }

.c-header-infoAlign {
  border-bottom: 1px solid #65bd24;
  padding-bottom: 7px;
  -webkit-transform: translate(0, 7px);
  -ms-transform: translate(0, 7px);
  transform: translate(0, 7px); }

.c-header-info {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase;
  color: #65bd24; }
  @media (min-width: 544px) {
    .c-header-info {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .c-header-info {
      font-size: 14px; } }
  .c-header-info > li,
  .c-header-info > li a,
  .c-header-info > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-postGrid > * {
  -webkit-flex-basis: 50vw;
  -ms-flex-preferred-size: 50vw;
  flex-basis: 50vw; }
  @media (min-width: 544px) {
    .c-postGrid > * {
      -webkit-flex-basis: 20vw;
      -ms-flex-preferred-size: 20vw;
      flex-basis: 20vw; } }

.c-postGrid .c-postCell:not(:first-child) .FlexEmbed,
.c-postGrid--inPost .c-postCell:not(:first-child) .FlexEmbed {
  margin-left: 1px; }

.c-postGrid .FlexEmbed-ratio {
  padding-bottom: 25vh; }
  @media (min-width: 544px) {
    .c-postGrid .FlexEmbed-ratio {
      padding-bottom: 50vh; } }

.c-postGrid--inPost > * {
  -webkit-flex-basis: 50%;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%; }
  @media (min-width: 544px) {
    .c-postGrid--inPost > * {
      -webkit-flex-basis: 20%;
      -ms-flex-preferred-size: 20%;
      flex-basis: 20%; } }

.c-postGrid--inPost .FlexEmbed-ratio {
  padding-bottom: 12.5vh; }
  @media (min-width: 544px) {
    .c-postGrid--inPost .FlexEmbed-ratio {
      padding-bottom: 25vh; } }

a.c-postCell {
  display: block;
  width: 100%;
  border: 0;
  margin-bottom: 1px;
  position: relative; }
  a.c-postCell:hover .o-linkBuriedTarget, a.c-postCell:active .o-linkBuriedTarget, a.c-postCell:focus .o-linkBuriedTarget {
    background-color: #65bd24; }
  a.c-postCell:hover .c-postCell-headline,
  a.c-postCell:hover .c-postCell-subheadline, a.c-postCell:active .c-postCell-headline,
  a.c-postCell:active .c-postCell-subheadline, a.c-postCell:focus .c-postCell-headline,
  a.c-postCell:focus .c-postCell-subheadline {
    -webkit-transition-property: all;
    -o-transition-property: all;
    transition-property: all;
    -webkit-transition-duration: 500ms;
    -o-transition-duration: 500ms;
    transition-duration: 500ms;
    -webkit-transition-timing-function: ease-out;
    -o-transition-timing-function: ease-out;
    transition-timing-function: ease-out;
    color: #65bd24; }
  a.c-postCell:hover .c-imageBlend, a.c-postCell:active .c-imageBlend, a.c-postCell:focus .c-imageBlend {
    -webkit-transition-property: all;
    -o-transition-property: all;
    transition-property: all;
    -webkit-transition-duration: 500ms;
    -o-transition-duration: 500ms;
    transition-duration: 500ms;
    -webkit-transition-timing-function: ease-out;
    -o-transition-timing-function: ease-out;
    transition-timing-function: ease-out;
    background-color: rgba(21, 21, 21, 0.88); }

.c-postCell-headline,
.c-postCell-subheadline {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase;
  color: #FFF;
  padding: 0 15%;
  text-align: center; }
  @media (min-width: 544px) {
    .c-postCell-headline,
    .c-postCell-subheadline {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .c-postCell-headline,
    .c-postCell-subheadline {
      font-size: 14px; } }
  .c-postCell-headline > li,
  .c-postCell-headline > li a,
  .c-postCell-headline > a,
  .c-postCell-subheadline > li,
  .c-postCell-subheadline > li a,
  .c-postCell-subheadline > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }
  .c-postCell-headline:not(:first-child),
  .c-postCell-subheadline:not(:first-child) {
    margin-top: 6px; }

.c-postCell-subheadline {
  display: block;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

.FlexEmbed-ratio--hero {
  padding-bottom: 90%;
  padding-bottom: 90%; }
  @media (min-width: 544px) {
    .FlexEmbed-ratio--hero {
      padding-bottom: 56.25%;
      padding-bottom: 50vh; } }
  @media (min-width: 1200px) {
    .FlexEmbed-ratio--hero {
      padding-bottom: 50%;
      padding-bottom: 81.5vh; } }

.c-post-hgroup {
  margin: 4.5vh 0; }
  .c-post-hgroup--center .c-post-headline {
    letter-spacing: 0.45em; }
  .c-post-hgroup--center .c-post-subheadline {
    color: #151515;
    font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.125em;
    line-height: 1.5;
    margin-bottom: 0;
    text-align: left;
    font-size: 16px;
    font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    text-transform: uppercase;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
    @media (min-width: 544px) {
      .c-post-hgroup--center .c-post-subheadline {
        font-size: 20px; } }
    @media (min-width: 992px) {
      .c-post-hgroup--center .c-post-subheadline {
        font-size: 21px; } }
    .c-post-hgroup--center .c-post-subheadline > li,
    .c-post-hgroup--center .c-post-subheadline > li a,
    .c-post-hgroup--center .c-post-subheadline > a {
      border-bottom: 0;
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }
  .c-post-hgroup--center .c-post-headline,
  .c-post-hgroup--center .c-post-subheadline {
    color: #FFF;
    text-align: center;
    width: 100%; }
    @media (max-width: 767px) {
      .c-post-hgroup--center .c-post-headline,
      .c-post-hgroup--center .c-post-subheadline {
        padding: 5%; } }

.c-post-headline {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.25em;
  line-height: 1.25;
  margin-bottom: 0;
  text-align: left;
  font-size: 44px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-post-headline {
      font-size: 54px; } }
  @media (min-width: 992px) {
    .c-post-headline {
      font-size: 72px; } }
  .c-post-headline > li,
  .c-post-headline > li a,
  .c-post-headline > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (min-width: 544px) {
    .c-post-headline {
      width: 80%;
      margin-left: 0; } }

.c-post-subheadline {
  margin-top: 12px; }
  .c-post-subheadline p {
    color: #151515;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.075em;
    line-height: 1.5;
    font-size: 14px;
    margin-bottom: 9px;
    text-transform: uppercase;
    color: gray;
    margin-bottom: 0; }
    @media (min-width: 544px) {
      .c-post-subheadline p {
        font-size: 15px; } }
    @media (min-width: 768px) {
      .c-post-subheadline p {
        font-size: 15px; } }
    .c-post-subheadline p > li,
    .c-post-subheadline p > li a,
    .c-post-subheadline p > a {
      color: currentColor;
      font-size: inherit;
      margin: 0; }

.c-post-article {
  margin-top: 4.5vh;
  margin-top: 7.5vh; }

.s-post p,
.s-post ul,
.s-post a {
  font-family: regularSerif, Georgia, "Times New Roman", "Times", serif;
  letter-spacing: 0; }

.s-post a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(38, 38, 38, 0)), color-stop(50%, rgba(38, 38, 38, 0.4)));
  background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: -o-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: linear-gradient(to bottom, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .s-post a:hover, .s-post a:active, .s-post a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.s-post strong {
  text-transform: uppercase; }

.s-post h2 {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.125em;
  line-height: 1.5;
  margin-bottom: 0;
  text-align: left;
  font-size: 16px;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: uppercase;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  @media (min-width: 544px) {
    .s-post h2 {
      font-size: 20px; } }
  @media (min-width: 992px) {
    .s-post h2 {
      font-size: 21px; } }
  .s-post h2 > li,
  .s-post h2 > li a,
  .s-post h2 > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (min-width: 544px) {
    .s-post h2 {
      width: 85%; } }
  .s-post h2:not(:first-child) {
    margin-top: 4.5vh; }
  .s-post h2:not(:last-child) {
    margin-bottom: 18px;
    margin-bottom: 2.25vh; }

.s-post hr {
  border: 0;
  border-top: 1px solid #e8e8e8;
  margin: 36px 0; }

.s-post blockquote p {
  border-left: 1px solid #b3b3b3;
  color: gray;
  padding-left: 24px; }

@media (min-width: 544px) {
  .s-post {
    margin-right: 48px; } }

.c-post-meta:not(:last-child) {
  border-bottom: 1px solid #e8e8e8;
  margin-bottom: 1.2vh;
  padding-bottom: 1.2vh; }

.c-post-meta span,
.c-post-meta span a,
.c-post-meta li {
  color: gray;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.96;
  font-size: 12px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-post-meta span,
    .c-post-meta span a,
    .c-post-meta li {
      font-size: 12px; } }
  @media (min-width: 768px) {
    .c-post-meta span,
    .c-post-meta span a,
    .c-post-meta li {
      font-size: 12px; } }
  .c-post-meta span > li,
  .c-post-meta span > li a,
  .c-post-meta span > a,
  .c-post-meta span a > li,
  .c-post-meta span a > li a,
  .c-post-meta span a > a,
  .c-post-meta li > li,
  .c-post-meta li > li a,
  .c-post-meta li > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-post-meta p {
  color: #151515;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 14px;
  margin-bottom: 9px;
  text-transform: uppercase;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  margin-bottom: 0; }
  @media (min-width: 544px) {
    .c-post-meta p {
      font-size: 15px; } }
  @media (min-width: 768px) {
    .c-post-meta p {
      font-size: 15px; } }
  .c-post-meta p > li,
  .c-post-meta p > li a,
  .c-post-meta p > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-post-meta ul {
  list-style-type: upper-roman;
  margin: 0 0 0 18px;
  padding-left: 0; }

.c-post-meta--endRule {
  border-bottom-color: transparent !important;
  border-top: 1px solid #e8e8e8;
  display: inline-block;
  margin: 2.25vh 0 0 !important;
  padding: 1.2vh 0 0 !important; }
  .c-post-meta--endRule a {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(38, 38, 38, 0)), color-stop(50%, rgba(38, 38, 38, 0.4)));
    background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
    background-image: -o-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
    background-image: linear-gradient(to bottom, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
    background-repeat: repeat-x;
    background-size: 1px 1px;
    background-position: 0 100%;
    color: currentColor;
    padding-bottom: 0;
    text-decoration: none; }
    .c-post-meta--endRule a:hover, .c-post-meta--endRule a:active, .c-post-meta--endRule a:focus {
      background-image: none;
      color: inherit;
      text-decoration: none; }

.c-post-meta--cta, .c-post-meta--noRule {
  border: 0 !important;
  padding: 0 !important; }

.c-post-meta--cta {
  margin-bottom: 3vh; }

.c-post-meta--noRule span,
.c-post-meta--noRule span a,
.c-post-meta--noRule li {
  display: inline-block;
  line-height: 1.5; }

.c-post-meta--share:not(:first-child) {
  margin-top: 4.5vh; }

.c-post-meta--share > a {
  background-image: none;
  color: #b3b3b3;
  display: block;
  text-align: center;
  width: 100%; }
  .c-post-meta--share > a:hover, .c-post-meta--share > a:active, .c-post-meta--share > a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }
  .c-post-meta--share > a:not(:first-child) {
    margin-top: -1px; }
  .c-post-meta--share > a:hover, .c-post-meta--share > a:active, .c-post-meta--share > a:focus {
    color: #b3b3b3; }

.c-post-supporters {
  margin-bottom: 9px; }
  .c-post-supporters img {
    margin-top: 13.5px;
    margin-left: 18px;
    width: 25%; }
    .c-post-supporters img:first-of-type {
      margin-left: 0; }
    .c-post-supporters img:nth-child(4n) {
      margin-left: 0; }
    @media (min-width: 544px) {
      .c-post-supporters img {
        margin-left: 0;
        width: auto; }
        .c-post-supporters img:first-of-type {
          margin-top: 9px; }
        .c-post-supporters img:not(:nth-child(1)) {
          margin-top: 22.5px; } }

.c-post-info {
  position: absolute;
  -webkit-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  transform: translateY(-100%);
  width: 100%; }

.c-post-info .c-postGrid {
  margin: 0; }

.c-post-info .c-postGrid > * {
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 0;
  -ms-flex: 1 0 0;
  flex: 1 0 0;
  -webkit-flex-basis: -webkit-calc(10vw - 2px);
  -ms-flex-preferred-size: calc(10vw - 2px);
  flex-basis: calc(10vw - 2px);
  -webkit-flex-basis: 5em;
  -ms-flex-preferred-size: 5em;
  flex-basis: 5em;
  margin: 0; }

.c-post-info .s-aside {
  border: 0;
  padding: 0; }

.c-post-info .c-post-meta {
  background-color: #fdfdfd;
  border: 0;
  margin: 0;
  padding: 0.75vh 1.5vh; }
  .c-post-info .c-post-meta:not(:first-child) {
    border-left: 1px solid #151515; }
  .c-post-info .c-post-meta span,
  .c-post-info .c-post-meta span a,
  .c-post-info .c-post-meta li {
    color: #151515;
    font-family: Black, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  .c-post-info .c-post-meta p {
    color: #151515; }

.c-post-info .c-post-meta--cta {
  border: 1px solid #151515 !important; }
  .c-post-info .c-post-meta--cta .t-button--primary {
    background-color: #65bd24;
    border: 0;
    color: #fdfdfd;
    height: 100%;
    margin: 0 !important;
    width: 100%; }
    .c-post-info .c-post-meta--cta .t-button--primary:after {
      display: none; }

.c-post-next {
  margin-top: 6vh; }
  .c-post-next h3 {
    margin-bottom: 3vh; }

.c-footer {
  padding: 7.5vh 0;
  position: relative; }
  .c-footer--post {
    border-top: 1px solid #151515; }

.c-footer-nav {
  margin-bottom: 7.5vh; }
  @media (max-width: 767px) {
    .c-footer-nav {
      border-top: 1px solid #e8e8e8;
      margin-top: 6vh;
      padding-top: 6vh; } }

@media (max-width: 767px) {
  .c-footer-block {
    border-top: 1px solid #e8e8e8;
    margin-top: 6vh;
    padding-top: 6vh; } }

.c-footer-logo > img {
  margin-top: 0;
  width: 150px; }
  @media (min-width: 544px) {
    .c-footer-logo > img {
      width: 180px; } }

.u-inlineBlockWrapper > * {
  display: inline-block; }
  .u-inlineBlockWrapper > *:not(:first-child) {
    margin-left: 4.5vh; }

.c-footer p,
.c-footer ul,
.c-footer li,
.c-footer span,
.c-footer a {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-footer p,
    .c-footer ul,
    .c-footer li,
    .c-footer span,
    .c-footer a {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .c-footer p,
    .c-footer ul,
    .c-footer li,
    .c-footer span,
    .c-footer a {
      font-size: 14px; } }
  .c-footer p > li,
  .c-footer p > li a,
  .c-footer p > a,
  .c-footer ul > li,
  .c-footer ul > li a,
  .c-footer ul > a,
  .c-footer li > li,
  .c-footer li > li a,
  .c-footer li > a,
  .c-footer span > li,
  .c-footer span > li a,
  .c-footer span > a,
  .c-footer a > li,
  .c-footer a > li a,
  .c-footer a > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-footer .o-listClean {
  margin-bottom: 0; }

.c-footer .c-nav-item {
  margin-top: 6px; }
  .c-footer .c-nav-item.is-active a {
    border-color: currentColor; }

.c-footer-info p,
.c-footer-info ul,
.c-footer-info li,
.c-footer-info span,
.c-footer-info a {
  color: rgba(21, 21, 21, 0.7); }

.c-footer-socialBlock {
  margin-top: 2.0vh; }

@media (max-width: 767px) {
  .c-footer-hideMobileLogo {
    display: none; } }

.t-button {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 0;
  border-style: solid;
  border-width: 0;
  padding: 0 12px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase;
  border: 1px solid #151515;
  color: #151515;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  line-height: 44px; }
  .t-button[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button:hover, .t-button:active, .t-button:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .t-button {
      font-size: 14px; } }
  .t-button > li,
  .t-button > li a,
  .t-button > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }
  .t-button:hover, .t-button:active, .t-button:focus {
    background-color: transparent; }

.t-button--rev {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 0;
  border-style: solid;
  border-width: 0;
  padding: 0 12px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase;
  border: 1px solid #151515;
  color: #151515;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  line-height: 44px;
  background-color: transparent;
  border-color: currentColor;
  border-width: 1px; }
  .t-button--rev[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button--rev:hover, .t-button--rev:active, .t-button--rev:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button--rev {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .t-button--rev {
      font-size: 14px; } }
  .t-button--rev > li,
  .t-button--rev > li a,
  .t-button--rev > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }
  .t-button--rev:hover, .t-button--rev:active, .t-button--rev:focus {
    background-color: transparent; }

.t-button--full {
  text-align: center;
  width: 100%; }

.t-button--primary {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 0;
  border-style: solid;
  border-width: 0;
  padding: 0 12px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase;
  border: 1px solid #151515;
  color: #151515;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  line-height: 44px;
  background-color: #65bd24;
  border-color: #65bd24;
  color: #FFF !important;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  min-width: 92%;
  padding: 6px 12px;
  position: relative; }
  .t-button--primary[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button--primary:hover, .t-button--primary:active, .t-button--primary:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button--primary {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .t-button--primary {
      font-size: 14px; } }
  .t-button--primary > li,
  .t-button--primary > li a,
  .t-button--primary > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }
  .t-button--primary:hover, .t-button--primary:active, .t-button--primary:focus {
    background-color: transparent; }
  .t-button--primary:after {
    content: "";
    display: block;
    position: absolute;
    right: -23px;
    top: -1px;
    border-bottom: 59px solid transparent;
    border-left: 22px solid #65bd24; }
  .t-button--primary:hover, .t-button--primary:active, .t-button--primary:focus {
    background-color: #65bd24;
    color: #FFF;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

.t-button--secondary {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 0;
  border-style: solid;
  border-width: 0;
  padding: 0 12px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase;
  border: 1px solid #151515;
  color: #151515;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  line-height: 44px;
  background-color: transparent;
  border-color: #151515;
  color: #151515;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  padding: 6px 36px;
  position: relative; }
  .t-button--secondary[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button--secondary:hover, .t-button--secondary:active, .t-button--secondary:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button--secondary {
      font-size: 14px; } }
  @media (min-width: 768px) {
    .t-button--secondary {
      font-size: 14px; } }
  .t-button--secondary > li,
  .t-button--secondary > li a,
  .t-button--secondary > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }
  .t-button--secondary:hover, .t-button--secondary:active, .t-button--secondary:focus {
    background-color: transparent; }
  .t-button--secondary:hover, .t-button--secondary:active, .t-button--secondary:focus {
    background-color: transparent;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

.t-buttonClose {
  color: #65bd24;
  position: fixed;
  right: 12px;
  top: 12px;
  z-index: 1000;
  right: 24px;
  top: 31px; }
  .t-buttonClose:hover, .t-buttonClose:active, .t-buttonClose:focus {
    outline: none; }

.c-imageBlend {
  background-blend-mode: multiply;
  background-color: rgba(21, 21, 21, 0.8); }

.c-imageBlend--just {
  background-blend-mode: multiply;
  background-color: rgba(21, 21, 21, 0.4); }

input:hover, input:active, input:focus,
textarea:hover,
textarea:active,
textarea:focus,
select:hover,
select:active,
select:focus,
label:hover,
label:active,
label:focus {
  outline: 0; }

input[type="text"],
input[type="email"],
input[type="tel"],
input[type="date"],
.select select,
textarea {
  background: transparent;
  border: 0;
  display: inline-block;
  resize: none;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 13px;
  text-transform: uppercase;
  background-color: #F3F2F1;
  border: 1px solid #F3F2F1;
  border-radius: 0;
  line-height: 44px;
  padding: 0 12px;
  -webkit-transition: all 500ms ease-out;
  -o-transition: all 500ms ease-out;
  transition: all 500ms ease-out; }
  @media (min-width: 544px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    input[type="date"],
    .select select,
    textarea {
      font-size: 14px; } }
  @media (min-width: 768px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    input[type="date"],
    .select select,
    textarea {
      font-size: 14px; } }
  input[type="text"] > li,
  input[type="text"] > li a,
  input[type="text"] > a,
  input[type="email"] > li,
  input[type="email"] > li a,
  input[type="email"] > a,
  input[type="tel"] > li,
  input[type="tel"] > li a,
  input[type="tel"] > a,
  input[type="date"] > li,
  input[type="date"] > li a,
  input[type="date"] > a,
  .select select > li,
  .select select > li a,
  .select select > a,
  textarea > li,
  textarea > li a,
  textarea > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }
  input[type="text"]:-webkit-autofill,
  input[type="email"]:-webkit-autofill,
  input[type="tel"]:-webkit-autofill,
  input[type="date"]:-webkit-autofill,
  .select select:-webkit-autofill,
  textarea:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 6.25rem #f7f7f7 inset;
    -webkit-text-fill-color: #65bd24;
    background-clip: padding-box; }
  input[type="text"]::-webkit-input-placeholder,
  input[type="email"]::-webkit-input-placeholder,
  input[type="tel"]::-webkit-input-placeholder,
  input[type="date"]::-webkit-input-placeholder,
  .select select::-webkit-input-placeholder,
  textarea::-webkit-input-placeholder {
    color: rgba(21, 21, 21, 0.7); }
  input[type="text"]:-moz-placeholder,
  input[type="email"]:-moz-placeholder,
  input[type="tel"]:-moz-placeholder,
  input[type="date"]:-moz-placeholder,
  .select select:-moz-placeholder,
  textarea:-moz-placeholder {
    color: rgba(21, 21, 21, 0.7); }
  input[type="text"]::-moz-placeholder,
  input[type="email"]::-moz-placeholder,
  input[type="tel"]::-moz-placeholder,
  input[type="date"]::-moz-placeholder,
  .select select::-moz-placeholder,
  textarea::-moz-placeholder {
    color: rgba(21, 21, 21, 0.7); }
  input[type="text"]:-ms-input-placeholder,
  input[type="email"]:-ms-input-placeholder,
  input[type="tel"]:-ms-input-placeholder,
  input[type="date"]:-ms-input-placeholder,
  .select select:-ms-input-placeholder,
  textarea:-ms-input-placeholder {
    color: rgba(21, 21, 21, 0.7); }

textarea {
  line-height: 1.5;
  padding-top: 12px; }

input[type="date"],
option[type="selected"] {
  color: rgba(21, 21, 21, 0.5); }

.c-formWrapper {
  background-color: rgba(101, 189, 36, 0.15);
  margin: 6vh 0 0;
  padding: 48px; }

.c-form {
  margin-top: 48px; }

.c-form label,
.c-form .label {
  color: gray;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.96;
  font-size: 12px;
  text-transform: uppercase;
  display: block; }
  @media (min-width: 544px) {
    .c-form label,
    .c-form .label {
      font-size: 12px; } }
  @media (min-width: 768px) {
    .c-form label,
    .c-form .label {
      font-size: 12px; } }
  .c-form label > li,
  .c-form label > li a,
  .c-form label > a,
  .c-form .label > li,
  .c-form .label > li a,
  .c-form .label > a {
    color: currentColor;
    font-size: inherit;
    margin: 0; }

.c-form label:not(:last-child),
.c-form .select:not(:last-child) {
  margin-top: 24px; }

.c-form .select {
  position: relative; }
  .c-form .select:after {
    position: absolute;
    top: 50%;
    right: 1.25rem;
    display: inline-block;
    content: "";
    width: 0;
    height: 0;
    margin-top: -.15rem;
    pointer-events: none;
    border-top: .35rem solid;
    border-right: .35rem solid transparent;
    border-bottom: .35rem solid transparent;
    border-left: .35rem solid transparent; }

.c-form .select select {
  cursor: pointer;
  outline: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

.c-form-alert {
  color: #C60C0C;
  position: absolute;
  top: 66px;
  right: 0; }

#mc_embed_signup input[type="email"] {
  background-color: transparent;
  border-color: transparent;
  border-bottom: 1px solid #b3b3b3;
  margin-right: 6px;
  padding: 0; }

#mc_embed_signup .t-button {
  background-color: #65bd24;
  border-color: #65bd24;
  color: #fdfdfd; }

/* uncss:ignore */
.c-icon {
  width: 179px;
  height: 70px;
  display: inline-block;
  fill: #65bd24;
  line-height: 1;
  position: relative;
  text-align: center;
  vertical-align: middle; }
  .c-icon:hover, .c-icon:active, .c-icon:focus {
    outline: 0; }

.c-shareWrapper {
  position: relative;
  height: 100%; }

.c-share {
  height: 100vh;
  position: fixed;
  right: 0;
  top: 0; }

.u-marginNTD3 {
  margin-top: -8px !important; }

@media (max-width: 767px) {
  .u-smDown-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
    -webkit-order: -1 !important;
    -ms-flex-order: -1 !important;
    order: -1 !important; } }

.u-hide {
  display: none !important; }

@media (min-width: 544px) {
  .u-sm-hide {
    display: none !important; } }

.u-posRelative {
  position: relative !important; }

.u-colorBase {
  color: #dbdbdb !important; }

.u-colorMuted {
  color: #b3b3b3 !important; }

.u-colorMedium {
  color: gray !important; }

.u-colorDark {
  color: #636363 !important; }

.u-colorBrand {
  color: #65bd24 !important; }

.u-colorNeutralDark {
  color: #dcd8d1 !important; }

.u-space0 {
  margin: 0 !important; }

.u-spaceT1of4 {
  margin-top: 6px; }

.u-spaceTD2 {
  margin-top: 12px !important; }

.u-spaceT {
  margin-top: 24px !important; }

.u-spaceT2 {
  margin-top: 48px !important; }

.u-spaceB {
  margin-bottom: 24px !important; }

.u-spaceB2 {
  margin-bottom: 48px !important; }

@media (max-width: 767px) {
  .u-sm-spaceT {
    margin-top: 24px; } }

@media (max-width: 767px) {
  .u-sm-spaceT2 {
    margin-top: 48px; } }

@media (min-width: 544px) {
  .u-sm-spaceLN1 {
    margin-left: -1px; } }

@media (max-width: 767px) {
  .u-smDown-spaceR {
    margin-right: 24px; } }

@media (max-width: 767px) {
  .u-smDown-spaceT {
    margin-top: 24px; } }

@media (max-width: 767px) {
  .u-smDown-spaceTD2 {
    margin-top: 12px; } }

@media (max-width: 767px) {
  .u-smDown-blockR--3by4 {
    margin-right: 4.5vh; } }

@media (max-width: 767px) {
  .u-smDown-blockT--3by4 {
    margin-top: 4.5vh; } }

@media (max-width: 767px) {
  .u-smDown-blockB--3by4 {
    margin-bottom: 4.5vh; } }

.u-sm-blockB--1by4 {
  margin-bottom: 1.5vh; }

.u-sm-blockB--1by3 {
  margin-bottom: 2.0vh; }

.u-sm-blockB--1by2 {
  margin-bottom: 3vh; }

.u-sm-blockT--1by4 {
  margin-top: 1.5vh; }

.u-sm-blockT--1by3 {
  margin-top: 2.0vh; }

.u-sm-blockT--1by2 {
  margin-top: 3vh; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGxpY2F0aW9uLmNzcyIsIl92ZW5kb3Iubm9ybWFsaXplLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MuYmFzZS5zY3NzIiwiX3Rvb2xzLmZ1bmN0aW9ucy5zY3NzIiwiX3Rvb2xzLnNldHRpbmdzLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MudS1zaXplLnNjc3MiLCJfdG9vbHMubWl4aW5zLmJyZWFrcG9pbnRzLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MudS1mbGV4Ym94LnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MudS10ZXh0LnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MuYy1idXR0b24uc2NzcyIsIl92ZW5kb3Iuc3VpdGNzcy5jLWZsZXhlbWJlZC5zY3NzIiwiX3ZlbmRvci5zdWl0Y3NzLmMtZ3JpZC5zY3NzIiwiX3ZlbmRvci5zdWl0Y3NzLmMtZ3JpZC5zZXR0aW5ncy5zY3NzIiwiX2Jhc2UucGFnZS5zY3NzIiwiX2Jhc2UubGluay5zY3NzIiwiX3Rvb2xzLm1peGlucy5zY3NzIiwiX2Jhc2UuaW1hZ2Uuc2NzcyIsIl9iYXNlLnR5cGUuc2NzcyIsIl9vYmplY3QucG9zaXRpb24uc2NzcyIsIl9vYmplY3QuY29udGFpbmVyLnNjc3MiLCJfb2JqZWN0LmdyaWQuc2NzcyIsIl9vYmplY3QuY3Vyc29yLnNjc3MiLCJfb2JqZWN0Lmxpc3Quc2NzcyIsIl9vYmplY3QubGluay5zY3NzIiwiX29iamVjdC5hbGlnbmVyLnNjc3MiLCJfb2JqZWN0LnJ1bGUuc2NzcyIsIl9vYmplY3QuaWNvbi5zY3NzIiwiX29iamVjdC5jb3ZlcmltYWdlLnNjc3MiLCJfb2JqZWN0LmZpdGltYWdlLnNjc3MiLCJfdHlwZS50ZXh0LnNjc3MiLCJfdHlwZS5oZWFkbGluZS5zY3NzIiwiX3R5cGUuaGVscGVycy5zY3NzIiwiX3R5cGUubGluZWJyZWFrLnNjc3MiLCJfbGF5b3V0LmJvZHkuc2NzcyIsIl9sYXlvdXQuaGVhZGVyLnNjc3MiLCJfbGF5b3V0LnBvc3Quc2NzcyIsIl92ZW5kb3IuZmFtaWx5LnNjc3MiLCJfbGF5b3V0LmZvb3Rlci5zY3NzIiwiX2NvbXBvbmVudC5idXR0b24uc2NzcyIsIl9jb21wb25lbnQuaW1hZ2VibGVuZC5zY3NzIiwiX2NvbXBvbmVudC5mb3JtLnNjc3MiLCJfY29tcG9uZW50Lmljb24uc2NzcyIsIl9jb21wb25lbnQuc2hhcmUuc2NzcyIsIl91dGlsaXRpZXMuaGVscGVycy5iYXNlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDUWpCLDRFQUE0RTtBQUU1RTs7O0dBR0c7QUFFSDtFQUNFLHdCQUF3QjtFQUFFLE9BQU87RUFDakMsMkJBQTJCO0VBQUUsT0FBTztFQUNwQywrQkFBK0I7RUFBRSxPQUFPLEVBQ3pDOztBQUVEOztHQUVHO0FBRUg7RUFDRSxVQUFVLEVBQ1g7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOzs7O0dBSUc7QUFFSDs7Ozs7Ozs7Ozs7O0VBV1UsT0FBTztFQUNmLGVBQWUsRUFDaEI7O0FBRUQ7O0dBRUc7QUFFSDs7OztFQUlFLHNCQUFzQixFQUN2Qjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsY0FBYztFQUNkLFVBQVUsRUFDWDs7QUFFRDs7R0FFRztBQUVIO0VBQ0UseUJBQXlCLEVBQzFCOztBQUVEOzs7R0FHRztBQUVIOztFQUVFLGNBQWMsRUFDZjs7QUFFRDtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUg7RUFDRSw4QkFBOEI7RUFBRSxPQUFPO0VBQ3ZDLHNDQUFzQztFQUFFLE9BQU8sRUFDaEQ7O0FBRUQ7OztHQUdHO0FBRUg7O0VBRUUsaUJBQWlCLEVBQ2xCOztBQUVEO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSDtFQUNFLG9CQUFvQjtFQUFFLE9BQU87RUFDN0IsMkJBQTJCO0VBQUUsT0FBTztFQUNwQyxrQ0FBa0M7RUFBRSxPQUFPLEVBQzVDOztBQUVEOztHQUVHO0FBRUg7O0VBRUUscUJBQXFCLEVBQ3RCOztBQUVEOztHQUVHO0FBRUg7O0VBRUUsb0JBQW9CLEVBQ3JCOztBQUVEOztHQUVHO0FBRUg7RUFDRSxtQkFB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QnFFZCxFeUJpQm1CLEVBQUE7RXZCMUV2QztJdUIwRUY7TUFyRm9DLGdCekJxRWQsRXlCZ0JtQixFQUFBO0VBbEZ0Qzs7O0lBR0Qsb0JBQW9CO0lBRXBCLG1CQUFtQjtJQUNuQixVQUFVLEVBQ1Y7O0FBNEVGO0VBOUZDLGV6QlBvQztFeUJRcEMsaUp6QitLa0o7RXlCOUtsSix5QkFzQ29DO0VBckNwQyxpQnpCbUJtQztFeUJoQm5DLGdCekIrRXFCLEV5QlNtQjtFdkIzRXZDO0l1QjJFRjtNQXZGb0MsZ0J6QitFZCxFeUJRbUIsRUFBQTtFdkIzRXZDO0l1QjJFRjtNQXRGb0MsZ0J6QitFZCxFeUJPbUIsRUFBQTtFQW5GdEM7OztJQUdELG9CQUFvQjtJQUVwQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWOztBQTZFRjtFQS9GQyxlekJQb0M7RXlCUXBDLGlKekIrS2tKO0V5QjlLbEoseUJBc0NvQztFQXJDcEMsaUJ6Qm1CbUM7RXlCaEJuQyxnQnpCK0VxQjtFeUJVaUIsWTFCZ0MzQixFMEJoQ3FEO0V2QjVFL0Q7SXVCNEVGO01BeEZvQyxnQnpCK0VkLEV5QlMyQyxFQUFBO0V2QjVFL0Q7SXVCNEVGO01BdkZvQyxnQnpCK0VkLEV5QlEyQyxFQUFBO0VBcEY5RDs7O0lBR0Qsb0JBQW9CO0lBRXBCLG1CQUFtQjtJQUNuQixVQUFVLEVBQ1Y7O0FBOEVGO0VBaEdDLGV6QlBvQztFeUJRcEMsaUp6QitLa0o7RXlCOUtsSix5QkFzQ29DO0VBckNwQyxpQnpCbUJtQztFeUJoQm5DLGdCekIrRXFCO0V5QldpQixZMUIrQjNCO0UwQi9CbUQsb0IxQmtEM0MsRTBCbER3RTtFdkI3RTFGO0l1QjZFRjtNQXpGb0MsZ0J6QitFZCxFeUJVc0UsRUFBQTtFdkI3RTFGO0l1QjZFRjtNQXhGb0MsZ0J6QitFZCxFeUJTc0UsRUFBQTtFQXJGekY7OztJQUdELG9CQUFvQjtJQUVwQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWOztBQWdGRjtFQWxHQyxlekJQb0M7RXlCUXBDLGdKekIrS2tKO0V5QjlLbEosd0JBOEVtQztFQTdFbkMsaUJ6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RUF0TUMsZXpCUG9DO0V5QlFwQyxpSnpCK0trSjtFeUI5S2xKLHlCQXNDb0M7RUFyQ3BDLGlCekJtQm1DO0V5QmhCbkMsZ0J6QitFcUIsRXlCdUhyQjtFdkJ6TEM7SXVCbUxGOzs7OztNQS9Mb0MsZ0J6QitFZCxFeUJzSHJCLEVBQUE7RXZCekxDO0l1Qm1MRjs7Ozs7TUE5TG9DLGdCekIrRWQsRXlCcUhyQixFQUFBO0VBak1FOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFHRCxvQkFBb0I7SUFFcEIsbUJBQW1CO0lBQ25CLFVBQVUsRUFDVjs7QUE0TEY7O0Vkak9JLHFCQUFxQjtFQUN4QixtQkFBbUI7RUFDbkIsb0JBQW9CLEVjbU9wQjs7QUFFRDs7O0Vkdk9JLHFCQUFxQjtFQUN4QixtQkFBbUI7RUFDbkIsb0JBQW9CO0VjaUJwQixlekJQb0M7RXlCUXBDLDhJekIrS2tKO0V5QjlLbEosd0JBeURtQztFQXhEbkMsaUJ6Qm1CbUM7RXlCaEJuQyxnQnpCMEUyQjtFeUJuQnhCLG1CQUE4QjtFQUM5QiwwQkFBMEIsRUE0SjdCO0V2QnZNQztJdUJpTUY7OztNQTdNb0MsZ0J6QjBFUixFeUJ5STNCLEVBQUE7RXZCdk1DO0l1QmlNRjs7O01BNU1vQyxnQnpCMEVSLEV5QndJM0IsRUFBQTtFQS9NRTs7Ozs7Ozs7O0lBR0Qsb0JBQW9CO0lBRXBCLG1CQUFtQjtJQUNuQixVQUFVLEVBQ1Y7O0FBME1GOztFQUlDLFkxQmpHVztFMEJrR1gsaUp6QmpEa0o7RXlCa0RsSixnQnpCN0lxQjtFeUI4SXJCLG9CMUJqRm1CLEUwQnVGbkI7RXZCdE5DO0l1QnlNRjs7TUFVRSxnQnpCaEpvQjtNeUJpSnBCLG9CMUJyRmtCLEUwQnVGbkIsRUFBQTs7QUNwS0Q7RUFoRkMsZTFCSW9DO0UwQkhwQyxnSjFCMExrSjtFMEJ6TGxKLHlCQTZCb0M7RUE1QnBDLGlCQTZCNEI7RUExQjVCLGlCQVZxQjtFQVdyQixpQkFBaUI7RUFHakIsZ0IxQitHcUIsRTBCekNzQjtFeEJsRDFDO0l3QmtERjtNQXJFb0MsZ0IxQitHZCxFMEIxQ3NC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Qm5CQ2tDLEVtQkFsQztFWXlCSDs7OztJcEI2REMsaUNBRmM7SUFFZCw0QkFGYztJQUVkLHlCQUZjO0lBR2QsbUNYa0RxQjtJV2xEckIsOEJYa0RxQjtJV2xEckIsMkJYa0RxQjtJV2pEckIsNkNYdUR3QjtJV3ZEeEIsd0NYdUR3QjtJV3ZEeEIscUNYdUR3QjtJK0I1R3RCLGUvQm5Da0MsRStCb0NsQztFQVhIO0lwQjZEQyxpQ0FGYztJQUVkLDRCQUZjO0lBRWQseUJBRmM7SUFHZCxtQ1hrRHFCO0lXbERyQiw4QlhrRHFCO0lXbERyQiwyQlhrRHFCO0lXakRyQiw2Q1h1RHdCO0lXdkR4Qix3Q1h1RHdCO0lXdkR4QixxQ1h1RHdCO0krQnZHYix5Qy9CdkR5QixFK0J3RDVCOztBQUlUOztFcEJ5Q0MsaUNBRmM7RUFFZCw0QkFGYztFQUVkLHlCQUZjO0VBR2QsbUNYa0RxQjtFV2xEckIsOEJYa0RxQjtFV2xEckIsMkJYa0RxQjtFV2pEckIsNkNYdUR3QjtFV3ZEeEIsd0NYdUR3QjtFV3ZEeEIscUNYdUR3QjtFeUJ2SnhCLGV6QlBvQztFeUJRcEMsZ0p6QitLa0o7RXlCOUtsSix3QkE4RW1DO0VBN0VuQyxpQnpCbUJtQztFeUJoQm5DLGdCekJxRXFCO0V5Qk9sQiwwQkFBMEI7RU16QjFCLFkvQnBFaUM7RStCcUVqQyxlQUFlO0VBQ2YsbUJBQW1CLEVBS3RCO0U3QjdDQztJNkJrQ0Y7O01OOUNvQyxnQnpCcUVkLEUrQlpyQixFQUFBO0U3QjdDQztJNkJrQ0Y7O01ON0NvQyxnQnpCcUVkLEUrQmJyQixFQUFBO0VOckRFOzs7Ozs7SUFHRCxvQkFBb0I7SUFFcEIsbUJBQW1CO0lBQ25CLFVBQVUsRUFDVjtFTW1DRjs7SUFTUSxnQmhDb0ZZLEVnQ25GZjs7QUFHTDtFQUNJLGVBQWU7RUFDZixpSi9CNEcrSSxFK0IzR2xKOztBQU9EO0VBQ0ksb0JBQW9CO0VBQ3BCLG9CQUFvQixFQUd2QjtFN0I5REM7STZCeURGO01BR3VDLHVCQUF1QjtNQUFFLHFCQUFxQixFQUVwRixFQUFBO0U3QjlEQztJNkJ5REY7TUFJdUMs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bkMsZ0J6QnFFcUI7RXlCT2xCLDBCQUEwQixFUWxDekI7RS9CN0JIO0krQm9CRjs7Ozs7TVJoQ29DLGdCekJxRWQsRWlDNUJqQixFQUFBO0UvQjdCSDtJK0JvQkY7Ozs7O01SL0JvQyxnQnpCcUVkLEVpQzdCakIsRUFBQTtFUnJDRjs7Ozs7Ozs7Ozs7Ozs7O0lBR0Qsb0JBQW9CO0lBRXBCLG1CQUFtQjtJQUNuQixVQUFVLEVBQ1Y7O0FRaUNGO0VBQ0ksaUJBQWlCLEVBQ3BCOztBQUVEO0VBQ0ksZ0JsQzBGZ0IsRWtDbEZuQjtFQVREO0lBT1EsMkJBQTJCLEVBQzlCOztBQUdMOzs7OztFQWVRLDZCakN4RjZCLEVpQ3lGaEM7O0FBR0w7RUFFSSxrQkFBdUIsRUFNMUI7O0EvQjdEQztFK0JpRUY7SUFFUSxjQUFjLEVBRXJCLEVBQUE7O0FDN0REO0V2QnNEQyxpQ0FGYztFQUVkLDRCQUZjO0VBRWQseUJBRmM7RUFHZCxtQ1hrRHFCO0VXbERyQiw4QlhrRHFCO0VXbERyQiwyQlhrRHFCO0VXakRyQiw2Q1h1RHdCO0VXdkR4Qix3Q1h1RHdCO0VXdkR4QixxQ1h1RHdCO0VrQzVLeEIsaUJBQWlCO0VBQ2pCLG9CQUFvQjtFQUNwQixnQkFBZ0I7RUFDaEIsZ0JuQ29LbUI7RVlyS2hCLHFCQUFxQjtFQUN4QixtQkFBbUI7RUFDbkIsb0JBQW9CO0VjaUJwQixlekJQb0M7RXlCUXBDLGdKekIrS2tKO0V5QjlLbEosd0JBOEVtQztFQTdFbkMsaUJ6Qm1CbUM7RXlCaEJuQyxnQnpCcUVxQjtFeUJPbEIsMEJBQTBCO0VTbkUxQiwwQmxDdEJpQztFa0N1QmpDLGVsQ3ZCaUM7RWtDd0JqQyw4SWxDK0orSTtFa0M5Si9JLGtCbEM4R3dCLEVrQ3RGM0I7RUFGRDtJQTNDRSxzQm5Da0lVO0ltQ2pJViwwQm5DaUlVO0ltQ2hJVixvQkFBb0I7SUFDcEIsYUFBYSxFQUNiO0VBdUNGO0lBcENFLCtCQUErQjtJQUMvQix5QkFBeUIsRXZCa0R4QjtFVHBDRDtJZ0NxQkY7TVRqQ29DLGdCekJxRWQsRWtDbENyQixFQUFBO0VoQ3ZCQztJZ0NxQkY7TVRoQ29DLGdCekJxRWQsRWtDbkNyQixFQUFBO0VUL0JFOzs7SUFHRCxvQkFBb0I7SUFFcEIsbUJBQW1CO0lBQ25CLFVBQVUsRUFDVjtFU3NCRjtJQWJRLDhCQUE4QixFdkI0Qm5DOztBdUJYSDtFdkJrREMsaUNBRmM7RUFFZCw0QkFGYztFQUVkLHlCQUZjO0VBR2QsbUNYa0RxQjtFV2xEckIsOEJYa0RxQjtFV2xEckIsMkJYa0RxQjtFV2pEckIsNkNYdUR3QjtFV3ZEeEIsd0NYdUR3QjtFV3ZEeEIscUNYdUR3QjtFa0M1S3hCLGlCQUFpQjtFQUNqQixvQkFBb0I7RUFDcEIsZ0JBQWdCO0VBQ2hCLGdCbkNvS21CO0VZcktoQixxQkFBcUI7RUFDeEIsbUJBQW1CO0VBQ25CLG9CQUFvQjtFY2lCcEIsZXpCUG9DO0V5QlFwQyxnSnpCK0trSjtFeUI5S2xKLHdCQThFbUM7RUE3RW5DLGlCekJtQm1DO0V5QmhCbkMsZ0J6QnFFcUI7RXlCT2xCLDBCQUEwQjtFU25FMUIsMEJsQ3RCaUM7RWtDdUJqQyxlbEN2QmlDO0VrQ3dCakMsOElsQytKK0k7RWtDOUovSSxrQmxDOEd3QjtFa0NsRjNCLDhCQUE4QjtFQUM5QiwyQkFBMkI7RUFDM0Isa0JBQWtCLEVBQ2xCO0VBTEQ7SUEvQ0Usc0JuQ2tJVTtJbUNqSVYsMEJuQ2lJVTtJbUNoSVYsb0JBQW9CO0lBQ3BCLGFBQWEsRUFDYjtFQTJDRjtJQXhDRSwrQkFBK0I7SUFDL0IseUJBQXlCLEV2QmtEeEI7RVRwQ0Q7SWdDeUJGO01UckNvQyxnQnpCcUVkLEVrQzNCckIsRUFBQTtFaEM5QkM7SWdDeUJGO01UcENvQyxnQnpCcUVkLEVrQzVCckIsRUFBQTtFVHRDRTs7O0lBR0Qsb0JBQW9CO0lBRXBCLG1CQUFtQjtJQUNuQixVQUFVLEVBQ1Y7RVMwQkY7SUFqQlEsOEJBQThCLEV2QjRCbkM7O0F1QkpIO0VBRUMsbUJBQW1CO0VBQ25CLFlBQVksRUFDWjs7QUFtQkQ7RXZCb0JDLGlDQUZjO0VBRWQsNEJBRmM7RUFFZCx5QkFGYztFQUdkLG1DWGtEcUI7RVdsRHJCLDhCWGtEcUI7RVdsRHJCLDJCWGtEcUI7RVdqRHJCLDZDWHVEd0I7RVd2RHhCLHdDWHVEd0I7RVd2RHhCLHFDWHVEd0I7RWtDNUt4QixpQkFBaUI7RUFDakIsb0JBQW9CO0VBQ3BCLGdCQUFnQjtFQUNoQixnQm5Db0ttQjtFWXJLaEIscUJBQXFCO0VBQ3hCLG1CQUFtQjtFQUNuQixvQkFBb0I7RWNpQnBCLGV6QlBvQztFeUJRcEMsZ0p6QitLa0o7RXlCOUtsSix3QkE4RW1DO0VBN0VuQyxpQnpCbUJtQztFeUJoQm5DLGdCekJxRXFCO0V5Qk9sQiwwQkFBMEI7RVNuRTFCLDBCbEN0QmlDO0VrQ3VCakMsZWxDdkJpQztFa0N3QmpDLDhJbEMrSitJO0VrQzlKL0ksa0JsQzhHd0I7RWtDcER4QiwwQmxDcEVpQztFa0NxRXBDLHNCbENyRW9DO0VrQ3NFcEMsdUJBQWdDO0VBQzdCLDhJbENpRytJO0VrQ2hHL0ksZUFBZTtFQUNmLGtCbkNpRWdCO0VtQ2hFaEIsbUJBQW1CLEVBY3RCO0VBdEJEO0lBN0VFLHNCbkNrSVU7SW1DaklWLDBCbkNpSVU7SW1DaElWLG9CQUFvQjtJQUNwQixhQUFhLEVBQ2I7RUF5RUY7SUF0RUUsK0JBQStCO0lBQy9CLHlCQUF5QixFdkJrRHhCO0VUcENEO0lnQ3VERjtNVG5Fb0MsZ0J6QnFFZCxFa0NvQnJCLEVBQUE7RWhDN0VDO0lnQ3VERjtNVGxFb0MsZ0J6QnFFZCxFa0NtQnJCLEVBQUE7RVRyRkU7OztJQUdELG9CQUFvQjtJQUVwQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWO0VTd0RGO0lBL0NRLDhCQUE4QixFdkI0Qm5DO0V1Qm1CSDtJQVRJLFlBQVk7SUFDWixlQUFlO0lBQ2YsbUJBQW1CO0lBRW5CLGFBQWE7SUFDYixVQUFVO0lBaUJOLHNDQUFzQztJQUN0QyxnQ2xDaEY2QixFa0NpRmhDO0VBZkw7SUFrQlEsMEJsQ3BGNkI7SWtDcUY3QixZbEN4RzZCO0lrQ3lHN0IsOElsQ2tGMkksRVd6SGhKOztBdUIyQ0g7RXZCSkMsaUNBRmM7RUFFZCw0QkFGYztFQUVkLHlCQUZjO0VBR2QsbUNYa0RxQjtFV2xEckIsOEJYa0RxQjtFV2xEckIsMkJYa0RxQjtFV2pEckIsNkNYdUR3QjtFV3ZEeEIsd0NYdUR3QjtFV3ZEeEIscUNYdUR3QjtFa0M1S3hCLGlCQUFpQjtFQUNqQixvQkFBb0I7RUFDcEIsZ0JBQWdCO0VBQ2hCLGdCbkNvS21CO0VZcktoQixxQkFBcUI7RUFDeEIsbUJBQW1CO0VBQ25CLG9CQUFvQjtFY2lCcEIsZXpCUG9DO0V5QlFwQyxnSnpCK0trSjtFeUI5S2xKLHdCQThFbUM7RUE3RW5DLGlCekJtQm1DO0V5QmhCbkMsZ0J6QnFFcUI7RXlCT2xCLDBCQUEwQjtFU25FMUIsMEJsQ3RCaUM7RWtDdUJqQyxlbEN2QmlDO0VrQ3dCakMsOElsQytKK0k7RWtDOUovSSxrQmxDOEd3QjtFa0M1QnhCLDhCQUE4QjtFQUNqQyxzQmxDNUdvQztFa0M2R3BDLGVsQzdHb0M7RWtDOEdqQyw4SWxDeUUrSTtFa0N4RS9JLGtCbkMwQ2dCO0VtQ3pDaEIsbUJBQW1CLEVBYXRCO0VBcEJEO0lBckdFLHNCbkNrSVU7SW1DaklWLDBCbkNpSVU7SW1DaElWLG9CQUFvQjtJQUNwQixhQUFhLEVBQ2I7RUFpR0Y7SUE5RkUsK0JBQStCO0lBQy9CLHlCQUF5QixFdkJrRHhCO0VUcENEO0lnQytFRjtNVDNGb0MsZ0J6QnFFZCxFa0MwQ3JCLEVBQUE7RWhDbkdDO0lnQytFRjtNVDFGb0MsZ0J6QnFFZCxFa0N5Q3JCLEVBQUE7RVQzR0U7OztJQUdELG9CQUFvQjtJQUVwQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWO0VTZ0ZGO0lBdkVRLDhCQUE4QixFdkI0Qm5DO0V1QjJDSDtJQWdCUSw4QkFBOEI7SUFFOUIsOElsQzREMkksRVd6SGhKOztBdUJrTEg7RUFDQyxlbENsT29DO0VrQ21PcEMsZ0JBQWdCO0VBQ2hCLFluQzFGbUI7RW1DMkZuQixVbkMzRm1CO0VtQzRGbkIsY2xDekVrQjtFa0NnRmpCLFluQ25Ha0I7RW1Db0dsQixVQUFVLEVBRVg7RUFmRDtJQVFFLGNBQWMsRXZCMUxiOztBd0JyRUg7RUFKSSxnQ0FIZ0I7RUFJaEIsd0NuQ1VpQyxFbUNQSTs7QUFDekM7RUFMSSxnQ0FIZ0I7RUFJaEIsd0NuQ1VpQyxFbUNONEM7O0FDVmpGOzs7Ozs7Ozs7O0VBS0UsV0FBVyxFekJ5RVY7O0F5QmxFSDs7Ozs7O0VBTUMsd0JBQXdCO0VBQ3JCLFVBQVU7RUFDVixzQkFBc0I7RUFFdEIsYUFBYTtFQUNiLFlBQVk7RUFDWix5QkFBaUI7RUFBakIsc0JBQWlCO0VBQWpCLGlCQUFpQjtFWERwQixlekJQb0M7RXlCUXBDLGdKekIrS2tKO0V5QjlLbEosd0JBOEVtQztFQTdFbkMsaUJ6Qm1CbUM7RXlCaEJuQyxnQnpCcUVxQjtFeUJPbEIsMEJBQTBCO0VXN0UxQiwwQnBDRGlDO0VvQ0VqQywwQnBDRmlDO0VvQ0dqQyxpQkFBaUI7RUFDakIsa0JwQ3dId0I7RW9DdkgzQixnQnJDeUltQjtFcUN4SW5CLHVDcEM2SXdCO0VvQzdJeEIsa0NwQzZJd0I7RW9DN0l4QiwrQnBDNkl3QixFb0NySHhCO0VsQ2ZDO0lrQzlCRjs7Ozs7O01Ya0JvQyxnQnpCcUVkLEVvQzFDckIsRUFBQTtFbENmQztJa0M5QkY7Ozs7OztNWG1Cb0MsZ0J6QnFFZCxFb0MzQ3JCLEVBQUE7RVh2QkU7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUdELG9CQUFvQjtJQUVwQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWO0VXN0JGOzs7Ozs7SUFpQ0UsZ0RBQXVEO0lBQ3ZELGlDcENmbUM7SW9DZ0JuQyw2QkFBNkIsRUFDN0I7RUFwQ0Y7Ozs7OztJQXlDZ0MsNkJwQ3JDSyxFb0NxQ3dCO0VBekM3RDs7Ozs7O0lBMENnQyw2QnBDdENLLEVvQ3NDd0I7RUExQzdEOzs7Ozs7SUEyQ2dDLDZCcEN2Q0ssRW9DdUN3QjtFQTNDN0Q7Ozs7OztJQTRDZ0MsNkJwQ3hDSyxFb0N3Q3dCOztBQUs3RDtFQUNJLGlCcENqQmdDO0VvQ2tCaEMsa0JyQzBHZ0IsRXFDekduQjs7QUFPRDs7RUFFSSw2QnBDekRpQyxFb0MwRHBDOztBQU9EO0VBQ0MsMkNwQ25Eb0M7RW9Db0RqQyxnQkFBdUI7RUFD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a0JwRjtFcUNoQkY7SUFBOEQsb0JBQXlCLEVBQWEsRUFBQTs7QXJDZ0JsRztFcUNmRjtJQUE4RCxrQkFBdUIsRUFBYSxFQUFBOztBckNlaEc7RXFDZEY7SUFBOEQscUJBQTBCLEVBQWEsRUFBQTs7QUFFckc7RUFBcUIscUJBQTBCLEVBQVc7O0FBQzFEO0VBQXFCLHFCQUEwQixFQUFlOztBQUM5RDtFQUFxQixtQkFBMEIsRUFBVTs7QUFFekQ7RUFBcUIsa0JBQXVCLEVBQVc7O0FBQ3ZEO0VBQXFCLGtCQUF1QixFQUFlOztBQUMzRDtFQUFxQixnQkFBdUIsRUFBVSIsImZpbGUiOiJhcHBsaWNhdGlvbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4vKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgbGluZS1oZWlnaHQgZm9yIGFsbCBoZWFkaW5ncyBpbiBDaHJvbWUgbW9iaWxlLCBGaXJlZm94LFxuICogaU9TIFNhZmFyaSwgTWljcm9zb2Z0IEVkZ2UgYW5kIElFLlxuICovXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBsaW5lLWhlaWdodDogMS4xNTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBIHRoaW4gbGF5ZXIgb24gdG9wIG9mIG5vcm1hbGl6ZS5jc3MgdGhhdCBwcm92aWRlcyBhIHN0YXJ0aW5nIHBvaW50IG1vcmVcbiAqIHN1aXRhYmxlIGZvciB3ZWIgYXBwbGljYXRpb25zLlxuICovXG4vKipcbiAqIFByZXZlbnQgbWFyZ2luIGFuZCBib3JkZXIgZnJvbSBhZmZlY3RpbmcgZWxlbWVudCB3aWR0aC5cbiAqIGh0dHBzOi8vZ29vLmdsL3BZdGJLN1xuICpcbiAqL1xuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG4vKipcbiAqIFJlbW92ZXMgdGhlIGRlZmF1bHQgc3BhY2luZyBhbmQgYm9yZGVyIGZvciBhcHByb3ByaWF0ZSBlbGVtZW50cy5cbiAqL1xuYmxvY2txdW90ZSxcbmRsLFxuZGQsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5maWd1cmUsXG5wLFxucHJlIHtcbiAgbWFyZ2luOiAwOyB9XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBXb3JrIGFyb3VuZCBhIEZpcmVmb3gvSUUgYnVnIHdoZXJlIHRoZSB0cmFuc3BhcmVudCBgYnV0dG9uYCBiYWNrZ3JvdW5kXG4gKiByZXN1bHRzIGluIGEgbG9zcyBvZiB0aGUgZGVmYXVsdCBgYnV0dG9uYCBmb2N1cyBzdHlsZXMuXG4gKi9cbmJ1dHRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQ7XG4gIG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbmlmcmFtZSB7XG4gIGJvcmRlcjogMDsgfVxuXG5vbCxcbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogU3VwcHJlc3MgdGhlIGZvY3VzIG91dGxpbmUgb24gZWxlbWVudHMgdGhhdCBjYW5ub3QgYmUgYWNjZXNzZWQgdmlhIGtleWJvYXJkLlxuICogVGhpcyBwcmV2ZW50cyBhbiB1bndhbnRlZCBmb2N1cyBvdXRsaW5lIGZyb20gYXBwZWFyaW5nIGFyb3VuZCBlbGVtZW50cyB0aGF0XG4gKiBtaWdodCBzdGlsbCByZXNwb25kIHRvIHBvaW50ZXIgZXZlbnRzLlxuICovXG5bdGFiaW5kZXg9XCItMVwiXTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDsgfVxuXG4ubWlzdCAuaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RjZmFjMDsgfVxuXG4ubWlzdCAuY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDk2OGI7IH1cblxuLm1pc3QgLmZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4NWM3OWM7IH1cblxuLnNwcmluZyAuaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZmFjNzsgfVxuXG4uc3ByaW5nIC5jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MyNDU0ZTsgfVxuXG4uc3ByaW5nIC5mb290ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZiMTU4OyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogVGhpbjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvVGhpbi5lb3RcIik7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9UaGluLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvVGhpbi53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvVGhpbi50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvVGhpbi5zdmcjVGhpblwiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBMaWdodDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvTGlnaHQuZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvTGlnaHQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9MaWdodC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvTGlnaHQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL0xpZ2h0LnN2ZyNMaWdodFwiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9SZWd1bGFyLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JlZ3VsYXIuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9SZWd1bGFyLnN2ZyNSZWd1bGFyXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXI7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JlZ3VsYXIuZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvUmVndWxhci5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JlZ3VsYXIudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JlZ3VsYXIuc3ZnI1JlZ3VsYXJcIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogTWVkaXVtO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9NZWRpdW0uZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvTWVkaXVtLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvTWVkaXVtLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9NZWRpdW0udHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL01lZGl1bS5zdmcjTWVkaXVtXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IEJvbGQ7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL0JvbGQuZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvQm9sZC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL0JvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL0JvbGQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL0JvbGQuc3ZnI0JvbGRcIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogQmxhY2s7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL0JsYWNrLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL0JsYWNrLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvQmxhY2sud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL0JsYWNrLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9CbGFjay5zdmcjQmxhY2tcIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogcmVndWxhclNlcmlmO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250czIvcmVndWxhclNlcmlmLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzMi9yZWd1bGFyU2VyaWYuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250czIvcmVndWxhclNlcmlmLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250czIvcmVndWxhclNlcmlmLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250czIvcmVndWxhclNlcmlmLnN2ZyNyZWd1bGFyU2VyaWZcIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbi8qKlxuICogQGRlZmluZSB1dGlsaXRpZXNcbiAqIFNpemluZyB1dGlsaXRpZXNcbiAqL1xuLyogUHJvcG9ydGlvbmFsIHdpZHRoc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogU3BlY2lmeSB0aGUgcHJvcG9ydGlvbmFsIHdpZHRoIG9mIGFuIG9iamVjdC5cbiAqIEludGVudGlvbmFsIHJlZHVuZGFuY3kgYnVpbGQgaW50byBlYWNoIHNldCBvZiB1bml0IGNsYXNzZXMuXG4gKiBTdXBwb3J0czogMiwgMywgNCwgNSwgNiwgOCwgMTAsIDEyIHBhcnRcbiAqXG4gKiAxLiBVc2UgYGZsZXgtYmFzaXM6IGF1dG9gIHdpdGggYSB3aWR0aCB0byBhdm9pZCBib3gtc2l6aW5nIGJ1ZyBpbiBJRTEwLzExXG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbE1EXG4gKi9cbltjbGFzcyo9XCJ1LXNpemVcIl0ge1xuICBmbGV4LWJhc2lzOiBhdXRvICFpbXBvcnRhbnQ7XG4gIC8qIDEgKi8gfVxuXG4udS1zaXplMW9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUxb2YxMCB7XG4gIHdpZHRoOiAxMCUgIWltcG9ydGFudDsgfVxuXG4udS1zaXplMW9mOCB7XG4gIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUxb2Y2LFxuLnUtc2l6ZTJvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUxb2Y1LFxuLnUtc2l6ZTJvZjEwIHtcbiAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUxb2Y0LFxuLnUtc2l6ZTJvZjgsXG4udS1zaXplM29mMTIge1xuICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTNvZjEwIHtcbiAgd2lkdGg6IDMwJSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUxb2YzLFxuLnUtc2l6ZTJvZjYsXG4udS1zaXplNG9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMSAvIDMpICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTNvZjgge1xuICB3aWR0aDogMzcuNSUgIWltcG9ydGFudDsgfVxuXG4udS1zaXplMm9mNSxcbi51LXNpemU0b2YxMCB7XG4gIHdpZHRoOiA0MCUgIWltcG9ydGFudDsgfVxuXG4udS1zaXplNW9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogNSAvIDEyKSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUxb2YyLFxuLnUtc2l6ZTJvZjQsXG4udS1zaXplM29mNixcbi51LXNpemU0b2Y4LFxuLnUtc2l6ZTVvZjEwLFxuLnUtc2l6ZTZvZjEyIHtcbiAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemU3b2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTNvZjUsXG4udS1zaXplNm9mMTAge1xuICB3aWR0aDogNjAlICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTVvZjgge1xuICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDsgfVxuXG4udS1zaXplMm9mMyxcbi51LXNpemU0b2Y2LFxuLnUtc2l6ZThvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemU3b2YxMCB7XG4gIHdpZHRoOiA3MCUgIWltcG9ydGFudDsgfVxuXG4udS1zaXplM29mNCxcbi51LXNpemU2b2Y4LFxuLnUtc2l6ZTlvZjEyIHtcbiAgd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemU0b2Y1LFxuLnUtc2l6ZThvZjEwIHtcbiAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemU1b2Y2LFxuLnUtc2l6ZTEwb2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gNikgIWltcG9ydGFudDsgfVxuXG4udS1zaXplN29mOCB7XG4gIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemU5b2YxMCB7XG4gIHdpZHRoOiA5MCUgIWltcG9ydGFudDsgfVxuXG4udS1zaXplMTFvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDExIC8gMTIpICFpbXBvcnRhbnQ7IH1cblxuLyogSW50cmluc2ljIHdpZHRoc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogTWFrZSBhbiBlbGVtZW50IHNocmluayB3cmFwIGl0cyBjb250ZW50LlxuICovXG4udS1zaXplRml0IHtcbiAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogTWFrZSBhbiBlbGVtZW50IGZpbGwgdGhlIHJlbWFpbmluZyBzcGFjZS5cbiAqXG4gKiAxLiBCZSBleHBsaWNpdCB0byB3b3JrIGFyb3VuZCBJRTEwIGJ1ZyB3aXRoIHNob3J0aGFuZCBmbGV4XG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbEM3XG4gKiAyLiBJRTEwIGlnbm9yZXMgcHJldmlvdXMgYGZsZXgtYmFzaXNgIHZhbHVlLiBTZXR0aW5nIGFnYWluIGhlcmUgZml4ZXNcbiAqICAgIGh0dHA6Ly9naXQuaW8vdmxsTXRcbiAqL1xuLnUtc2l6ZUZpbGwge1xuICBmbGV4OiAxIDEgMCUgIWltcG9ydGFudDtcbiAgLyogMSAqL1xuICBmbGV4LWJhc2lzOiAwJSAhaW1wb3J0YW50O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBbiBhbHRlcm5hdGl2ZSBtZXRob2QgdG8gbWFrZSBhbiBlbGVtZW50IGZpbGwgdGhlIHJlbWFpbmluZyBzcGFjZS5cbiAqIERpc3RyaWJ1dGVzIHNwYWNlIGJhc2VkIG9uIHRoZSBpbml0aWFsIHdpZHRoIGFuZCBoZWlnaHQgb2YgdGhlIGVsZW1lbnRcbiAqXG4gKiBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MtZmxleGJveC9pbWFnZXMvcmVsLXZzLWFicy1mbGV4LnN2Z1xuICovXG4udS1zaXplRmlsbEFsdCB7XG4gIGZsZXg6IDEgMSBhdXRvICFpbXBvcnRhbnQ7XG4gIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIE1ha2UgYW4gZWxlbWVudCB0aGUgd2lkdGggb2YgaXRzIHBhcmVudC5cbiAqL1xuLnUtc2l6ZUZ1bGwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94ICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IH1cblxuW2NsYXNzKj1cInUteHMtc2l6ZVwiXSB7XG4gIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplMW9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUxb2YxMCB7XG4gIHdpZHRoOiAxMCUgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplMW9mOCB7XG4gIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUxb2Y2LFxuLnUteHMtc2l6ZTJvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUxb2Y1LFxuLnUteHMtc2l6ZTJvZjEwIHtcbiAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUxb2Y0LFxuLnUteHMtc2l6ZTJvZjgsXG4udS14cy1zaXplM29mMTIge1xuICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTNvZjEwIHtcbiAgd2lkdGg6IDMwJSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUxb2YzLFxuLnUteHMtc2l6ZTJvZjYsXG4udS14cy1zaXplNG9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMSAvIDMpICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTNvZjgge1xuICB3aWR0aDogMzcuNSUgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplMm9mNSxcbi51LXhzLXNpemU0b2YxMCB7XG4gIHdpZHRoOiA0MCUgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplNW9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogNSAvIDEyKSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUxb2YyLFxuLnUteHMtc2l6ZTJvZjQsXG4udS14cy1zaXplM29mNixcbi51LXhzLXNpemU0b2Y4LFxuLnUteHMtc2l6ZTVvZjEwLFxuLnUteHMtc2l6ZTZvZjEyIHtcbiAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemU3b2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTNvZjUsXG4udS14cy1zaXplNm9mMTAge1xuICB3aWR0aDogNjAlICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTVvZjgge1xuICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplMm9mMyxcbi51LXhzLXNpemU0b2Y2LFxuLnUteHMtc2l6ZThvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemU3b2YxMCB7XG4gIHdpZHRoOiA3MCUgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplM29mNCxcbi51LXhzLXNpemU2b2Y4LFxuLnUteHMtc2l6ZTlvZjEyIHtcbiAgd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemU0b2Y1LFxuLnUteHMtc2l6ZThvZjEwIHtcbiAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemU1b2Y2LFxuLnUteHMtc2l6ZTEwb2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gNikgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplN29mOCB7XG4gIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemU5b2YxMCB7XG4gIHdpZHRoOiA5MCUgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplMTFvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDExIC8gMTIpICFpbXBvcnRhbnQ7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gIFtjbGFzcyo9XCJ1LXNtLXNpemVcIl0ge1xuICAgIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplMW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTFvZjEwIHtcbiAgICB3aWR0aDogMTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTFvZjgge1xuICAgIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUxb2Y2LFxuICAudS1zbS1zaXplMm9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gNikgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplMW9mNSxcbiAgLnUtc20tc2l6ZTJvZjEwIHtcbiAgICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTFvZjQsXG4gIC51LXNtLXNpemUyb2Y4LFxuICAudS1zbS1zaXplM29mMTIge1xuICAgIHdpZHRoOiAyNSUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplM29mMTAge1xuICAgIHdpZHRoOiAzMCUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplMW9mMyxcbiAgLnUtc20tc2l6ZTJvZjYsXG4gIC51LXNtLXNpemU0b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAzKSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUzb2Y4IHtcbiAgICB3aWR0aDogMzcuNSUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplMm9mNSxcbiAgLnUtc20tc2l6ZTRvZjEwIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTVvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNSAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUxb2YyLFxuICAudS1zbS1zaXplMm9mNCxcbiAgLnUtc20tc2l6ZTNvZjYsXG4gIC51LXNtLXNpemU0b2Y4LFxuICAudS1zbS1zaXplNW9mMTAsXG4gIC51LXNtLXNpemU2b2YxMiB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemU3b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDcgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplM29mNSxcbiAgLnUtc20tc2l6ZTZvZjEwIHtcbiAgICB3aWR0aDogNjAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTVvZjgge1xuICAgIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUyb2YzLFxuICAudS1zbS1zaXplNG9mNixcbiAgLnUtc20tc2l6ZThvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMiAvIDMpICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTdvZjEwIHtcbiAgICB3aWR0aDogNzAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTNvZjQsXG4gIC51LXNtLXNpemU2b2Y4LFxuICAudS1zbS1zaXplOW9mMTIge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplNG9mNSxcbiAgLnUtc20tc2l6ZThvZjEwIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTVvZjYsXG4gIC51LXNtLXNpemUxMG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gNikgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplN29mOCB7XG4gICAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTlvZjEwIHtcbiAgICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTExb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDExIC8gMTIpICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgW2NsYXNzKj1cInUtbWQtc2l6ZVwiXSB7XG4gICAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUxb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplMW9mMTAge1xuICAgIHdpZHRoOiAxMCUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplMW9mOCB7XG4gICAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTFvZjYsXG4gIC51LW1kLXNpemUyb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUxb2Y1LFxuICAudS1tZC1zaXplMm9mMTAge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplMW9mNCxcbiAgLnUtbWQtc2l6ZTJvZjgsXG4gIC51LW1kLXNpemUzb2YxMiB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUzb2YxMCB7XG4gICAgd2lkdGg6IDMwJSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUxb2YzLFxuICAudS1tZC1zaXplMm9mNixcbiAgLnUtbWQtc2l6ZTRvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDMpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTNvZjgge1xuICAgIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUyb2Y1LFxuICAudS1tZC1zaXplNG9mMTAge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplNW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTFvZjIsXG4gIC51LW1kLXNpemUyb2Y0LFxuICAudS1tZC1zaXplM29mNixcbiAgLnUtbWQtc2l6ZTRvZjgsXG4gIC51LW1kLXNpemU1b2YxMCxcbiAgLnUtbWQtc2l6ZTZvZjEyIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTdvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNyAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUzb2Y1LFxuICAudS1tZC1zaXplNm9mMTAge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplNW9mOCB7XG4gICAgd2lkdGg6IDYyLjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTJvZjMsXG4gIC51LW1kLXNpemU0b2Y2LFxuICAudS1tZC1zaXplOG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAyIC8gMykgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplN29mMTAge1xuICAgIHdpZHRoOiA3MCUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplM29mNCxcbiAgLnUtbWQtc2l6ZTZvZjgsXG4gIC51LW1kLXNpemU5b2YxMiB7XG4gICAgd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemU0b2Y1LFxuICAudS1tZC1zaXplOG9mMTAge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplNW9mNixcbiAgLnUtbWQtc2l6ZTEwb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyA2KSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemU3b2Y4IHtcbiAgICB3aWR0aDogODcuNSUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplOW9mMTAge1xuICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplMTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMTEgLyAxMikgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICBbY2xhc3MqPVwidS1sZy1zaXplXCJdIHtcbiAgICBmbGV4LWJhc2lzOiBhdXRvICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemUxb2YxMCB7XG4gICAgd2lkdGg6IDEwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemUxb2Y4IHtcbiAgICB3aWR0aDogMTIuNSUgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplMW9mNixcbiAgLnUtbGctc2l6ZTJvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDYpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTFvZjUsXG4gIC51LWxnLXNpemUyb2YxMCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemUxb2Y0LFxuICAudS1sZy1zaXplMm9mOCxcbiAgLnUtbGctc2l6ZTNvZjEyIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTNvZjEwIHtcbiAgICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTFvZjMsXG4gIC51LWxnLXNpemUyb2Y2LFxuICAudS1sZy1zaXplNG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplM29mOCB7XG4gICAgd2lkdGg6IDM3LjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTJvZjUsXG4gIC51LWxnLXNpemU0b2YxMCB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemU1b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplMW9mMixcbiAgLnUtbGctc2l6ZTJvZjQsXG4gIC51LWxnLXNpemUzb2Y2LFxuICAudS1sZy1zaXplNG9mOCxcbiAgLnUtbGctc2l6ZTVvZjEwLFxuICAudS1sZy1zaXplNm9mMTIge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplN29mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTNvZjUsXG4gIC51LWxnLXNpemU2b2YxMCB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemU1b2Y4IHtcbiAgICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplMm9mMyxcbiAgLnUtbGctc2l6ZTRvZjYsXG4gIC51LWxnLXNpemU4b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemU3b2YxMCB7XG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemUzb2Y0LFxuICAudS1sZy1zaXplNm9mOCxcbiAgLnUtbGctc2l6ZTlvZjEyIHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTRvZjUsXG4gIC51LWxnLXNpemU4b2YxMCB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemU1b2Y2LFxuICAudS1sZy1zaXplMTBvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTdvZjgge1xuICAgIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemU5b2YxMCB7XG4gICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemUxMW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICBbY2xhc3MqPVwidS14bC1zaXplXCJdIHtcbiAgICBmbGV4LWJhc2lzOiBhdXRvICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUxb2YxMCB7XG4gICAgd2lkdGg6IDEwJSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUxb2Y4IHtcbiAgICB3aWR0aDogMTIuNSUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplMW9mNixcbiAgLnUteGwtc2l6ZTJvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDYpICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTFvZjUsXG4gIC51LXhsLXNpemUyb2YxMCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUxb2Y0LFxuICAudS14bC1zaXplMm9mOCxcbiAgLnUteGwtc2l6ZTNvZjEyIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTNvZjEwIHtcbiAgICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTFvZjMsXG4gIC51LXhsLXNpemUyb2Y2LFxuICAudS14bC1zaXplNG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplM29mOCB7XG4gICAgd2lkdGg6IDM3LjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTJvZjUsXG4gIC51LXhsLXNpemU0b2YxMCB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemU1b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplMW9mMixcbiAgLnUteGwtc2l6ZTJvZjQsXG4gIC51LXhsLXNpemUzb2Y2LFxuICAudS14bC1zaXplNG9mOCxcbiAgLnUteGwtc2l6ZTVvZjEwLFxuICAudS14bC1zaXplNm9mMTIge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplN29mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTNvZjUsXG4gIC51LXhsLXNpemU2b2YxMCB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemU1b2Y4IHtcbiAgICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplMm9mMyxcbiAgLnUteGwtc2l6ZTRvZjYsXG4gIC51LXhsLXNpemU4b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemU3b2YxMCB7XG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUzb2Y0LFxuICAudS14bC1zaXplNm9mOCxcbiAgLnUteGwtc2l6ZTlvZjEyIHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTRvZjUsXG4gIC51LXhsLXNpemU4b2YxMCB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemU1b2Y2LFxuICAudS14bC1zaXplMTBvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTdvZjgge1xuICAgIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemU5b2YxMCB7XG4gICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUxMW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE3MDBweCkge1xuICBbY2xhc3MqPVwidS1zdS1zaXplXCJdIHtcbiAgICBmbGV4LWJhc2lzOiBhdXRvICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUxb2YxMCB7XG4gICAgd2lkdGg6IDEwJSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUxb2Y4IHtcbiAgICB3aWR0aDogMTIuNSUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplMW9mNixcbiAgLnUtc3Utc2l6ZTJvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDYpICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTFvZjUsXG4gIC51LXN1LXNpemUyb2YxMCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUxb2Y0LFxuICAudS1zdS1zaXplMm9mOCxcbiAgLnUtc3Utc2l6ZTNvZjEyIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTNvZjEwIHtcbiAgICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTFvZjMsXG4gIC51LXN1LXNpemUyb2Y2LFxuICAudS1zdS1zaXplNG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplM29mOCB7XG4gICAgd2lkdGg6IDM3LjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTJvZjUsXG4gIC51LXN1LXNpemU0b2YxMCB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemU1b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplMW9mMixcbiAgLnUtc3Utc2l6ZTJvZjQsXG4gIC51LXN1LXNpemUzb2Y2LFxuICAudS1zdS1zaXplNG9mOCxcbiAgLnUtc3Utc2l6ZTVvZjEwLFxuICAudS1zdS1zaXplNm9mMTIge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplN29mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTNvZjUsXG4gIC51LXN1LXNpemU2b2YxMCB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemU1b2Y4IHtcbiAgICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplMm9mMyxcbiAgLnUtc3Utc2l6ZTRvZjYsXG4gIC51LXN1LXNpemU4b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemU3b2YxMCB7XG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUzb2Y0LFxuICAudS1zdS1zaXplNm9mOCxcbiAgLnUtc3Utc2l6ZTlvZjEyIHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTRvZjUsXG4gIC51LXN1LXNpemU4b2YxMCB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemU1b2Y2LFxuICAudS1zdS1zaXplMTBvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTdvZjgge1xuICAgIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemU5b2YxMCB7XG4gICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUxMW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50OyB9IH1cblxuLyoqIEBkZWZpbmUgdXRpbGl0aWVzICovXG4vKiBBcHBsaWVzIHRvIGZsZXggY29udGFpbmVyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBDb250YWluZXJcbiAqL1xuLnUtZmxleCB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDsgfVxuXG4udS1mbGV4SW5saW5lIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXggIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIERpcmVjdGlvbjogcm93XG4gKi9cbi51LWZsZXhSb3cge1xuICBmbGV4LWRpcmVjdGlvbjogcm93ICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleFJvd1JldmVyc2Uge1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2UgIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIERpcmVjdGlvbjogY29sdW1uXG4gKi9cbi51LWZsZXhDb2wge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleENvbFJldmVyc2Uge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2UgIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIFdyYXBcbiAqL1xuLnUtZmxleFdyYXAge1xuICBmbGV4LXdyYXA6IHdyYXAgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4Tm9XcmFwIHtcbiAgZmxleC13cmFwOiBub3dyYXAgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4V3JhcFJldmVyc2Uge1xuICBmbGV4LXdyYXA6IHdyYXAtcmV2ZXJzZSAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogQWxpZ24gaXRlbXMgYWxvbmcgdGhlIG1haW4gYXhpcyBvZiB0aGUgY3VycmVudCBsaW5lIG9mIHRoZSBmbGV4IGNvbnRhaW5lclxuICovXG4udS1mbGV4SnVzdGlmeVN0YXJ0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEp1c3RpZnlFbmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEp1c3RpZnlDZW50ZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhKdXN0aWZ5QmV0d2VlbiB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhKdXN0aWZ5QXJvdW5kIHtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQgIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIEFsaWduIGl0ZW1zIGluIHRoZSBjcm9zcyBheGlzIG9mIHRoZSBjdXJyZW50IGxpbmUgb2YgdGhlIGZsZXggY29udGFpbmVyXG4gKiBTaW1pbGFyIHRvIGBqdXN0aWZ5LWNvbnRlbnRgIGJ1dCBpbiB0aGUgcGVycGVuZGljdWxhciBkaXJlY3Rpb25cbiAqL1xuLnUtZmxleEFsaWduSXRlbXNTdGFydCB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEFsaWduSXRlbXNFbmQge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25JdGVtc0NlbnRlciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25JdGVtc1N0cmV0Y2gge1xuICBhbGlnbi1pdGVtczogc3RyZXRjaCAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhBbGlnbkl0ZW1zQmFzZWxpbmUge1xuICBhbGlnbi1pdGVtczogYmFzZWxpbmUgIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIEFsaWducyBpdGVtcyB3aXRoaW4gdGhlIGZsZXggY29udGFpbmVyIHdoZW4gdGhlcmUgaXMgZXh0cmFcbiAqIHNwYWNlIGluIHRoZSBjcm9zcy1heGlzXG4gKlxuICogSGFzIG5vIGVmZmVjdCB3aGVuIHRoZXJlIGlzIG9ubHkgb25lIGxpbmUgb2YgZmxleCBpdGVtcy5cbiAqL1xuLnUtZmxleEFsaWduQ29udGVudFN0YXJ0IHtcbiAgYWxpZ24tY29udGVudDogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhBbGlnbkNvbnRlbnRFbmQge1xuICBhbGlnbi1jb250ZW50OiBmbGV4LWVuZCAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhBbGlnbkNvbnRlbnRDZW50ZXIge1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25Db250ZW50U3RyZXRjaCB7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25Db250ZW50QmV0d2VlbiB7XG4gIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25Db250ZW50QXJvdW5kIHtcbiAgYWxpZ24tY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiAxLiBTZXQgdGhlIGZsZXgtc2hyaW5rIGRlZmF1bHQgZXhwbGljaXRseSB0byBmaXggSUUxMCAtIGh0dHA6Ly9naXQuaW8vdmxsQzdcbiAqL1xuLyogcG9zdGNzcy1iZW0tbGludGVyOiBpZ25vcmUgKi9cbi51LWZsZXggPiAqLFxuLnUtZmxleElubGluZSA+ICoge1xuICBmbGV4LXNocmluazogMTtcbiAgLyogMSAqLyB9XG5cbi8qIEFwcGxpZXMgdG8gZmxleCBpdGVtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogT3ZlcnJpZGUgZGVmYXVsdCBhbGlnbm1lbnQgb2Ygc2luZ2xlIGl0ZW0gd2hlbiBzcGVjaWZpZWQgYnkgYGFsaWduLWl0ZW1zYFxuICovXG4udS1mbGV4QWxpZ25TZWxmU3RhcnQge1xuICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEFsaWduU2VsZkVuZCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEFsaWduU2VsZkNlbnRlciB7XG4gIGFsaWduLXNlbGY6IGNlbnRlciAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhBbGlnblNlbGZTdHJldGNoIHtcbiAgYWxpZ24tc2VsZjogc3RyZXRjaCAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhBbGlnblNlbGZCYXNlbGluZSB7XG4gIGFsaWduLXNlbGY6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEFsaWduU2VsZkF1dG8ge1xuICBhbGlnbi1zZWxmOiBhdXRvICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBDaGFuZ2Ugb3JkZXIgd2l0aG91dCBlZGl0aW5nIHVuZGVybHlpbmcgSFRNTFxuICovXG4udS1mbGV4T3JkZXJGaXJzdCB7XG4gIG9yZGVyOiAtMSAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhPcmRlckxhc3Qge1xuICBvcmRlcjogMSAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhPcmRlck5vbmUge1xuICBvcmRlcjogMCAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogU3BlY2lmeSB0aGUgZmxleCBncm93IGZhY3Rvciwgd2hpY2ggZGV0ZXJtaW5lcyBob3cgbXVjaCB0aGUgZmxleCBpdGVtIHdpbGxcbiAqIGdyb3cgcmVsYXRpdmUgdG8gdGhlIHJlc3Qgb2YgdGhlIGZsZXggaXRlbXMgaW4gdGhlIGZsZXggY29udGFpbmVyLlxuICpcbiAqIFN1cHBvcnRzIDEtNSBwcm9wb3J0aW9uc1xuICpcbiAqIDEuIFByb3ZpZGUgYWxsIHZhbHVlcyB0byBhdm9pZCBJRTEwIGJ1ZyB3aXRoIHNob3J0aGFuZCBmbGV4XG4gKiAgICAtIGh0dHA6Ly9naXQuaW8vdmxsQzdcbiAqXG4gKiAgICBVc2UgYDAlYCB0byBhdm9pZCBidWcgaW4gSUUxMC8xMSB3aXRoIHVuaXRsZXNzIGZsZXggYmFzaXMuIFVzaW5nIHRoaXNcbiAqICAgIGluc3RlYWQgb2YgYGF1dG9gIGFzIHRoaXMgbWF0Y2hlcyB3aGF0IHRoZSBkZWZhdWx0IHdvdWxkIGJlIHdpdGggYGZsZXhgXG4gKiAgICBzaG9ydGhhbmQgLSBodHRwOi8vZ2l0LmlvL3ZsbFd4XG4gKi9cbi51LWZsZXhHcm93MSB7XG4gIGZsZXg6IDEgMSAwJSAhaW1wb3J0YW50O1xuICAvKiAxICovIH1cblxuLnUtZmxleEdyb3cyIHtcbiAgZmxleDogMiAxIDAlICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEdyb3czIHtcbiAgZmxleDogMyAxIDAlICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEdyb3c0IHtcbiAgZmxleDogNCAxIDAlICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEdyb3c1IHtcbiAgZmxleDogNSAxIDAlICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBBbGlnbmluZyB3aXRoIGBhdXRvYCBtYXJnaW5zXG4gKiBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MtZmxleGJveC0xLyNhdXRvLW1hcmdpbnNcbiAqL1xuLnUtZmxleEV4cGFuZCB7XG4gIG1hcmdpbjogYXV0byAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhFeHBhbmRMZWZ0IHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG8gIWltcG9ydGFudDsgfVxuXG4udS1mbGV4RXhwYW5kUmlnaHQge1xuICBtYXJnaW4tcmlnaHQ6IGF1dG8gIWltcG9ydGFudDsgfVxuXG4udS1mbGV4RXhwYW5kVG9wIHtcbiAgbWFyZ2luLXRvcDogYXV0byAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhFeHBhbmRCb3R0b20ge1xuICBtYXJnaW4tYm90dG9tOiBhdXRvICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBXb3JkIGJyZWFraW5nXG4gKlxuICogQnJlYWsgc3RyaW5ncyB3aGVuIHRoZWlyIGxlbmd0aCBleGNlZWRzIHRoZSB3aWR0aCBvZiB0aGVpciBjb250YWluZXIuXG4gKi9cbi51LXRleHRCcmVhayB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogSG9yaXpvbnRhbCB0ZXh0IGFsaWdubWVudFxuICovXG4udS10ZXh0Q2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7IH1cblxuLnUtdGV4dExlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7IH1cblxuLnUtdGV4dFJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIEluaGVyaXQgdGhlIGFuY2VzdG9yJ3MgdGV4dCBjb2xvci5cbiAqL1xuLnUtdGV4dEluaGVyaXRDb2xvciB7XG4gIGNvbG9yOiBpbmhlcml0ICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBFbmFibGVzIGZvbnQga2VybmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKiBodHRwOi8vYmxvZy50eXBla2l0LmNvbS8yMDE0LzAyLzA1L2tlcm5pbmctb24tdGhlLXdlYi9cbiAqXG4gKiAxLiBDaHJvbWUgKG5vdCBXaW5kb3dzKSwgRmlyZWZveCwgSUUgMTArXG4gKiAyLiBTYWZhcmkgNyBhbmQgZnV0dXJlIGJyb3dzZXJzXG4gKiAzLiBDaHJvbWUgKG5vdCBXaW5kb3dzKSwgRmlyZWZveCwgU2FmYXJpIDYrLCBpT1MsIEFuZHJvaWRcbiAqL1xuLnUtdGV4dEtlcm4ge1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiIDE7XG4gIC8qIDEgKi9cbiAgZm9udC1rZXJuaW5nOiBub3JtYWw7XG4gIC8qIDIgKi9cbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiAgLyogMyAqLyB9XG5cbi8qKlxuICogUHJldmVudCB3aGl0ZXNwYWNlIHdyYXBwaW5nXG4gKi9cbi51LXRleHROb1dyYXAge1xuICB3aGl0ZS1zcGFjZTogbm93cmFwICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBUZXh0IHRydW5jYXRpb25cbiAqXG4gKiBQcmV2ZW50IHRleHQgZnJvbSB3cmFwcGluZyBvbnRvIG11bHRpcGxlIGxpbmVzLCBhbmQgdHJ1bmNhdGUgd2l0aCBhblxuICogZWxsaXBzaXMuXG4gKlxuICogMS4gRW5zdXJlIHRoYXQgdGhlIG5vZGUgaGFzIGEgbWF4aW11bSB3aWR0aCBhZnRlciB3aGljaCB0cnVuY2F0aW9uIGNhblxuICogICAgb2NjdXIuXG4gKiAyLiBGaXggZm9yIElFIDgvOSBpZiBgd29yZC13cmFwOiBicmVhay13b3JkYCBpcyBpbiBlZmZlY3Qgb24gYW5jZXN0b3JcbiAqICAgIG5vZGVzLlxuICovXG4udS10ZXh0VHJ1bmNhdGUge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcyAhaW1wb3J0YW50O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwICFpbXBvcnRhbnQ7XG4gIHdvcmQtd3JhcDogbm9ybWFsICFpbXBvcnRhbnQ7XG4gIC8qIDIgKi8gfVxuXG4vKiogQGRlZmluZSBCdXR0b24gKi9cbi8qKlxuICogVGhlIGJ1dHRvbiBjbGFzc2VzIGFyZSBiZXN0IGFwcGxpZWQgdG8gbGlua3MgYW5kIGJ1dHRvbnMuXG4gKiBUaGVzZSBjb21wb25lbnRzIGNhbiBiZSB1c2VkIGluIGZvcm1zLCBhcyBjYWxscyB0byBhY3Rpb24sIG9yIGFzIHBhcnQgb2YgdGhlXG4gKiBnZW5lcmFsIFVJIG9mIHRoZSBzaXRlL2FwcC5cbiAqL1xuLyoqXG4gKiAxLiBOb3JtYWxpemUgYGJveC1zaXppbmdgIGFjcm9zcyBhbGwgZWxlbWVudHMgdGhhdCB0aGlzIGNvbXBvbmVudCBjb3VsZCBiZVxuICogICAgYXBwbGllZCB0by5cbiAqIDIuIEluaGVyaXQgdGV4dCBjb2xvciBmcm9tIGFuY2VzdG9yLlxuICogMy4gSW5oZXJpdCBmb250IHN0eWxlcyBmcm9tIGFuY2VzdG9yLlxuICogNC4gUHJldmVudCBidXR0b24gdGV4dCBmcm9tIGJlaW5nIHNlbGVjdGFibGUuXG4gKi9cbi5CdXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWNvbG9yOiBjdXJyZW50Y29sb3I7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogMXB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250OiBpbmhlcml0O1xuICAvKiAzICovXG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMC40ZW0gMC43NWVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgLyogNCAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0K1xuICovXG4uQnV0dG9uOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogV29yayBhcm91bmQgYSBGaXJlZm94L0lFIGJ1ZyB3aGVyZSB0aGUgdHJhbnNwYXJlbnQgYGJ1dHRvbmAgYmFja2dyb3VuZFxuICogcmVzdWx0cyBpbiBhIGxvc3Mgb2YgdGhlIGRlZmF1bHQgYGJ1dHRvbmAgZm9jdXMgc3R5bGVzLlxuICovXG4uQnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZDtcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yOyB9XG5cbi8qKlxuICogVUkgc3RhdGVzXG4gKi9cbi5CdXR0b246aG92ZXIsXG4uQnV0dG9uOmZvY3VzLFxuLkJ1dHRvbjphY3RpdmUge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLkJ1dHRvbjpkaXNhYmxlZCxcbi5CdXR0b24uaXMtZGlzYWJsZWQge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIG9wYWNpdHk6IHZhcigtLUJ1dHRvbi1kaXNhYmxlZC1vcGFjaXR5KTsgfVxuXG4vKiogQGRlZmluZSBGbGV4RW1iZWQgKi9cbi8qKlxuICogRmxleGlibGUgbWVkaWEgZW1iZWRzXG4gKlxuICogRm9yIHVzZSB3aXRoIG1lZGlhIGVtYmVkcyDigJMgc3VjaCBhcyB2aWRlb3MsIHNsaWRlc2hvd3MsIG9yIGV2ZW4gaW1hZ2VzIOKAk1xuICogdGhhdCBuZWVkIHRvIHJldGFpbiBhIHNwZWNpZmljIGFzcGVjdCByYXRpbyBidXQgYWRhcHQgdG8gdGhlIHdpZHRoIG9mIHRoZWlyXG4gKiBjb250YWluaW5nIGVsZW1lbnQuXG4gKlxuICogQmFzZWQgb246IGh0dHA6Ly9hbGlzdGFwYXJ0LmNvbS9hcnRpY2xlL2NyZWF0aW5nLWludHJpbnNpYy1yYXRpb3MtZm9yLXZpZGVvXG4gKi9cbi5GbGV4RW1iZWQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbi8qKlxuICogVGhlIGFzcGVjdC1yYXRpbyBoYWNrIGlzIGFwcGxpZWQgdG8gYW4gZW1wdHkgZWxlbWVudCBiZWNhdXNlIGl0IGFsbG93c1xuICogdGhlIGNvbXBvbmVudCB0byByZXNwZWN0IGBtYXgtaGVpZ2h0YC4gRGVmYXVsdCBhc3BlY3QgcmF0aW8gaXMgMToxLlxuICovXG4uRmxleEVtYmVkLXJhdGlvIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICB3aWR0aDogMTAwJTsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiAzOjEgYXNwZWN0IHJhdGlvXG4gKi9cbi5GbGV4RW1iZWQtcmF0aW8tLTNieTEge1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC8gMyk7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogMjoxIGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLXJhdGlvLS0yYnkxIHtcbiAgcGFkZGluZy1ib3R0b206IDUwJTsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiAxNjo5IGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLXJhdGlvLS0xNmJ5OSB7XG4gIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogNDozIGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLXJhdGlvLS00YnkzIHtcbiAgcGFkZGluZy1ib3R0b206IDc1JTsgfVxuXG4vKipcbiAqIEZpdCB0aGUgY29udGVudCB0byB0aGUgYXNwZWN0IHJhdGlvXG4gKi9cbi5GbGV4RW1iZWQtY29udGVudCB7XG4gIGJvdHRvbTogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLyoqIEBkZWZpbmUgR3JpZCAqL1xuLyoqXG4gKiBDb3JlIGdyaWQgY29tcG9uZW50XG4gKlxuICogRE8gTk9UIGFwcGx5IGRpbWVuc2lvbiBvciBvZmZzZXQgdXRpbGl0aWVzIHRvIHRoZSBgR3JpZGAgZWxlbWVudC4gQWxsIGNlbGxcbiAqIHdpZHRocyBhbmQgb2Zmc2V0cyBzaG91bGQgYmUgYXBwbGllZCB0byBjaGlsZCBncmlkIGNlbGxzLlxuICovXG4vKiBHcmlkIGNvbnRhaW5lclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWxsIGNvbnRlbnQgbXVzdCBiZSBjb250YWluZWQgd2l0aGluIGNoaWxkIGBHcmlkLWNlbGxgIGVsZW1lbnRzLlxuICpcbiAqIDEuIEFjY291bnQgZm9yIGJyb3dzZXIgZGVmYXVsdHMgb2YgZWxlbWVudHMgdGhhdCBtaWdodCBiZSB0aGUgcm9vdCBub2RlIG9mXG4gKiAgICB0aGUgY29tcG9uZW50LlxuICovXG4uR3JpZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC8qIDEgKi9cbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgbWFyZ2luOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBjZW50ZXIgYWxpZ24gYWxsIGdyaWQgY2VsbHNcbiAqL1xuLkdyaWQtLWFsaWduQ2VudGVyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogcmlnaHQgYWxpZ24gYWxsIGdyaWQgY2VsbHNcbiAqL1xuLkdyaWQtLWFsaWduUmlnaHQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IG1pZGRsZS1hbGlnbiBncmlkIGNlbGxzXG4gKi9cbi5HcmlkLS1hbGlnbk1pZGRsZSB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogYm90dG9tLWFsaWduIGdyaWQgY2VsbHNcbiAqL1xuLkdyaWQtLWFsaWduQm90dG9tIHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGFsbG93IGNlbGxzIHRvIGVxdWFsIGRpc3RyaWJ1dGUgd2lkdGhcbiAqXG4gKiAxLiBQcm92aWRlIGFsbCB2YWx1ZXMgdG8gYXZvaWQgSUUxMCBidWcgd2l0aCBzaG9ydGhhbmQgZmxleFxuICogICAgaHR0cDovL2dpdC5pby92bGxDN1xuICpcbiAqICAgIFVzZSBgMCVgIHRvIGF2b2lkIGJ1ZyBpbiBJRTEwLzExIHdpdGggdW5pdGxlc3MgZmxleCBiYXNpc1xuICogICAgaHR0cDovL2dpdC5pby92bGxXeFxuICovXG4uR3JpZC0tZml0ID4gLkdyaWQtY2VsbCB7XG4gIGZsZXg6IDEgMSAwJTtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGFsbCBjZWxscyBtYXRjaCBoZWlnaHQgb2YgdGFsbGVzdCBjZWxsIGluIGEgcm93XG4gKi9cbi5HcmlkLS1lcXVhbEhlaWdodCA+IC5HcmlkLWNlbGwge1xuICBkaXNwbGF5OiBmbGV4OyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGd1dHRlcnNcbiAqL1xuLkdyaWQtLXdpdGhHdXR0ZXIge1xuICBtYXJnaW46IDAgY2FsYygtMC41ICogMThweCk7IH1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCBjYWxjKDAuNSAqIDE4cHgpOyB9XG5cbi8qIEdyaWQgY2VsbFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogTm8gZXhwbGljaXQgd2lkdGggYnkgZGVmYXVsdC4gUmVseSBvbiBjb21iaW5pbmcgYEdyaWQtY2VsbGAgd2l0aCBhIGRpbWVuc2lvblxuICogdXRpbGl0eSBvciBhIGNvbXBvbmVudCBjbGFzcyB0aGF0IGV4dGVuZHMgJ0dyaWQnLlxuICpcbiAqIDEuIFNldCBmbGV4IGl0ZW1zIHRvIGZ1bGwgd2lkdGggYnkgZGVmYXVsdFxuICogMi4gRml4IGlzc3VlIHdoZXJlIGVsZW1lbnRzIHdpdGggb3ZlcmZsb3cgZXh0ZW5kIHBhc3QgdGhlXG4gKiAgICBgR3JpZC1jZWxsYCBjb250YWluZXIgLSBodHRwczovL2dpdC5pby92dzVvRlxuICovXG4uR3JpZC1jZWxsIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgZmxleC1iYXNpczogMTAwJTtcbiAgLyogMSAqL1xuICBtaW4td2lkdGg6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBob3Jpem9udGFsbHkgY2VudGVyIG9uZSB1bml0XG4gKiBTZXQgYSBzcGVjaWZpYyB1bml0IHRvIGJlIGhvcml6b250YWxseSBjZW50ZXJlZC4gRG9lc24ndCBhZmZlY3RcbiAqIGFueSBvdGhlciB1bml0cy4gQ2FuIHN0aWxsIGNvbnRhaW4gYSBjaGlsZCBgR3JpZGAgb2JqZWN0LlxuICovXG4uR3JpZC1jZWxsLS1jZW50ZXIge1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG4ueHMtR3JpZC0tYWxpZ25DZW50ZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4ueHMtR3JpZC0tYWxpZ25SaWdodCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cblxuLnhzLUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4ueHMtR3JpZC0tYWxpZ25Cb3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cblxuLnhzLUdyaWQtY2VsbC0tY2VudGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gIC5zbS1HcmlkLS1hbGlnbkNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLnNtLUdyaWQtLWFsaWduUmlnaHQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLnNtLUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5zbS1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gIC5zbS1HcmlkLWNlbGwtLWNlbnRlciB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1kLUdyaWQtLWFsaWduQ2VudGVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAubWQtR3JpZC0tYWxpZ25SaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAubWQtR3JpZC0tYWxpZ25NaWRkbGUge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLm1kLUdyaWQtLWFsaWduQm90dG9tIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbiAgLm1kLUdyaWQtY2VsbC0tY2VudGVyIHtcbiAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAubGctR3JpZC0tYWxpZ25DZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5sZy1HcmlkLS1hbGlnblJpZ2h0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gIC5sZy1HcmlkLS1hbGlnbk1pZGRsZSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAubGctR3JpZC0tYWxpZ25Cb3R0b20ge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuICAubGctR3JpZC1jZWxsLS1jZW50ZXIge1xuICAgIG1hcmdpbjogMCBhdXRvOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAueGwtR3JpZC0tYWxpZ25DZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC54bC1HcmlkLS1hbGlnblJpZ2h0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gIC54bC1HcmlkLS1hbGlnbk1pZGRsZSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAueGwtR3JpZC0tYWxpZ25Cb3R0b20ge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuICAueGwtR3JpZC1jZWxsLS1jZW50ZXIge1xuICAgIG1hcmdpbjogMCBhdXRvOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE3MDBweCkge1xuICAuc3UtR3JpZC0tYWxpZ25DZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5zdS1HcmlkLS1hbGlnblJpZ2h0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gIC5zdS1HcmlkLS1hbGlnbk1pZGRsZSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAuc3UtR3JpZC0tYWxpZ25Cb3R0b20ge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuICAuc3UtR3JpZC1jZWxsLS1jZW50ZXIge1xuICAgIG1hcmdpbjogMCBhdXRvOyB9IH1cblxuLkdyaWQtLXdpdGhHdXR0ZXIge1xuICBtYXJnaW46IDAgLTEycHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLkdyaWQtLXdpdGhHdXR0ZXIge1xuICAgICAgbWFyZ2luOiAwIC0yNHB4OyB9IH1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCAxMnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5HcmlkLS13aXRoR3V0dGVyID4gLkdyaWQtY2VsbCB7XG4gICAgICBwYWRkaW5nOiAwIDI0cHg7IH0gfVxuXG4uR3JpZC0td2l0aEd1dHRlclNtIHtcbiAgbWFyZ2luOiAwIC0xcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLkdyaWQtLXdpdGhHdXR0ZXJTbSB7XG4gICAgICBtYXJnaW46IDAgLTFweDsgfSB9XG5cbi5HcmlkLS13aXRoR3V0dGVyU20gPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCAxcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLkdyaWQtLXdpdGhHdXR0ZXJTbSA+IC5HcmlkLWNlbGwge1xuICAgICAgcGFkZGluZzogMCAxcHg7IH0gfVxuXG4uR3JpZC0td2l0aEd1dHRlckxnIHtcbiAgbWFyZ2luOiAwIC0yNHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5HcmlkLS13aXRoR3V0dGVyTGcge1xuICAgICAgbWFyZ2luOiAwIC03MnB4OyB9IH1cblxuLkdyaWQtLXdpdGhHdXR0ZXJMZyA+IC5HcmlkLWNlbGwge1xuICBwYWRkaW5nOiAwIDI0cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLkdyaWQtLXdpdGhHdXR0ZXJMZyA+IC5HcmlkLWNlbGwge1xuICAgICAgcGFkZGluZzogMCA3MnB4OyB9IH1cblxuLyoqXG4gICogU2ltcGxlIHBhZ2UtbGV2ZWwgc2V0dXAgZnJvbSBJbnVpdENTUy5cbiAgKlxuICAqIDEuIFNldCB0aGUgZGVmYXVsdCBgZm9udC1zaXplYCBhbmQgYGxpbmUtaGVpZ2h0YCBmb3IgdGhlIGVudGlyZSBwcm9qZWN0LFxuICAqICAgIHNvdXJjZWQgZnJvbSBvdXIgZGVmYXVsdCB2YXJpYWJsZXMuIFRoZSBgZm9udC1zaXplYCBpcyBjYWxjdWxhdGVkIHRvIGV4aXN0XG4gICogICAgaW4gZW1zLCB0aGUgYGxpbmUtaGVpZ2h0YCBpcyBjYWxjdWxhdGVkIHRvIGV4aXN0IHVuaXRsZXNzbHkuXG4gICogMi4gRm9yY2Ugc2Nyb2xsYmFycyB0byBhbHdheXMgYmUgdmlzaWJsZSB0byBwcmV2ZW50IGF3a3dhcmQg4oCYanVtcHPigJkgd2hlblxuICAqICAgIG5hdmlnYXRpbmcgYmV0d2VlbiBwYWdlcyB0aGF0IGRvL2RvIG5vdCBoYXZlIGVub3VnaCBjb250ZW50IHRvIHByb2R1Y2VcbiAgKiAgICBzY3JvbGxiYXJzIG5hdHVyYWxseS5cbiAgKiAzLiBFbnN1cmUgdGhlIHBhZ2UgYWx3YXlzIGZpbGxzIGF0IGxlYXN0IHRoZSBlbnRpcmUgaGVpZ2h0IG9mIHRoZSB2aWV3cG9ydC5cbiAgKi9cbmh0bWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmZGZkO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICAvKiAzICovXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgLyogMiAqLyB9XG5cbmEge1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgYTpob3ZlciwgYTphY3RpdmUsIGE6Zm9jdXMge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7IH1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuLmdtLXN0eWxlIGltZyxcbmltZ1t3aWR0aF0sXG5pbWdbaGVpZ2h0XSB7XG4gIG1heC13aWR0aDogbm9uZTsgfVxuXG4uby1pbWFnZS0tY2lyY2xlIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG5cbi8qIHVuY3NzOmlnbm9yZSAqL1xuaDEsIGgyLCBoMywgaDQsIGg1LCBoNixcbmJsb2NrcXVvdGUsXG51bCwgb2wsIGxpLCBkbCwgZGRcbnAsIGFkZHJlc3MsXG50YWJsZSwgdGltZSxcbmZvcm0sIGZpZWxkc2V0LCBsZWdlbmQsXG5maWd1cmUsIGZpZ2NhcHRpb24sXG50YWJsZSwgdGgsIHRkLCBjYXB0aW9uXG5wcmUsIHNtYWxsLFxuZW0sIGIge1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsOyB9XG5cbmh0bWwge1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHRleHQtcmVuZGVyaW5nOiBnZW9tZXRyaWNQcmVjaXNpb247XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOyB9XG5cbi8qIHVuY3NzOmlnbm9yZSAqL1xudWwsIG9sLCBsaSwgZGwsXG5ibG9ja3F1b3RlLCBwLCBhZGRyZXNzLFxudGFibGUsIHRpbWUsXG5maWVsZHNldCxcbnByZSB7XG4gIG1hcmdpbi1ib3R0b206IDE4cHg7IH1cblxuLm8tcG9zQWJzb2x1dGVDZW50ZXIge1xuICBsZWZ0OiA1MCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyB9XG5cbi5vLXBvc0ZpeGVkQ2VudGVyIHtcbiAgbGVmdDogNTAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuXG4uby1wb3NGdWxsU2NyZWVuIHtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBtYXJnaW46IGF1dG87XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDsgfVxuXG4uby1wb3NBYnNvbHV0ZUNlbnRlckFsdCB7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7IH1cblxuLm8tcG9zRnVsbFNjcmVlbixcbi5vLXBvc0ZpeGVkQ2VudGVyIHtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyB9XG5cbi5vLWNvbnRhaW5lciB7XG4gIGhlaWdodDogaW5oZXJpdDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogMTA0MHB4O1xuICBwYWRkaW5nOiAwIDI0cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuby1jb250YWluZXI6YmVmb3JlLCAuby1jb250YWluZXI6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gIC5vLWNvbnRhaW5lcjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cbiAgLm8tY29udGFpbmVyIHA6bGFzdC1jaGlsZCxcbiAgLm8tY29udGFpbmVyIHA6bGFzdC1jaGlsZCBhLFxuICAuby1jb250YWluZXIgbGk6bGFzdC1jaGlsZCxcbiAgLm8tY29udGFpbmVyIGxpOmxhc3QtY2hpbGQgYSxcbiAgLm8tY29udGFpbmVyIG9sOmxhc3QtY2hpbGQsXG4gIC5vLWNvbnRhaW5lciBvbDpsYXN0LWNoaWxkIGEge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLm8tY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgMzZweDsgfSB9XG4gIC5vLWNvbnRhaW5lci0tbWQge1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtYXgtd2lkdGg6IDY2MHB4O1xuICAgIHBhZGRpbmc6IDAgMjRweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuby1jb250YWluZXItLW1kOmJlZm9yZSwgLm8tY29udGFpbmVyLS1tZDphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gICAgLm8tY29udGFpbmVyLS1tZDphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAgIC5vLWNvbnRhaW5lci0tbWQgcDpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgcDpsYXN0LWNoaWxkIGEsXG4gICAgLm8tY29udGFpbmVyLS1tZCBsaTpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgbGk6bGFzdC1jaGlsZCBhLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgb2w6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLW1kIG9sOmxhc3QtY2hpbGQgYSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1jb250YWluZXItLW1kIHtcbiAgICAgICAgcGFkZGluZzogMCAzNnB4OyB9IH1cbiAgLm8tY29udGFpbmVyLS14bCB7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgIHBhZGRpbmc6IDAgMjRweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuby1jb250YWluZXItLXhsOmJlZm9yZSwgLm8tY29udGFpbmVyLS14bDphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gICAgLm8tY29udGFpbmVyLS14bDphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAgIC5vLWNvbnRhaW5lci0teGwgcDpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0teGwgcDpsYXN0LWNoaWxkIGEsXG4gICAgLm8tY29udGFpbmVyLS14bCBsaTpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0teGwgbGk6bGFzdC1jaGlsZCBhLFxuICAgIC5vLWNvbnRhaW5lci0teGwgb2w6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLXhsIG9sOmxhc3QtY2hpbGQgYSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1jb250YWluZXItLXhsIHtcbiAgICAgICAgcGFkZGluZzogMCAzNnB4OyB9IH1cbiAgLm8tY29udGFpbmVyLS1zdXBlciB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAgMzZweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLm8tY29udGFpbmVyLS1zdXBlciB7XG4gICAgICAgIHBhZGRpbmc6IDAgOTZweDsgfSB9XG5cbi5vLWdyaWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7IH1cblxuLm8tZ3JpZCA+ICoge1xuICBmbGV4OiAxIDAgNWVtOyB9XG5cbi5vLWdyaWQtLXNwYWNlQmV0d2VlbiB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG5bZGF0YS1tb2RhbC10b2dnbGVdLFxuW2RhdGEtdG9nZ2xlLWZvbGRdLFxuW2RhdGEtZGlzbWlzc10ge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxudWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG4gIG1hcmdpbi1sZWZ0OiAxOHB4O1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cblxub2wge1xuICBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7IH1cblxubGkge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIGxpID4gdWwsXG4gIGxpID4gb2wge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cblxuLm8tbGlzdCB7XG4gIG1hcmdpbi1sZWZ0OiAxOHB4O1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cblxuLm8tbGlzdENsZWFuIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG5cbi5vLWxpc3RJbmxpbmUge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cbiAgLm8tbGlzdElubGluZSBsaSxcbiAgLm8tbGlzdElubGluZSBkaXYge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5vLWxpc3RJbmxpbmUgbGk6bm90KDpsYXN0LWNoaWxkKSxcbiAgICAuby1saXN0SW5saW5lIGRpdjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogNnB4OyB9XG5cbmEge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7IH1cbiAgYTpob3ZlciwgYTphY3RpdmUsIGE6Zm9jdXMge1xuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7IH1cblxuLm8tbGlua0J1cmllZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMTJweDsgfVxuICAuby1saW5rQnVyaWVkOmhvdmVyIC5vLWxpbmtCdXJpZWRUYXJnZXQsIC5vLWxpbmtCdXJpZWQ6YWN0aXZlIC5vLWxpbmtCdXJpZWRUYXJnZXQsIC5vLWxpbmtCdXJpZWQ6Zm9jdXMgLm8tbGlua0J1cmllZFRhcmdldCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY1YmQyNDsgfVxuXG4uby1saW5rQnVyaWVkVGFyZ2V0IHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBjb2xvcjogIzE1MTUxNTsgfVxuXG4uby1saW5rIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgzOCwgMzgsIDM4LCAwKSA1MCUsIHJnYmEoMzgsIDM4LCAzOCwgMC40KSA1MCUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtc2l6ZTogMXB4IDFweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5vLWxpbms6aG92ZXIsIC5vLWxpbms6YWN0aXZlLCAuby1saW5rOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uby1jaGlsZExpbmsgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMzgsIDM4LCAzOCwgMCkgNTAlLCByZ2JhKDM4LCAzOCwgMzgsIDAuNCkgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuby1jaGlsZExpbmsgYTpob3ZlciwgLm8tY2hpbGRMaW5rIGE6YWN0aXZlLCAuby1jaGlsZExpbmsgYTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLm8tbGlua0dyZXkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDE3OSwgMTc5LCAxNzksIDApIDUwJSwgI2IzYjNiMyA1MCUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtc2l6ZTogMXB4IDFweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5vLWxpbmtHcmV5OmhvdmVyLCAuby1saW5rR3JleTphY3RpdmUsIC5vLWxpbmtHcmV5OmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uby1jaGlsZExpbmtHcmV5IGEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDE3OSwgMTc5LCAxNzksIDApIDUwJSwgI2IzYjNiMyA1MCUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtc2l6ZTogMXB4IDFweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5vLWNoaWxkTGlua0dyZXkgYTpob3ZlciwgLm8tY2hpbGRMaW5rR3JleSBhOmFjdGl2ZSwgLm8tY2hpbGRMaW5rR3JleSBhOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uby1saW5rTGl0ZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjMyLCAyMzIsIDIzMiwgMCkgNTAlLCAjZThlOGU4IDUwJSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgYmFja2dyb3VuZC1zaXplOiAxcHggMXB4O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLm8tbGlua0xpdGU6aG92ZXIsIC5vLWxpbmtMaXRlOmFjdGl2ZSwgLm8tbGlua0xpdGU6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5vLWNoaWxkTGlua0xpdGUgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjMyLCAyMzIsIDIzMiwgMCkgNTAlLCAjZThlOGU4IDUwJSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgYmFja2dyb3VuZC1zaXplOiAxcHggMXB4O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLm8tY2hpbGRMaW5rTGl0ZSBhOmhvdmVyLCAuby1jaGlsZExpbmtMaXRlIGE6YWN0aXZlLCAuby1jaGlsZExpbmtMaXRlIGE6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5vLWxpbmtCcmFuZCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMTAxLCAxODksIDM2LCAwKSA1MCUsICM2NWJkMjQgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuby1saW5rQnJhbmQ6aG92ZXIsIC5vLWxpbmtCcmFuZDphY3RpdmUsIC5vLWxpbmtCcmFuZDpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLm8tY2hpbGRMaW5rQnJhbmQgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMTAxLCAxODksIDM2LCAwKSA1MCUsICM2NWJkMjQgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuby1jaGlsZExpbmtCcmFuZCBhOmhvdmVyLCAuby1jaGlsZExpbmtCcmFuZCBhOmFjdGl2ZSwgLm8tY2hpbGRMaW5rQnJhbmQgYTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLm8tbGlua1doaXRlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSA1MCUsICNGRkYgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuby1saW5rV2hpdGU6aG92ZXIsIC5vLWxpbmtXaGl0ZTphY3RpdmUsIC5vLWxpbmtXaGl0ZTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLm8tY2hpbGRMaW5rV2hpdGUgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjU1LCAyNTUsIDI1NSwgMCkgNTAlLCAjRkZGIDUwJSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgYmFja2dyb3VuZC1zaXplOiAxcHggMXB4O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLm8tY2hpbGRMaW5rV2hpdGUgYTpob3ZlciwgLm8tY2hpbGRMaW5rV2hpdGUgYTphY3RpdmUsIC5vLWNoaWxkTGlua1doaXRlIGE6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5vLWxpbmtJbnZpc2libGUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lOyB9XG4gIC5vLWxpbmtJbnZpc2libGU6aG92ZXIsIC5vLWxpbmtJbnZpc2libGU6YWN0aXZlLCAuby1saW5rSW52aXNpYmxlOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uby1jaGlsZExpbmtJbnZpc2libGUgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7IH1cbiAgLm8tY2hpbGRMaW5rSW52aXNpYmxlIGE6aG92ZXIsIC5vLWNoaWxkTGlua0ludmlzaWJsZSBhOmFjdGl2ZSwgLm8tY2hpbGRMaW5rSW52aXNpYmxlIGE6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5vLWFsaWduZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4uby1hbGlnbmVyLWl0ZW0ge1xuICBmbGV4OiAxOyB9XG5cbi5vLWFsaWduZXItaXRlbS0tdG9wIHtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDsgfVxuXG4uby1hbGlnbmVyLWl0ZW0tLWJvdHRvbSB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kOyB9XG5cbi5vLWFsaWduZXItaXRlbS0tZml4ZWQge1xuICBmbGV4OiBub25lO1xuICBtYXgtd2lkdGg6IDUwJTsgfVxuXG4uby1naG9zdCB7XG4gIGZvbnQtc2l6ZTogMDtcbiAgaGVpZ2h0OiBpbmhlcml0OyB9XG5cbi5vLWdob3N0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IC0xcHg7XG4gIHdpZHRoOiAxcHg7IH1cblxuLm8tZ2hvc3Q6YmVmb3JlLFxuLm8tZ2hvc3QtY2hpbGQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuLkh6UnVsZSB7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlOGU4ZTg7XG4gIGhlaWdodDogMDtcbiAgbWFyZ2luLXRvcDogY2FsYyggMjRweCAtIDFweCk7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7IH1cblxuLlJ1bGUge1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjNjViZDI0OyB9XG5cbi5EaXZSdWxlLS1saWdodCB7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXRvcDogI2RiZGJkYiBzb2xpZCAxcHg7IH1cblxuLkRpdlJ1bGUtLWJvdHRvbSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMTUxNTE1OyB9XG5cbi5WZXJ0UnVsZS0tbGVmdCB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2RiZGJkYjsgfVxuXG4uby1pY29uIHtcbiAgd2lkdGg6IDMycHg7XG4gIGhlaWdodDogMzJweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBsaW5lLWhlaWdodDogMTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgLm8taWNvbjpob3ZlciwgLm8taWNvbjphY3RpdmUsIC5vLWljb246Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7IH1cbiAgLm8taWNvbi0tc3Ryb2tlIHtcbiAgICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgICBzdHJva2U6IGN1cnJlbnRDb2xvcjtcbiAgICBzdHJva2Utd2lkdGg6IDJweDtcbiAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kOyB9XG4gIC5vLWljb24tLW5hdiB7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAxMnB4O1xuICAgIHdpZHRoOiAxNXB4OyB9XG4gIC5vLWljb24tLXNtIHtcbiAgICBoZWlnaHQ6IDEwcHg7XG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAgIHdpZHRoOiAxMHB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1pY29uLS1zbSB7XG4gICAgICAgIHdpZHRoOiAxMXB4O1xuICAgICAgICBoZWlnaHQ6IDExcHg7IH0gfVxuICAuby1pY29uLS1tZCB7XG4gICAgd2lkdGg6IDI3cHg7XG4gICAgaGVpZ2h0OiAyN3B4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1pY29uLS1tZCB7XG4gICAgICAgIHdpZHRoOiAzNnB4O1xuICAgICAgICBoZWlnaHQ6IDM2cHg7IH0gfVxuICAuby1pY29uLS1sZyB7XG4gICAgd2lkdGg6IDJyZW07XG4gICAgaGVpZ2h0OiAycmVtOyB9XG4gIC5vLWljb24tLXhsIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gICAgaGVpZ2h0OiA0OHB4O1xuICAgIHdpZHRoOiA0OHB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1pY29uLS14bCB7XG4gICAgICAgIGhlaWdodDogNjBweDtcbiAgICAgICAgd2lkdGg6IDYwcHg7IH0gfVxuICAuby1pY29uLS1zdXBlciB7XG4gICAgd2lkdGg6IDIuNXJlbTtcbiAgICBoZWlnaHQ6IDIuNXJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLm8taWNvbi0tc3VwZXIge1xuICAgICAgICB3aWR0aDogM3JlbTtcbiAgICAgICAgaGVpZ2h0OiAzcmVtOyB9IH1cbiAgLm8taWNvbi0tbGVmdCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAzcHg7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgIC5vLWljb24tLWxlZnQge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDRweDsgfSB9XG4gIC5vLWljb24tLWxlZnRTbSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxcHg7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgIC5vLWljb24tLWxlZnRTbSB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMC4xMjVyZW07IH0gfVxuICAuby1pY29uLS1yaWdodCB7XG4gICAgbWFyZ2luLWxlZnQ6IDhweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLm8taWNvbi0tcmlnaHQge1xuICAgICAgICBtYXJnaW4tbGVmdDogMTJweDsgfSB9XG4gIC5vLWljb24tLXJpZ2h0U20ge1xuICAgIG1hcmdpbi1sZWZ0OiAxcHg7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgIC5vLWljb24tLXJpZ2h0U20ge1xuICAgICAgICBtYXJnaW4tbGVmdDogMC4xMjVyZW07IH0gfVxuICAuby1pY29uICsgW2NsYXNzXj1cIi1hcnJvdy1pbmxpbmVcIl0ge1xuICAgIHZlcnRpY2FsLWFsaWduOiBzdXBlcjsgfVxuICAuby1pY29uLS10ZXh0QWxpZ24ge1xuICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5vLWljb24tLXRleHRMZ0FsaWduIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTsgfVxuICAuby1pY29uLS1idXR0b25BbGlnbiB7XG4gICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgLm8taWNvbi0tZm9ybUFsaWduIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAuby1pY29uLS1tZWRpYUFsaWduIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTAuMjVyZW0pOyB9XG5cbi5vLWNvdmVySW1hZ2Uge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgY29udGVudDogbm9uZTsgfVxuXG4uby1jb3ZlckltYWdlLS1kYXJrIHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLm8tY292ZXJJbWFnZS0tZGFyazpiZWZvcmUge1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICM2NWJkMjQgMCUsIHJnYmEoMTAxLCAxODksIDM2LCAwLjIpIDEwMCUpO1xuICAgIGJhY2tncm91bmQtYmxlbmQtbW9kZTogbXVsdGlwbHk7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgb3BhY2l0eTogMTsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLm8tY292ZXJJbWFnZS0tYmxlbmRzIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IDA7IH0gfVxuXG4uby1jb250YWluSW1hZ2Uge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgY29udGVudDogbm9uZTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluOyB9XG5cbi5GbGV4RW1iZWQtZml0SW1hZ2Uge1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTsgfVxuXG4uRmxleEVtYmVkLWNvbnRlbnQtLWRhcms6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgxMDEsIDE4OSwgMzYsIDAuOSkgMCUsIHJnYmEoMTAxLCAxODksIDM2LCAwKSAxMDAlKTtcbiAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBtdWx0aXBseTtcbiAgY29udGVudDogXCIgXCI7XG4gIG9wYWNpdHk6IDE7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwOyB9XG5cbi5jLXRleHQtLXhzIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTJweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS14cyB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuYy10ZXh0LS14cyB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICAuYy10ZXh0LS14cyA+IGxpLFxuICAuYy10ZXh0LS14cyA+IGxpIGEsXG4gIC5jLXRleHQtLXhzID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQtLXNtIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTNweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1zbSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuYy10ZXh0LS1zbSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy10ZXh0LS1zbSA+IGxpLFxuICAuYy10ZXh0LS1zbSA+IGxpIGEsXG4gIC5jLXRleHQtLXNtID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMTI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTZweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0IHtcbiAgICAgIGZvbnQtc2l6ZTogMThweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jLXRleHQge1xuICAgICAgZm9udC1zaXplOiAyMXB4OyB9IH1cbiAgLmMtdGV4dCA+IGxpLFxuICAuYy10ZXh0ID4gbGkgYSxcbiAgLmMtdGV4dCA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy10ZXh0LS1tZWRpdW0ge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMTI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6IGdyYXk7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dC0tbWVkaXVtIHtcbiAgICAgIGZvbnQtc2l6ZTogMThweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jLXRleHQtLW1lZGl1bSB7XG4gICAgICBmb250LXNpemU6IDIxcHg7IH0gfVxuICAuYy10ZXh0LS1tZWRpdW0gPiBsaSxcbiAgLmMtdGV4dC0tbWVkaXVtID4gbGkgYSxcbiAgLmMtdGV4dC0tbWVkaXVtID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQtLWludHJvIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDEyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiBncmF5O1xuICBtYXJnaW4tYm90dG9tOiAxMnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQtLWludHJvIHtcbiAgICAgIGZvbnQtc2l6ZTogMThweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jLXRleHQtLWludHJvIHtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDsgfSB9XG4gIC5jLXRleHQtLWludHJvID4gbGksXG4gIC5jLXRleHQtLWludHJvID4gbGkgYSxcbiAgLmMtdGV4dC0taW50cm8gPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtdGV4dC0tYXNpZGUge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDEzcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dC0tYXNpZGUge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtdGV4dC0tYXNpZGUge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgLmMtdGV4dC0tYXNpZGUgPiBsaSxcbiAgLmMtdGV4dC0tYXNpZGUgPiBsaSBhLFxuICAuYy10ZXh0LS1hc2lkZSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy10ZXh0LS1tZXRhIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgY29sb3I6IGdyYXkgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1tZXRhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jLXRleHQtLW1ldGEge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgLmMtdGV4dC0tbWV0YSA+IGxpLFxuICAuYy10ZXh0LS1tZXRhID4gbGkgYSxcbiAgLmMtdGV4dC0tbWV0YSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICAuYy10ZXh0LS1tZXRhID4gYSB7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50OyB9XG4gICAgLmMtdGV4dC0tbWV0YSA+IGE6aG92ZXIsIC5jLXRleHQtLW1ldGEgPiBhOmFjdGl2ZSwgLmMtdGV4dC0tbWV0YSA+IGE6Zm9jdXMge1xuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5ICFpbXBvcnRhbnQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dC0tbWV0YSB7XG4gICAgICBtYXJnaW46IGF1dG87IH0gfVxuXG4uYy10ZXh0LWJsb2NrID4gKiB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogUmVndWxhciwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAxMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxNnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQtYmxvY2sgPiAqIHtcbiAgICAgIGZvbnQtc2l6ZTogMThweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jLXRleHQtYmxvY2sgPiAqIHtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDsgfSB9XG4gIC5jLXRleHQtYmxvY2sgPiAqID4gbGksXG4gIC5jLXRleHQtYmxvY2sgPiAqID4gbGkgYSxcbiAgLmMtdGV4dC1ibG9jayA+ICogPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtdGV4dC1ibG9jay0tZm9vdGVyIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBtYXJnaW46IDA7IH1cbiAgLmMtdGV4dC1ibG9jay0tZm9vdGVyOjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUzLCAyNTMsIDI1MywgMC4yKTtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDI0cHggMCAyNy42cHg7XG4gICAgd2lkdGg6IDIuNSU7IH1cbiAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiB7XG4gICAgY29sb3I6ICMxNTE1MTU7XG4gICAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjAxMjVlbTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqIHtcbiAgICAgICAgZm9udC1zaXplOiAxOHB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jLXRleHQtYmxvY2stLWZvb3RlciA+ICoge1xuICAgICAgICBmb250LXNpemU6IDIxcHg7IH0gfVxuICAgIC5jLXRleHQtYmxvY2stLWZvb3RlciA+ICogPiBsaSxcbiAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqID4gbGkgYSxcbiAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqID4gYSB7XG4gICAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgbWFyZ2luOiAwOyB9XG5cbi5jLWxpc3QtLWl0ZW1UYWcge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxOHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWxpc3QtLWl0ZW1UYWcge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtbGlzdC0taXRlbVRhZyB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy1saXN0LS1pdGVtVGFnID4gbGksXG4gIC5jLWxpc3QtLWl0ZW1UYWcgPiBsaSBhLFxuICAuYy1saXN0LS1pdGVtVGFnID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWxpc3QtLW1ldGEge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIGNvbG9yOiBncmF5O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWxpc3QtLW1ldGEge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtbGlzdC0tbWV0YSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy1saXN0LS1tZXRhID4gbGksXG4gIC5jLWxpc3QtLW1ldGEgPiBsaSBhLFxuICAuYy1saXN0LS1tZXRhID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWxpc3QtLW1ldGEtdGl0bGUge1xuICBjb2xvcjogIzE1MTUxNSAhaW1wb3J0YW50O1xuICBtYXJnaW46IDMwcHggMCAxNXB4ICFpbXBvcnRhbnQ7IH1cbiAgLmMtbGlzdC0tbWV0YS10aXRsZTpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50OyB9XG5cbi51LXRleHRXdEx0IHtcbiAgZm9udC1mYW1pbHk6IExpZ2h0LCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZiAhaW1wb3J0YW50OyB9XG5cbi51LXRleHRXdFJnIHtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7IH1cblxuLnUtdGV4dFd0TWQge1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZiAhaW1wb3J0YW50OyB9XG5cbnVsLCBvbCwgZGwsXG5wLCBhZGRyZXNzLFxudGFibGUsIHRpbWUsXG5maWVsZHNldCwgZmlnY2FwdGlvbixcbnByZSwgYSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogUmVndWxhciwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAxMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxNnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIHVsLCBvbCwgZGwsXG4gICAgcCwgYWRkcmVzcyxcbiAgICB0YWJsZSwgdGltZSxcbiAgICBmaWVsZHNldCwgZmlnY2FwdGlvbixcbiAgICBwcmUsIGEge1xuICAgICAgZm9udC1zaXplOiAxOHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgdWwsIG9sLCBkbCxcbiAgICBwLCBhZGRyZXNzLFxuICAgIHRhYmxlLCB0aW1lLFxuICAgIGZpZWxkc2V0LCBmaWdjYXB0aW9uLFxuICAgIHByZSwgYSB7XG4gICAgICBmb250LXNpemU6IDIxcHg7IH0gfVxuICB1bCA+IGxpLFxuICB1bCA+IGxpIGEsXG4gIHVsID4gYSwgb2wgPiBsaSxcbiAgb2wgPiBsaSBhLFxuICBvbCA+IGEsIGRsID4gbGksXG4gIGRsID4gbGkgYSxcbiAgZGwgPiBhLFxuICBwID4gbGksXG4gIHAgPiBsaSBhLFxuICBwID4gYSwgYWRkcmVzcyA+IGxpLFxuICBhZGRyZXNzID4gbGkgYSxcbiAgYWRkcmVzcyA+IGEsXG4gIHRhYmxlID4gbGksXG4gIHRhYmxlID4gbGkgYSxcbiAgdGFibGUgPiBhLCB0aW1lID4gbGksXG4gIHRpbWUgPiBsaSBhLFxuICB0aW1lID4gYSxcbiAgZmllbGRzZXQgPiBsaSxcbiAgZmllbGRzZXQgPiBsaSBhLFxuICBmaWVsZHNldCA+IGEsIGZpZ2NhcHRpb24gPiBsaSxcbiAgZmlnY2FwdGlvbiA+IGxpIGEsXG4gIGZpZ2NhcHRpb24gPiBhLFxuICBwcmUgPiBsaSxcbiAgcHJlID4gbGkgYSxcbiAgcHJlID4gYSwgYSA+IGxpLFxuICBhID4gbGkgYSxcbiAgYSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG5lbSxcbi51LXRleHRFbSB7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuYixcbnN0cm9uZyxcbi51LXRleHRCb2xkIHtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBCb2xkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDc1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWFyZ2luLWJvdHRvbTogOXB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIGIsXG4gICAgc3Ryb25nLFxuICAgIC51LXRleHRCb2xkIHtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIGIsXG4gICAgc3Ryb25nLFxuICAgIC51LXRleHRCb2xkIHtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDsgfSB9XG4gIGIgPiBsaSxcbiAgYiA+IGxpIGEsXG4gIGIgPiBhLFxuICBzdHJvbmcgPiBsaSxcbiAgc3Ryb25nID4gbGkgYSxcbiAgc3Ryb25nID4gYSxcbiAgLnUtdGV4dEJvbGQgPiBsaSxcbiAgLnUtdGV4dEJvbGQgPiBsaSBhLFxuICAudS10ZXh0Qm9sZCA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG5ibG9ja3F1b3RlLFxuLkJsb2NrcXVvdGUge1xuICBjb2xvcjogZ3JheTtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIG1hcmdpbi1ib3R0b206IDE4cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgYmxvY2txdW90ZSxcbiAgICAuQmxvY2txdW90ZSB7XG4gICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyNHB4OyB9IH1cblxuLmMtZGlzcGxheSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjAwNWVtO1xuICBsaW5lLWhlaWdodDogMS4xO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDQwcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtZGlzcGxheSB7XG4gICAgICBmb250LXNpemU6IDU0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1kaXNwbGF5IHtcbiAgICAgIGZvbnQtc2l6ZTogNjBweDsgfSB9XG4gIC5jLWRpc3BsYXkgPiBsaSxcbiAgLmMtZGlzcGxheSA+IGxpIGEsXG4gIC5jLWRpc3BsYXkgPiBhIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1oZWFkbGluZSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogNDRweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1oZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDU0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1oZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDcycHg7IH0gfVxuICAuYy1oZWFkbGluZSA+IGxpLFxuICAuYy1oZWFkbGluZSA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtaGVhZGxpbmUtLW1kIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1oZWFkbGluZS0tbWQge1xuICAgICAgZm9udC1zaXplOiAyMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtaGVhZGxpbmUtLW1kIHtcbiAgICAgIGZvbnQtc2l6ZTogMjdweDsgfSB9XG4gIC5jLWhlYWRsaW5lLS1tZCA+IGxpLFxuICAuYy1oZWFkbGluZS0tbWQgPiBsaSBhLFxuICAuYy1oZWFkbGluZS0tbWQgPiBhIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1oZWFkbGluZS0tc20ge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjEyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWhlYWRsaW5lLS1zbSB7XG4gICAgICBmb250LXNpemU6IDIwcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1oZWFkbGluZS0tc20ge1xuICAgICAgZm9udC1zaXplOiAyMXB4OyB9IH1cbiAgLmMtaGVhZGxpbmUtLXNtID4gbGksXG4gIC5jLWhlYWRsaW5lLS1zbSA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lLS1zbSA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lLS14cyB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xuICBsaW5lLWhlaWdodDogMS4yNTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1oZWFkbGluZS0teHMge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgLmMtaGVhZGxpbmUtLXhzID4gbGksXG4gIC5jLWhlYWRsaW5lLS14cyA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lLS14cyA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lIGVtIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5oMiArIGgzIHtcbiAgbWFyZ2luLXRvcDogNC44cHg7IH1cblxuaDMgKyBwIHtcbiAgbWFyZ2luLXRvcDogOS42cHg7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDExOTlweCkge1xuICBzcGFuLnUtbGctbGluZUJyZWFrIHtcbiAgICBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50O1xuICAgIG1hcmdpbjogYXV0bzsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAudS1zbS1saW5lQnJlYWsge1xuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgc3Bhbi51LXNtRG93bi1saW5lQnJlYWsge1xuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnUtc21Eb3duLWhpZGUge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbi5jLWNvbnRlbnQtLXBvc3Qge1xuICBwYWRkaW5nLWJvdHRvbTogNy41dmggIWltcG9ydGFudDsgfVxuXG4uYy1jb250ZW50IC5GbGV4RW1iZWQsXG4uYy1wb3N0Q2VsbCAuRmxleEVtYmVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE1MTUxNTsgfVxuXG4uYy1oZWFkZXIge1xuICBwYWRkaW5nOiAzLjZ2aCAwIDQuNXZoO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gIC5jLWhlYWRlci1icmFuZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNC41dmg7IH0gfVxuXG4uYy1oZWFkZXItbG9nbyA+IGltZyB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHdpZHRoOiAxNTBweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1oZWFkZXItbG9nbyA+IGltZyB7XG4gICAgICB3aWR0aDogMzAwcHg7IH0gfVxuXG4uYy1uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMCAzNnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5jLW5hdiB7XG4gICAgICBwYWRkaW5nOiAwIDQlOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5jLW5hdiB7XG4gICAgICBwYWRkaW5nOiAwIDEyJTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxNzAwcHgpIHtcbiAgICAuYy1uYXYge1xuICAgICAgcGFkZGluZzogMCAxOCU7IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAuYy1uYXYge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5jLW5hdi1pdGVtIHtcbiAgZmxleC1zaHJpbms6IDE7XG4gIG1hcmdpbjogMDsgfVxuICAuYy1uYXYtaXRlbSBhIHtcbiAgICBjb2xvcjogIzE1MTUxNTtcbiAgICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNnB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuYy1uYXYtaXRlbSBhIHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jLW5hdi1pdGVtIGEge1xuICAgICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAgIC5jLW5hdi1pdGVtIGEgPiBsaSxcbiAgICAuYy1uYXYtaXRlbSBhID4gbGkgYSxcbiAgICAuYy1uYXYtaXRlbSBhID4gYSB7XG4gICAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgbWFyZ2luOiAwOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAuYy1uYXYtaXRlbSBhIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7IH0gfVxuICAuYy1uYXYtaXRlbS5pcy1hY3RpdmUgYSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjMTUxNTE1OyB9XG4gIC5jLW5hdi1pdGVtOmhvdmVyIGEsIC5jLW5hdi1pdGVtOmFjdGl2ZSBhLCAuYy1uYXYtaXRlbTpmb2N1cyBhIHtcbiAgICBib3JkZXItY29sb3I6ICMxNTE1MTU7XG4gICAgZm9udC1mYW1pbHk6IEJvbGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmOyB9XG5cbi5jLW5hdi10cmlnZ2VyIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZThlOGU4O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGhlaWdodDogMTA3JTtcbiAgcGFkZGluZzogNnB4IDEycHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDI0cHg7XG4gIHRvcDogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1uYXYtdHJpZ2dlciB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuYy1uYXYtdHJpZ2dlciB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy1uYXYtdHJpZ2dlciA+IGxpLFxuICAuYy1uYXYtdHJpZ2dlciA+IGxpIGEsXG4gIC5jLW5hdi10cmlnZ2VyID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLW5hdi10cmlnZ2VyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4uYy1oZWFkZXItaW5mb0FsaWduIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM2NWJkMjQ7XG4gIHBhZGRpbmctYm90dG9tOiA3cHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDdweCk7IH1cblxuLmMtaGVhZGVyLWluZm8ge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDEzcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjNjViZDI0OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWhlYWRlci1pbmZvIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jLWhlYWRlci1pbmZvIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIC5jLWhlYWRlci1pbmZvID4gbGksXG4gIC5jLWhlYWRlci1pbmZvID4gbGkgYSxcbiAgLmMtaGVhZGVyLWluZm8gPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtcG9zdEdyaWQgPiAqIHtcbiAgZmxleC1iYXNpczogNTB2dzsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1wb3N0R3JpZCA+ICoge1xuICAgICAgZmxleC1iYXNpczogMjB2dzsgfSB9XG5cbi5jLXBvc3RHcmlkIC5jLXBvc3RDZWxsOm5vdCg6Zmlyc3QtY2hpbGQpIC5GbGV4RW1iZWQsXG4uYy1wb3N0R3JpZC0taW5Qb3N0IC5jLXBvc3RDZWxsOm5vdCg6Zmlyc3QtY2hpbGQpIC5GbGV4RW1iZWQge1xuICBtYXJnaW4tbGVmdDogMXB4OyB9XG5cbi5jLXBvc3RHcmlkIC5GbGV4RW1iZWQtcmF0aW8ge1xuICBwYWRkaW5nLWJvdHRvbTogMjV2aDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1wb3N0R3JpZCAuRmxleEVtYmVkLXJhdGlvIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA1MHZoOyB9IH1cblxuLmMtcG9zdEdyaWQtLWluUG9zdCA+ICoge1xuICBmbGV4LWJhc2lzOiA1MCU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtcG9zdEdyaWQtLWluUG9zdCA+ICoge1xuICAgICAgZmxleC1iYXNpczogMjAlOyB9IH1cblxuLmMtcG9zdEdyaWQtLWluUG9zdCAuRmxleEVtYmVkLXJhdGlvIHtcbiAgcGFkZGluZy1ib3R0b206IDEyLjV2aDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1wb3N0R3JpZC0taW5Qb3N0IC5GbGV4RW1iZWQtcmF0aW8ge1xuICAgICAgcGFkZGluZy1ib3R0b206IDI1dmg7IH0gfVxuXG5hLmMtcG9zdENlbGwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgYS5jLXBvc3RDZWxsOmhvdmVyIC5vLWxpbmtCdXJpZWRUYXJnZXQsIGEuYy1wb3N0Q2VsbDphY3RpdmUgLm8tbGlua0J1cmllZFRhcmdldCwgYS5jLXBvc3RDZWxsOmZvY3VzIC5vLWxpbmtCdXJpZWRUYXJnZXQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM2NWJkMjQ7IH1cbiAgYS5jLXBvc3RDZWxsOmhvdmVyIC5jLXBvc3RDZWxsLWhlYWRsaW5lLFxuICBhLmMtcG9zdENlbGw6aG92ZXIgLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUsIGEuYy1wb3N0Q2VsbDphY3RpdmUgLmMtcG9zdENlbGwtaGVhZGxpbmUsXG4gIGEuYy1wb3N0Q2VsbDphY3RpdmUgLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUsIGEuYy1wb3N0Q2VsbDpmb2N1cyAuYy1wb3N0Q2VsbC1oZWFkbGluZSxcbiAgYS5jLXBvc3RDZWxsOmZvY3VzIC5jLXBvc3RDZWxsLXN1YmhlYWRsaW5lIHtcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICAgIGNvbG9yOiAjNjViZDI0OyB9XG4gIGEuYy1wb3N0Q2VsbDpob3ZlciAuYy1pbWFnZUJsZW5kLCBhLmMtcG9zdENlbGw6YWN0aXZlIC5jLWltYWdlQmxlbmQsIGEuYy1wb3N0Q2VsbDpmb2N1cyAuYy1pbWFnZUJsZW5kIHtcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjEsIDIxLCAyMSwgMC44OCk7IH1cblxuLmMtcG9zdENlbGwtaGVhZGxpbmUsXG4uYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI0ZGRjtcbiAgcGFkZGluZzogMCAxNSU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1wb3N0Q2VsbC1oZWFkbGluZSxcbiAgICAuYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuYy1wb3N0Q2VsbC1oZWFkbGluZSxcbiAgICAuYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy1wb3N0Q2VsbC1oZWFkbGluZSA+IGxpLFxuICAuYy1wb3N0Q2VsbC1oZWFkbGluZSA+IGxpIGEsXG4gIC5jLXBvc3RDZWxsLWhlYWRsaW5lID4gYSxcbiAgLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUgPiBsaSxcbiAgLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUgPiBsaSBhLFxuICAuYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICAuYy1wb3N0Q2VsbC1oZWFkbGluZTpub3QoOmZpcnN0LWNoaWxkKSxcbiAgLmMtcG9zdENlbGwtc3ViaGVhZGxpbmU6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgIG1hcmdpbi10b3A6IDZweDsgfVxuXG4uYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LWZhbWlseTogUmVndWxhciwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7IH1cblxuLkZsZXhFbWJlZC1yYXRpby0taGVybyB7XG4gIHBhZGRpbmctYm90dG9tOiA5MCU7XG4gIHBhZGRpbmctYm90dG9tOiA5MCU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLkZsZXhFbWJlZC1yYXRpby0taGVybyB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlO1xuICAgICAgcGFkZGluZy1ib3R0b206IDUwdmg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLkZsZXhFbWJlZC1yYXRpby0taGVybyB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogNTAlO1xuICAgICAgcGFkZGluZy1ib3R0b206IDgxLjV2aDsgfSB9XG5cbi5jLXBvc3QtaGdyb3VwIHtcbiAgbWFyZ2luOiA0LjV2aCAwOyB9XG4gIC5jLXBvc3QtaGdyb3VwLS1jZW50ZXIgLmMtcG9zdC1oZWFkbGluZSB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuNDVlbTsgfVxuICAuYy1wb3N0LWhncm91cC0tY2VudGVyIC5jLXBvc3Qtc3ViaGVhZGxpbmUge1xuICAgIGNvbG9yOiAjMTUxNTE1O1xuICAgIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjEyNWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtZmFtaWx5OiBCb2xkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLmMtcG9zdC1oZ3JvdXAtLWNlbnRlciAuYy1wb3N0LXN1YmhlYWRsaW5lIHtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAgIC5jLXBvc3QtaGdyb3VwLS1jZW50ZXIgLmMtcG9zdC1zdWJoZWFkbGluZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjFweDsgfSB9XG4gICAgLmMtcG9zdC1oZ3JvdXAtLWNlbnRlciAuYy1wb3N0LXN1YmhlYWRsaW5lID4gbGksXG4gICAgLmMtcG9zdC1oZ3JvdXAtLWNlbnRlciAuYy1wb3N0LXN1YmhlYWRsaW5lID4gbGkgYSxcbiAgICAuYy1wb3N0LWhncm91cC0tY2VudGVyIC5jLXBvc3Qtc3ViaGVhZGxpbmUgPiBhIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgLmMtcG9zdC1oZ3JvdXAtLWNlbnRlciAuYy1wb3N0LWhlYWRsaW5lLFxuICAuYy1wb3N0LWhncm91cC0tY2VudGVyIC5jLXBvc3Qtc3ViaGVhZGxpbmUge1xuICAgIGNvbG9yOiAjRkZGO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLmMtcG9zdC1oZ3JvdXAtLWNlbnRlciAuYy1wb3N0LWhlYWRsaW5lLFxuICAgICAgLmMtcG9zdC1oZ3JvdXAtLWNlbnRlciAuYy1wb3N0LXN1YmhlYWRsaW5lIHtcbiAgICAgICAgcGFkZGluZzogNSU7IH0gfVxuXG4uYy1wb3N0LWhlYWRsaW5lIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4yNWVtO1xuICBsaW5lLWhlaWdodDogMS4yNTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1zaXplOiA0NHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXBvc3QtaGVhZGxpbmUge1xuICAgICAgZm9udC1zaXplOiA1NHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtcG9zdC1oZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDcycHg7IH0gfVxuICAuYy1wb3N0LWhlYWRsaW5lID4gbGksXG4gIC5jLXBvc3QtaGVhZGxpbmUgPiBsaSBhLFxuICAuYy1wb3N0LWhlYWRsaW5lID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtcG9zdC1oZWFkbGluZSB7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH0gfVxuXG4uYy1wb3N0LXN1YmhlYWRsaW5lIHtcbiAgbWFyZ2luLXRvcDogMTJweDsgfVxuICAuYy1wb3N0LXN1YmhlYWRsaW5lIHAge1xuICAgIGNvbG9yOiAjMTUxNTE1O1xuICAgIGZvbnQtZmFtaWx5OiBCb2xkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBtYXJnaW4tYm90dG9tOiA5cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuYy1wb3N0LXN1YmhlYWRsaW5lIHAge1xuICAgICAgICBmb250LXNpemU6IDE1cHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLmMtcG9zdC1zdWJoZWFkbGluZSBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxNXB4OyB9IH1cbiAgICAuYy1wb3N0LXN1YmhlYWRsaW5lIHAgPiBsaSxcbiAgICAuYy1wb3N0LXN1YmhlYWRsaW5lIHAgPiBsaSBhLFxuICAgIC5jLXBvc3Qtc3ViaGVhZGxpbmUgcCA+IGEge1xuICAgICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgIG1hcmdpbjogMDsgfVxuXG4uYy1wb3N0LWFydGljbGUge1xuICBtYXJnaW4tdG9wOiA0LjV2aDtcbiAgbWFyZ2luLXRvcDogNy41dmg7IH1cblxuLnMtcG9zdCBwLFxuLnMtcG9zdCB1bCxcbi5zLXBvc3QgYSB7XG4gIGZvbnQtZmFtaWx5OiByZWd1bGFyU2VyaWYsIEdlb3JnaWEsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFwiVGltZXNcIiwgc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwOyB9XG5cbi5zLXBvc3QgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMzgsIDM4LCAzOCwgMCkgNTAlLCByZ2JhKDM4LCAzOCwgMzgsIDAuNCkgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAucy1wb3N0IGE6aG92ZXIsIC5zLXBvc3QgYTphY3RpdmUsIC5zLXBvc3QgYTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLnMtcG9zdCBzdHJvbmcge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbi5zLXBvc3QgaDIge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjEyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLnMtcG9zdCBoMiB7XG4gICAgICBmb250LXNpemU6IDIwcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAucy1wb3N0IGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDsgfSB9XG4gIC5zLXBvc3QgaDIgPiBsaSxcbiAgLnMtcG9zdCBoMiA+IGxpIGEsXG4gIC5zLXBvc3QgaDIgPiBhIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAucy1wb3N0IGgyIHtcbiAgICAgIHdpZHRoOiA4NSU7IH0gfVxuICAucy1wb3N0IGgyOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tdG9wOiA0LjV2aDsgfVxuICAucy1wb3N0IGgyOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMi4yNXZoOyB9XG5cbi5zLXBvc3QgaHIge1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZThlOGU4O1xuICBtYXJnaW46IDM2cHggMDsgfVxuXG4ucy1wb3N0IGJsb2NrcXVvdGUgcCB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2IzYjNiMztcbiAgY29sb3I6IGdyYXk7XG4gIHBhZGRpbmctbGVmdDogMjRweDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgLnMtcG9zdCB7XG4gICAgbWFyZ2luLXJpZ2h0OiA0OHB4OyB9IH1cblxuLmMtcG9zdC1tZXRhOm5vdCg6bGFzdC1jaGlsZCkge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U4ZThlODtcbiAgbWFyZ2luLWJvdHRvbTogMS4ydmg7XG4gIHBhZGRpbmctYm90dG9tOiAxLjJ2aDsgfVxuXG4uYy1wb3N0LW1ldGEgc3Bhbixcbi5jLXBvc3QtbWV0YSBzcGFuIGEsXG4uYy1wb3N0LW1ldGEgbGkge1xuICBjb2xvcjogZ3JheTtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuOTY7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1wb3N0LW1ldGEgc3BhbixcbiAgICAuYy1wb3N0LW1ldGEgc3BhbiBhLFxuICAgIC5jLXBvc3QtbWV0YSBsaSB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuYy1wb3N0LW1ldGEgc3BhbixcbiAgICAuYy1wb3N0LW1ldGEgc3BhbiBhLFxuICAgIC5jLXBvc3QtbWV0YSBsaSB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICAuYy1wb3N0LW1ldGEgc3BhbiA+IGxpLFxuICAuYy1wb3N0LW1ldGEgc3BhbiA+IGxpIGEsXG4gIC5jLXBvc3QtbWV0YSBzcGFuID4gYSxcbiAgLmMtcG9zdC1tZXRhIHNwYW4gYSA+IGxpLFxuICAuYy1wb3N0LW1ldGEgc3BhbiBhID4gbGkgYSxcbiAgLmMtcG9zdC1tZXRhIHNwYW4gYSA+IGEsXG4gIC5jLXBvc3QtbWV0YSBsaSA+IGxpLFxuICAuYy1wb3N0LW1ldGEgbGkgPiBsaSBhLFxuICAuYy1wb3N0LW1ldGEgbGkgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtcG9zdC1tZXRhIHAge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IEJvbGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tYm90dG9tOiA5cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXBvc3QtbWV0YSBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jLXBvc3QtbWV0YSBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDsgfSB9XG4gIC5jLXBvc3QtbWV0YSBwID4gbGksXG4gIC5jLXBvc3QtbWV0YSBwID4gbGkgYSxcbiAgLmMtcG9zdC1tZXRhIHAgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtcG9zdC1tZXRhIHVsIHtcbiAgbGlzdC1zdHlsZS10eXBlOiB1cHBlci1yb21hbjtcbiAgbWFyZ2luOiAwIDAgMCAxOHB4O1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cblxuLmMtcG9zdC1tZXRhLS1lbmRSdWxlIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlOGU4ZTg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAyLjI1dmggMCAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDEuMnZoIDAgMCAhaW1wb3J0YW50OyB9XG4gIC5jLXBvc3QtbWV0YS0tZW5kUnVsZSBhIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDM4LCAzOCwgMzgsIDApIDUwJSwgcmdiYSgzOCwgMzgsIDM4LCAwLjQpIDUwJSk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMXB4IDFweDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAuYy1wb3N0LW1ldGEtLWVuZFJ1bGUgYTpob3ZlciwgLmMtcG9zdC1tZXRhLS1lbmRSdWxlIGE6YWN0aXZlLCAuYy1wb3N0LW1ldGEtLWVuZFJ1bGUgYTpmb2N1cyB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLmMtcG9zdC1tZXRhLS1jdGEsIC5jLXBvc3QtbWV0YS0tbm9SdWxlIHtcbiAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDsgfVxuXG4uYy1wb3N0LW1ldGEtLWN0YSB7XG4gIG1hcmdpbi1ib3R0b206IDN2aDsgfVxuXG4uYy1wb3N0LW1ldGEtLW5vUnVsZSBzcGFuLFxuLmMtcG9zdC1tZXRhLS1ub1J1bGUgc3BhbiBhLFxuLmMtcG9zdC1tZXRhLS1ub1J1bGUgbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7IH1cblxuLmMtcG9zdC1tZXRhLS1zaGFyZTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gIG1hcmdpbi10b3A6IDQuNXZoOyB9XG5cbi5jLXBvc3QtbWV0YS0tc2hhcmUgPiBhIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgY29sb3I6ICNiM2IzYjM7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5jLXBvc3QtbWV0YS0tc2hhcmUgPiBhOmhvdmVyLCAuYy1wb3N0LW1ldGEtLXNoYXJlID4gYTphY3RpdmUsIC5jLXBvc3QtbWV0YS0tc2hhcmUgPiBhOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuYy1wb3N0LW1ldGEtLXNoYXJlID4gYTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXRvcDogLTFweDsgfVxuICAuYy1wb3N0LW1ldGEtLXNoYXJlID4gYTpob3ZlciwgLmMtcG9zdC1tZXRhLS1zaGFyZSA+IGE6YWN0aXZlLCAuYy1wb3N0LW1ldGEtLXNoYXJlID4gYTpmb2N1cyB7XG4gICAgY29sb3I6ICNiM2IzYjM7IH1cblxuLmMtcG9zdC1zdXBwb3J0ZXJzIHtcbiAgbWFyZ2luLWJvdHRvbTogOXB4OyB9XG4gIC5jLXBvc3Qtc3VwcG9ydGVycyBpbWcge1xuICAgIG1hcmdpbi10b3A6IDEzLjVweDtcbiAgICBtYXJnaW4tbGVmdDogMThweDtcbiAgICB3aWR0aDogMjUlOyB9XG4gICAgLmMtcG9zdC1zdXBwb3J0ZXJzIGltZzpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgLmMtcG9zdC1zdXBwb3J0ZXJzIGltZzpudGgtY2hpbGQoNG4pIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuYy1wb3N0LXN1cHBvcnRlcnMgaW1nIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiBhdXRvOyB9XG4gICAgICAgIC5jLXBvc3Qtc3VwcG9ydGVycyBpbWc6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgbWFyZ2luLXRvcDogOXB4OyB9XG4gICAgICAgIC5jLXBvc3Qtc3VwcG9ydGVycyBpbWc6bm90KDpudGgtY2hpbGQoMSkpIHtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAyMi41cHg7IH0gfVxuXG4uYy1wb3N0LWluZm8ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5jLXBvc3QtaW5mbyAuYy1wb3N0R3JpZCB7XG4gIG1hcmdpbjogMDsgfVxuXG4uYy1wb3N0LWluZm8gLmMtcG9zdEdyaWQgPiAqIHtcbiAgZmxleDogMSAwIDA7XG4gIGZsZXgtYmFzaXM6IGNhbGMoMTB2dyAtIDJweCk7XG4gIGZsZXgtYmFzaXM6IDVlbTtcbiAgbWFyZ2luOiAwOyB9XG5cbi5jLXBvc3QtaW5mbyAucy1hc2lkZSB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4uYy1wb3N0LWluZm8gLmMtcG9zdC1tZXRhIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZmRmZDtcbiAgYm9yZGVyOiAwO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAuNzV2aCAxLjV2aDsgfVxuICAuYy1wb3N0LWluZm8gLmMtcG9zdC1tZXRhOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICMxNTE1MTU7IH1cbiAgLmMtcG9zdC1pbmZvIC5jLXBvc3QtbWV0YSBzcGFuLFxuICAuYy1wb3N0LWluZm8gLmMtcG9zdC1tZXRhIHNwYW4gYSxcbiAgLmMtcG9zdC1pbmZvIC5jLXBvc3QtbWV0YSBsaSB7XG4gICAgY29sb3I6ICMxNTE1MTU7XG4gICAgZm9udC1mYW1pbHk6IEJsYWNrLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjsgfVxuICAuYy1wb3N0LWluZm8gLmMtcG9zdC1tZXRhIHAge1xuICAgIGNvbG9yOiAjMTUxNTE1OyB9XG5cbi5jLXBvc3QtaW5mbyAuYy1wb3N0LW1ldGEtLWN0YSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMxNTE1MTUgIWltcG9ydGFudDsgfVxuICAuYy1wb3N0LWluZm8gLmMtcG9zdC1tZXRhLS1jdGEgLnQtYnV0dG9uLS1wcmltYXJ5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjViZDI0O1xuICAgIGJvcmRlcjogMDtcbiAgICBjb2xvcjogI2ZkZmRmZDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuYy1wb3N0LWluZm8gLmMtcG9zdC1tZXRhLS1jdGEgLnQtYnV0dG9uLS1wcmltYXJ5OmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLmMtcG9zdC1uZXh0IHtcbiAgbWFyZ2luLXRvcDogNnZoOyB9XG4gIC5jLXBvc3QtbmV4dCBoMyB7XG4gICAgbWFyZ2luLWJvdHRvbTogM3ZoOyB9XG5cbi5jLWZvb3RlciB7XG4gIHBhZGRpbmc6IDcuNXZoIDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuYy1mb290ZXItLXBvc3Qge1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMTUxNTE1OyB9XG5cbi5jLWZvb3Rlci1uYXYge1xuICBtYXJnaW4tYm90dG9tOiA3LjV2aDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAuYy1mb290ZXItbmF2IHtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZThlOGU4O1xuICAgICAgbWFyZ2luLXRvcDogNnZoO1xuICAgICAgcGFkZGluZy10b3A6IDZ2aDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYy1mb290ZXItYmxvY2sge1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZThlOGU4O1xuICAgIG1hcmdpbi10b3A6IDZ2aDtcbiAgICBwYWRkaW5nLXRvcDogNnZoOyB9IH1cblxuLmMtZm9vdGVyLWxvZ28gPiBpbWcge1xuICBtYXJnaW4tdG9wOiAwO1xuICB3aWR0aDogMTUwcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtZm9vdGVyLWxvZ28gPiBpbWcge1xuICAgICAgd2lkdGg6IDE4MHB4OyB9IH1cblxuLnUtaW5saW5lQmxvY2tXcmFwcGVyID4gKiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAudS1pbmxpbmVCbG9ja1dyYXBwZXIgPiAqOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tbGVmdDogNC41dmg7IH1cblxuLmMtZm9vdGVyIHAsXG4uYy1mb290ZXIgdWwsXG4uYy1mb290ZXIgbGksXG4uYy1mb290ZXIgc3Bhbixcbi5jLWZvb3RlciBhIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWZvb3RlciBwLFxuICAgIC5jLWZvb3RlciB1bCxcbiAgICAuYy1mb290ZXIgbGksXG4gICAgLmMtZm9vdGVyIHNwYW4sXG4gICAgLmMtZm9vdGVyIGEge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtZm9vdGVyIHAsXG4gICAgLmMtZm9vdGVyIHVsLFxuICAgIC5jLWZvb3RlciBsaSxcbiAgICAuYy1mb290ZXIgc3BhbixcbiAgICAuYy1mb290ZXIgYSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy1mb290ZXIgcCA+IGxpLFxuICAuYy1mb290ZXIgcCA+IGxpIGEsXG4gIC5jLWZvb3RlciBwID4gYSxcbiAgLmMtZm9vdGVyIHVsID4gbGksXG4gIC5jLWZvb3RlciB1bCA+IGxpIGEsXG4gIC5jLWZvb3RlciB1bCA+IGEsXG4gIC5jLWZvb3RlciBsaSA+IGxpLFxuICAuYy1mb290ZXIgbGkgPiBsaSBhLFxuICAuYy1mb290ZXIgbGkgPiBhLFxuICAuYy1mb290ZXIgc3BhbiA+IGxpLFxuICAuYy1mb290ZXIgc3BhbiA+IGxpIGEsXG4gIC5jLWZvb3RlciBzcGFuID4gYSxcbiAgLmMtZm9vdGVyIGEgPiBsaSxcbiAgLmMtZm9vdGVyIGEgPiBsaSBhLFxuICAuYy1mb290ZXIgYSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1mb290ZXIgLm8tbGlzdENsZWFuIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG4uYy1mb290ZXIgLmMtbmF2LWl0ZW0ge1xuICBtYXJnaW4tdG9wOiA2cHg7IH1cbiAgLmMtZm9vdGVyIC5jLW5hdi1pdGVtLmlzLWFjdGl2ZSBhIHtcbiAgICBib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjsgfVxuXG4uYy1mb290ZXItaW5mbyBwLFxuLmMtZm9vdGVyLWluZm8gdWwsXG4uYy1mb290ZXItaW5mbyBsaSxcbi5jLWZvb3Rlci1pbmZvIHNwYW4sXG4uYy1mb290ZXItaW5mbyBhIHtcbiAgY29sb3I6IHJnYmEoMjEsIDIxLCAyMSwgMC43KTsgfVxuXG4uYy1mb290ZXItc29jaWFsQmxvY2sge1xuICBtYXJnaW4tdG9wOiAyLjB2aDsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmMtZm9vdGVyLWhpZGVNb2JpbGVMb2dvIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLnQtYnV0dG9uIHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDA7XG4gIHBhZGRpbmc6IDAgMTJweDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMTUxNTE1O1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IEJvbGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogNDRweDsgfVxuICAudC1idXR0b25bZGlzYWJsZWRdIHtcbiAgICBib3JkZXItY29sb3I6ICNiM2IzYjM7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2IzYjNiMztcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIG9wYWNpdHk6IDAuNDsgfVxuICAudC1idXR0b246aG92ZXIsIC50LWJ1dHRvbjphY3RpdmUsIC50LWJ1dHRvbjpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuICAgIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAudC1idXR0b24ge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLnQtYnV0dG9uIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIC50LWJ1dHRvbiA+IGxpLFxuICAudC1idXR0b24gPiBsaSBhLFxuICAudC1idXR0b24gPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgLnQtYnV0dG9uOmhvdmVyLCAudC1idXR0b246YWN0aXZlLCAudC1idXR0b246Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi50LWJ1dHRvbi0tcmV2IHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDA7XG4gIHBhZGRpbmc6IDAgMTJweDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMTUxNTE1O1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IEJvbGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogNDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xuICBib3JkZXItd2lkdGg6IDFweDsgfVxuICAudC1idXR0b24tLXJldltkaXNhYmxlZF0ge1xuICAgIGJvcmRlci1jb2xvcjogI2IzYjNiMztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNiM2IzO1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgb3BhY2l0eTogMC40OyB9XG4gIC50LWJ1dHRvbi0tcmV2OmhvdmVyLCAudC1idXR0b24tLXJldjphY3RpdmUsIC50LWJ1dHRvbi0tcmV2OmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC50LWJ1dHRvbi0tcmV2IHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC50LWJ1dHRvbi0tcmV2IHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIC50LWJ1dHRvbi0tcmV2ID4gbGksXG4gIC50LWJ1dHRvbi0tcmV2ID4gbGkgYSxcbiAgLnQtYnV0dG9uLS1yZXYgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgLnQtYnV0dG9uLS1yZXY6aG92ZXIsIC50LWJ1dHRvbi0tcmV2OmFjdGl2ZSwgLnQtYnV0dG9uLS1yZXY6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi50LWJ1dHRvbi0tZnVsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLnQtYnV0dG9uLS1wcmltYXJ5IHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDA7XG4gIHBhZGRpbmc6IDAgMTJweDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMTUxNTE1O1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IEJvbGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogNDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY1YmQyNDtcbiAgYm9yZGVyLWNvbG9yOiAjNjViZDI0O1xuICBjb2xvcjogI0ZGRiAhaW1wb3J0YW50O1xuICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIG1pbi13aWR0aDogOTIlO1xuICBwYWRkaW5nOiA2cHggMTJweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC50LWJ1dHRvbi0tcHJpbWFyeVtkaXNhYmxlZF0ge1xuICAgIGJvcmRlci1jb2xvcjogI2IzYjNiMztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNiM2IzO1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgb3BhY2l0eTogMC40OyB9XG4gIC50LWJ1dHRvbi0tcHJpbWFyeTpob3ZlciwgLnQtYnV0dG9uLS1wcmltYXJ5OmFjdGl2ZSwgLnQtYnV0dG9uLS1wcmltYXJ5OmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC50LWJ1dHRvbi0tcHJpbWFyeSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAudC1idXR0b24tLXByaW1hcnkge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgLnQtYnV0dG9uLS1wcmltYXJ5ID4gbGksXG4gIC50LWJ1dHRvbi0tcHJpbWFyeSA+IGxpIGEsXG4gIC50LWJ1dHRvbi0tcHJpbWFyeSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICAudC1idXR0b24tLXByaW1hcnk6aG92ZXIsIC50LWJ1dHRvbi0tcHJpbWFyeTphY3RpdmUsIC50LWJ1dHRvbi0tcHJpbWFyeTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgLnQtYnV0dG9uLS1wcmltYXJ5OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogLTIzcHg7XG4gICAgdG9wOiAtMXB4O1xuICAgIGJvcmRlci1ib3R0b206IDU5cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWxlZnQ6IDIycHggc29saWQgIzY1YmQyNDsgfVxuICAudC1idXR0b24tLXByaW1hcnk6aG92ZXIsIC50LWJ1dHRvbi0tcHJpbWFyeTphY3RpdmUsIC50LWJ1dHRvbi0tcHJpbWFyeTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY1YmQyNDtcbiAgICBjb2xvcjogI0ZGRjtcbiAgICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7IH1cblxuLnQtYnV0dG9uLS1zZWNvbmRhcnkge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogMDtcbiAgcGFkZGluZzogMCAxMnB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDEzcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMxNTE1MTU7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiA0NHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWNvbG9yOiAjMTUxNTE1O1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IEJvbGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBwYWRkaW5nOiA2cHggMzZweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC50LWJ1dHRvbi0tc2Vjb25kYXJ5W2Rpc2FibGVkXSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjYjNiM2IzO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiM2IzYjM7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBvcGFjaXR5OiAwLjQ7IH1cbiAgLnQtYnV0dG9uLS1zZWNvbmRhcnk6aG92ZXIsIC50LWJ1dHRvbi0tc2Vjb25kYXJ5OmFjdGl2ZSwgLnQtYnV0dG9uLS1zZWNvbmRhcnk6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLnQtYnV0dG9uLS1zZWNvbmRhcnkge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLnQtYnV0dG9uLS1zZWNvbmRhcnkge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgLnQtYnV0dG9uLS1zZWNvbmRhcnkgPiBsaSxcbiAgLnQtYnV0dG9uLS1zZWNvbmRhcnkgPiBsaSBhLFxuICAudC1idXR0b24tLXNlY29uZGFyeSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICAudC1idXR0b24tLXNlY29uZGFyeTpob3ZlciwgLnQtYnV0dG9uLS1zZWNvbmRhcnk6YWN0aXZlLCAudC1idXR0b24tLXNlY29uZGFyeTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgLnQtYnV0dG9uLS1zZWNvbmRhcnk6aG92ZXIsIC50LWJ1dHRvbi0tc2Vjb25kYXJ5OmFjdGl2ZSwgLnQtYnV0dG9uLS1zZWNvbmRhcnk6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGZvbnQtZmFtaWx5OiBCb2xkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjsgfVxuXG4udC1idXR0b25DbG9zZSB7XG4gIGNvbG9yOiAjNjViZDI0O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAxMnB4O1xuICB0b3A6IDEycHg7XG4gIHotaW5kZXg6IDEwMDA7XG4gIHJpZ2h0OiAyNHB4O1xuICB0b3A6IDMxcHg7IH1cbiAgLnQtYnV0dG9uQ2xvc2U6aG92ZXIsIC50LWJ1dHRvbkNsb3NlOmFjdGl2ZSwgLnQtYnV0dG9uQ2xvc2U6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cblxuLmMtaW1hZ2VCbGVuZCB7XG4gIGJhY2tncm91bmQtYmxlbmQtbW9kZTogbXVsdGlwbHk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjEsIDIxLCAyMSwgMC44KTsgfVxuXG4uYy1pbWFnZUJsZW5kLS1qdXN0IHtcbiAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBtdWx0aXBseTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMSwgMjEsIDIxLCAwLjQpOyB9XG5cbmlucHV0OmhvdmVyLCBpbnB1dDphY3RpdmUsIGlucHV0OmZvY3VzLFxudGV4dGFyZWE6aG92ZXIsXG50ZXh0YXJlYTphY3RpdmUsXG50ZXh0YXJlYTpmb2N1cyxcbnNlbGVjdDpob3ZlcixcbnNlbGVjdDphY3RpdmUsXG5zZWxlY3Q6Zm9jdXMsXG5sYWJlbDpob3ZlcixcbmxhYmVsOmFjdGl2ZSxcbmxhYmVsOmZvY3VzIHtcbiAgb3V0bGluZTogMDsgfVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbmlucHV0W3R5cGU9XCJ0ZWxcIl0sXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbi5zZWxlY3Qgc2VsZWN0LFxudGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHJlc2l6ZTogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDc1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YzRjJGMTtcbiAgYm9yZGVyOiAxcHggc29saWQgI0YzRjJGMTtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgbGluZS1oZWlnaHQ6IDQ0cHg7XG4gIHBhZGRpbmc6IDAgMTJweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwMG1zIGVhc2Utb3V0OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAgIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICAgIGlucHV0W3R5cGU9XCJkYXRlXCJdLFxuICAgIC5zZWxlY3Qgc2VsZWN0LFxuICAgIHRleHRhcmVhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAgIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICAgIGlucHV0W3R5cGU9XCJkYXRlXCJdLFxuICAgIC5zZWxlY3Qgc2VsZWN0LFxuICAgIHRleHRhcmVhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdID4gbGksXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdID4gbGkgYSxcbiAgaW5wdXRbdHlwZT1cInRleHRcIl0gPiBhLFxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl0gPiBsaSxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdID4gbGkgYSxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdID4gYSxcbiAgaW5wdXRbdHlwZT1cInRlbFwiXSA+IGxpLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdID4gbGkgYSxcbiAgaW5wdXRbdHlwZT1cInRlbFwiXSA+IGEsXG4gIGlucHV0W3R5cGU9XCJkYXRlXCJdID4gbGksXG4gIGlucHV0W3R5cGU9XCJkYXRlXCJdID4gbGkgYSxcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl0gPiBhLFxuICAuc2VsZWN0IHNlbGVjdCA+IGxpLFxuICAuc2VsZWN0IHNlbGVjdCA+IGxpIGEsXG4gIC5zZWxlY3Qgc2VsZWN0ID4gYSxcbiAgdGV4dGFyZWEgPiBsaSxcbiAgdGV4dGFyZWEgPiBsaSBhLFxuICB0ZXh0YXJlYSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICBpbnB1dFt0eXBlPVwidGV4dFwiXTotd2Via2l0LWF1dG9maWxsLFxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl06LXdlYmtpdC1hdXRvZmlsbCxcbiAgaW5wdXRbdHlwZT1cInRlbFwiXTotd2Via2l0LWF1dG9maWxsLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXTotd2Via2l0LWF1dG9maWxsLFxuICAuc2VsZWN0IHNlbGVjdDotd2Via2l0LWF1dG9maWxsLFxuICB0ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsIHtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMCAwIDYuMjVyZW0gI2Y3ZjdmNyBpbnNldDtcbiAgICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogIzY1YmQyNDtcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl06Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl06Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJkYXRlXCJdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICAuc2VsZWN0IHNlbGVjdDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgdGV4dGFyZWE6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNyk7IH1cbiAgaW5wdXRbdHlwZT1cInRleHRcIl06LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOi1tb3otcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl06LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl06LW1vei1wbGFjZWhvbGRlcixcbiAgLnNlbGVjdCBzZWxlY3Q6LW1vei1wbGFjZWhvbGRlcixcbiAgdGV4dGFyZWE6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6IHJnYmEoMjEsIDIxLCAyMSwgMC43KTsgfVxuICBpbnB1dFt0eXBlPVwidGV4dFwiXTo6LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOjotbW96LXBsYWNlaG9sZGVyLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdOjotbW96LXBsYWNlaG9sZGVyLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXTo6LW1vei1wbGFjZWhvbGRlcixcbiAgLnNlbGVjdCBzZWxlY3Q6Oi1tb3otcGxhY2Vob2xkZXIsXG4gIHRleHRhcmVhOjotbW96LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogcmdiYSgyMSwgMjEsIDIxLCAwLjcpOyB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cInRlbFwiXTotbXMtaW5wdXQtcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJkYXRlXCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgLnNlbGVjdCBzZWxlY3Q6LW1zLWlucHV0LXBsYWNlaG9sZGVyLFxuICB0ZXh0YXJlYTotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNyk7IH1cblxudGV4dGFyZWEge1xuICBsaW5lLWhlaWdodDogMS41O1xuICBwYWRkaW5nLXRvcDogMTJweDsgfVxuXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbm9wdGlvblt0eXBlPVwic2VsZWN0ZWRcIl0ge1xuICBjb2xvcjogcmdiYSgyMSwgMjEsIDIxLCAwLjUpOyB9XG5cbi5jLWZvcm1XcmFwcGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDEsIDE4OSwgMzYsIDAuMTUpO1xuICBtYXJnaW46IDZ2aCAwIDA7XG4gIHBhZGRpbmc6IDQ4cHg7IH1cblxuLmMtZm9ybSB7XG4gIG1hcmdpbi10b3A6IDQ4cHg7IH1cblxuLmMtZm9ybSBsYWJlbCxcbi5jLWZvcm0gLmxhYmVsIHtcbiAgY29sb3I6IGdyYXk7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDc1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjk2O1xuICBmb250LXNpemU6IDEycHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWZvcm0gbGFiZWwsXG4gICAgLmMtZm9ybSAubGFiZWwge1xuICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtZm9ybSBsYWJlbCxcbiAgICAuYy1mb3JtIC5sYWJlbCB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICAuYy1mb3JtIGxhYmVsID4gbGksXG4gIC5jLWZvcm0gbGFiZWwgPiBsaSBhLFxuICAuYy1mb3JtIGxhYmVsID4gYSxcbiAgLmMtZm9ybSAubGFiZWwgPiBsaSxcbiAgLmMtZm9ybSAubGFiZWwgPiBsaSBhLFxuICAuYy1mb3JtIC5sYWJlbCA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1mb3JtIGxhYmVsOm5vdCg6bGFzdC1jaGlsZCksXG4uYy1mb3JtIC5zZWxlY3Q6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi10b3A6IDI0cHg7IH1cblxuLmMtZm9ybSAuc2VsZWN0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jLWZvcm0gLnNlbGVjdDphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIHJpZ2h0OiAxLjI1cmVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICBtYXJnaW4tdG9wOiAtLjE1cmVtO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIGJvcmRlci10b3A6IC4zNXJlbSBzb2xpZDtcbiAgICBib3JkZXItcmlnaHQ6IC4zNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tOiAuMzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWxlZnQ6IC4zNXJlbSBzb2xpZCB0cmFuc3BhcmVudDsgfVxuXG4uYy1mb3JtIC5zZWxlY3Qgc2VsZWN0IHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdXRsaW5lOiAwO1xuICBhcHBlYXJhbmNlOiBub25lOyB9XG5cbi5jLWZvcm0tYWxlcnQge1xuICBjb2xvcjogI0M2MEMwQztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDY2cHg7XG4gIHJpZ2h0OiAwOyB9XG5cbiNtY19lbWJlZF9zaWdudXAgaW5wdXRbdHlwZT1cImVtYWlsXCJdIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYjNiM2IzO1xuICBtYXJnaW4tcmlnaHQ6IDZweDtcbiAgcGFkZGluZzogMDsgfVxuXG4jbWNfZW1iZWRfc2lnbnVwIC50LWJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2NWJkMjQ7XG4gIGJvcmRlci1jb2xvcjogIzY1YmQyNDtcbiAgY29sb3I6ICNmZGZkZmQ7IH1cblxuLyogdW5jc3M6aWdub3JlICovXG4uYy1pY29uIHtcbiAgd2lkdGg6IDE3OXB4O1xuICBoZWlnaHQ6IDcwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmlsbDogIzY1YmQyNDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5jLWljb246aG92ZXIsIC5jLWljb246YWN0aXZlLCAuYy1pY29uOmZvY3VzIHtcbiAgICBvdXRsaW5lOiAwOyB9XG5cbi5jLXNoYXJlV3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5jLXNoYXJlIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogMDtcbiAgdG9wOiAwOyB9XG5cbi51LW1hcmdpbk5URDMge1xuICBtYXJnaW4tdG9wOiAtOHB4ICFpbXBvcnRhbnQ7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC51LXNtRG93bi1mbGV4T3JkZXJGaXJzdCB7XG4gICAgb3JkZXI6IC0xICFpbXBvcnRhbnQ7IH0gfVxuXG4udS1oaWRlIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAudS1zbS1oaWRlIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG4udS1wb3NSZWxhdGl2ZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50OyB9XG5cbi51LWNvbG9yQmFzZSB7XG4gIGNvbG9yOiAjZGJkYmRiICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JNdXRlZCB7XG4gIGNvbG9yOiAjYjNiM2IzICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JNZWRpdW0ge1xuICBjb2xvcjogZ3JheSAhaW1wb3J0YW50OyB9XG5cbi51LWNvbG9yRGFyayB7XG4gIGNvbG9yOiAjNjM2MzYzICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JCcmFuZCB7XG4gIGNvbG9yOiAjNjViZDI0ICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JOZXV0cmFsRGFyayB7XG4gIGNvbG9yOiAjZGNkOGQxICFpbXBvcnRhbnQ7IH1cblxuLnUtc3BhY2UwIHtcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7IH1cblxuLnUtc3BhY2VUMW9mNCB7XG4gIG1hcmdpbi10b3A6IDZweDsgfVxuXG4udS1zcGFjZVREMiB7XG4gIG1hcmdpbi10b3A6IDEycHggIWltcG9ydGFudDsgfVxuXG4udS1zcGFjZVQge1xuICBtYXJnaW4tdG9wOiAyNHB4ICFpbXBvcnRhbnQ7IH1cblxuLnUtc3BhY2VUMiB7XG4gIG1hcmdpbi10b3A6IDQ4cHggIWltcG9ydGFudDsgfVxuXG4udS1zcGFjZUIge1xuICBtYXJnaW4tYm90dG9tOiAyNHB4ICFpbXBvcnRhbnQ7IH1cblxuLnUtc3BhY2VCMiB7XG4gIG1hcmdpbi1ib3R0b206IDQ4cHggIWltcG9ydGFudDsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnUtc20tc3BhY2VUIHtcbiAgICBtYXJnaW4tdG9wOiAyNHB4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC51LXNtLXNwYWNlVDIge1xuICAgIG1hcmdpbi10b3A6IDQ4cHg7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgLnUtc20tc3BhY2VMTjEge1xuICAgIG1hcmdpbi1sZWZ0OiAtMXB4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC51LXNtRG93bi1zcGFjZVIge1xuICAgIG1hcmdpbi1yaWdodDogMjRweDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAudS1zbURvd24tc3BhY2VUIHtcbiAgICBtYXJnaW4tdG9wOiAyNHB4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC51LXNtRG93bi1zcGFjZVREMiB7XG4gICAgbWFyZ2luLXRvcDogMTJweDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAudS1zbURvd24tYmxvY2tSLS0zYnk0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDQuNXZoOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC51LXNtRG93bi1ibG9ja1QtLTNieTQge1xuICAgIG1hcmdpbi10b3A6IDQuNXZoOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC51LXNtRG93bi1ibG9ja0ItLTNieTQge1xuICAgIG1hcmdpbi1ib3R0b206IDQuNXZoOyB9IH1cblxuLnUtc20tYmxvY2tCLS0xYnk0IHtcbiAgbWFyZ2luLWJvdHRvbTogMS41dmg7IH1cblxuLnUtc20tYmxvY2tCLS0xYnkzIHtcbiAgbWFyZ2luLWJvdHRvbTogMi4wdmg7IH1cblxuLnUtc20tYmxvY2tCLS0xYnkyIHtcbiAgbWFyZ2luLWJvdHRvbTogM3ZoOyB9XG5cbi51LXNtLWJsb2NrVC0tMWJ5NCB7XG4gIG1hcmdpbi10b3A6IDEuNXZoOyB9XG5cbi51LXNtLWJsb2NrVC0tMWJ5MyB7XG4gIG1hcmdpbi10b3A6IDIuMHZoOyB9XG5cbi51LXNtLWJsb2NrVC0tMWJ5MiB7XG4gIG1hcmdpbi10b3A6IDN2aDsgfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE5PUk1BTElaRVxuLy8gICAxNjA2Mjlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8qIDEgKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvKiAyICovXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgbGluZS1oZWlnaHQgZm9yIGFsbCBoZWFkaW5ncyBpbiBDaHJvbWUgbW9iaWxlLCBGaXJlZm94LFxuICogaU9TIFNhZmFyaSwgTWljcm9zb2Z0IEVkZ2UgYW5kIElFLlxuICovXG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgU1VJVCBCQVNFXG4vLyAgIFZlcnNpb24gMi4wLjAgMTYwNjI5XG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvYmFzZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vKipcbiAqIEEgdGhpbiBsYXllciBvbiB0b3Agb2Ygbm9ybWFsaXplLmNzcyB0aGF0IHByb3ZpZGVzIGEgc3RhcnRpbmcgcG9pbnQgbW9yZVxuICogc3VpdGFibGUgZm9yIHdlYiBhcHBsaWNhdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBQcmV2ZW50IG1hcmdpbiBhbmQgYm9yZGVyIGZyb20gYWZmZWN0aW5nIGVsZW1lbnQgd2lkdGguXG4gKiBodHRwczovL2dvby5nbC9wWXRiSzdcbiAqXG4gKi9cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogUmVtb3ZlcyB0aGUgZGVmYXVsdCBzcGFjaW5nIGFuZCBib3JkZXIgZm9yIGFwcHJvcHJpYXRlIGVsZW1lbnRzLlxuICovXG5cbmJsb2NrcXVvdGUsXG5kbCxcbmRkLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxuZmlndXJlLFxucCxcbnByZSB7XG4gIG1hcmdpbjogMDtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBXb3JrIGFyb3VuZCBhIEZpcmVmb3gvSUUgYnVnIHdoZXJlIHRoZSB0cmFuc3BhcmVudCBgYnV0dG9uYCBiYWNrZ3JvdW5kXG4gKiByZXN1bHRzIGluIGEgbG9zcyBvZiB0aGUgZGVmYXVsdCBgYnV0dG9uYCBmb2N1cyBzdHlsZXMuXG4gKi9cblxuYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZDtcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5pZnJhbWUge1xuICBib3JkZXI6IDA7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogU3VwcHJlc3MgdGhlIGZvY3VzIG91dGxpbmUgb24gZWxlbWVudHMgdGhhdCBjYW5ub3QgYmUgYWNjZXNzZWQgdmlhIGtleWJvYXJkLlxuICogVGhpcyBwcmV2ZW50cyBhbiB1bndhbnRlZCBmb2N1cyBvdXRsaW5lIGZyb20gYXBwZWFyaW5nIGFyb3VuZCBlbGVtZW50cyB0aGF0XG4gKiBtaWdodCBzdGlsbCByZXNwb25kIHRvIHBvaW50ZXIgZXZlbnRzLlxuICovXG5cblt0YWJpbmRleD1cIi0xXCJdOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50O1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIEZVTkNUSU9OU1xuLy8gICBUaGVzZSBhcmUgbW9zdGx5IHBhc3NlZCBpbnRvIG1peGlucywgc28gc291cmNlIHRoZW0gYmVmb3JlIG1peGlucy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQWNjZXNzIG5lc3RlZCBtYXBzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVE9ETzogYWRkIGFuIGVycm9yIG1lc3NhZ2UsIGxpa2U6XG4vLyBAaWYgKCR2YWx1ZSA9PSBudWxsKSB7XG4vLyAgQGVycm9yIFwiVGhlIHZhbHVlICcjeyRrZXl9JyBkb2Vzbid0IGV4aXN0IGluIHRoZSBtYXAuXCI7IH1cbi8vIFNlZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vamxvbmcvODc2MDI3NVxuLy8gU2VlOiBPVUk6cGFydGlhbHM6ZWxlbWVudHM6ZnVuY3Rpb25zXG4vLyBTZWU6IGh0dHA6Ly9jb2RlcGVuLmlvL2pha2VhbGJhdWdoL3Bvc3QvdXNpbmctc2Fzcy1mdW5jdGlvbnMtdG8tYWNjZXNzLWNvbXBsZXgtdmFyaWFibGUtbWFwc1xuXG5AZnVuY3Rpb24gbWFwLWZldGNoKCRtYXAsICRrZXlzLi4uKSB7XG5cdCR2YWx1ZTogJG1hcDtcblx0QGVhY2ggJGtleSBpbiAka2V5cyB7XG5cdFx0JHZhbHVlOiBtYXAtZ2V0KCR2YWx1ZSwgJGtleSk7XG5cdH1cblx0QHJldHVybiAkdmFsdWU7XG59XG5cbi8vIEV4YW1wbGU6XG5cbiRjb25maWc6IChcbiAgdGhlbWVzOiAoXG5cdG1pc3Q6IChcblx0ICBoZWFkZXI6ICNkY2ZhYzAsXG5cdCAgY29udGVudDogIzAwOTY4Yixcblx0ICBmb290ZXI6ICM4NWM3OWNcblx0KSxcblx0c3ByaW5nOiAoXG5cdCAgaGVhZGVyOiAjZjRmYWM3LFxuXHQgIGNvbnRlbnQ6ICNjMjQ1NGUsXG5cdCAgZm9vdGVyOiAjZmZiMTU4XG5cdClcbiAgKVxuKTtcblxuLy8gZ2V0IHRoZSBtaXN0IGhlYWRlciBjb2xvciAjZGNmYWMwOlxuLy8gbWFwLWZldGNoKCRjb25maWcsIFwidGhlbWVzXCIsIFwibWlzdFwiLCBcImhlYWRlclwiKVxuXG4vLyBwcmludCBlYWNoIHZhbHVlIGZyb20gdGhlIG1hcCB0byBhIGNsYXNzOlxuQGVhY2ggJHRoZW1lIGluIG1hcC1rZXlzKCBtYXAtZ2V0KCRjb25maWcsIFwidGhlbWVzXCIpICkge1xuXG4gIC4jeyR0aGVtZX0ge1xuXHQuaGVhZGVyICB7IGJhY2tncm91bmQtY29sb3I6IG1hcC1mZXRjaCgkY29uZmlnLCBcInRoZW1lc1wiLCAkdGhlbWUsIFwiaGVhZGVyXCIgICk7IH1cblx0LmNvbnRlbnQgeyBiYWNrZ3JvdW5kLWNvbG9yOiBtYXAtZmV0Y2goJGNvbmZpZywgXCJ0aGVtZXNcIiwgJHRoZW1lLCBcImNvbnRlbnRcIiApOyB9XG5cdC5mb290ZXIgIHsgYmFja2dyb3VuZC1jb2xvcjogbWFwLWZldGNoKCRjb25maWcsIFwidGhlbWVzXCIsICR0aGVtZSwgXCJmb290ZXJcIiAgKTsgfVxuICB9XG5cbn1cblxuLy8gT1VJIG1hcC1mZXRjaFxuLy8gQGZ1bmN0aW9uIG1hcC1mZXRjaCgkbWFwLCAka2V5cykge1xuLy8gICAka2V5OiBudGgoJGtleXMsIDEpO1xuLy8gICAkbGVuZ3RoOiBsZW5ndGgoJGtleXMpO1xuLy8gICAkdmFsdWU6IG1hcC1nZXQoJG1hcCwgJGtleSk7XG4vLyAgIEBpZiAoJGxlbmd0aCA+IDEpIHtcbi8vICAgICAkcmVzdDogKCk7XG4vLyAgICAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCAkbGVuZ3RoIHtcbi8vICAgICAgICRyZXN0OiBhcHBlbmQoJHJlc3QsIG50aCgka2V5cywgJGkpKTtcbi8vICAgICB9XG4vLyAgICAgQGlmICgkdmFsdWUgPT0gbnVsbCkge1xuLy8gICAgICAgQGVycm9yIFwiVGhlIHZhbHVlICcjeyRrZXl9JyBkb2Vzbid0IGV4aXN0IGluIHRoZSBtYXAuXCI7XG4vLyAgICAgfVxuLy8gICAgIEByZXR1cm4gbWFwLWZldGNoKCR2YWx1ZSwgJHJlc3QpXG4vLyAgIH0gQGVsc2Uge1xuLy8gICAgIEBpZiAoJHZhbHVlID09IG51bGwpIHtcbi8vICAgICAgIEBlcnJvciBcIlRoZSB2YWx1ZSAnI3ska2V5fScgZG9lc24ndCBleGlzdCBpbiB0aGUgbWFwLlwiO1xuLy8gICAgIH1cbi8vICAgICBAcmV0dXJuICR2YWx1ZTtcbi8vICAgfVxuLy8gfVxuXG4vLyBEZWJ1Z2dpbiBzYXNzIG1hcHNcbi8vIENhbid0IGdldCB0aGlzIHRvIHdvcmsgQVRNIGJ1dCBjb3VsZCBiZSB1c2VmdWwuXG4vLyBodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vZGVidWdnaW5nLXNhc3MtbWFwcy9cblxuQG1peGluIGRlYnVnLW1hcCgkbWFwKSB7XG5cdEBhdC1yb290IHtcblx0XHRAZGVidWctbWFwIHtcblx0XHRcdF9fdG9TdHJpbmdfXzogaW5zcGVjdCgkbWFwKTtcblx0XHRcdF9fbGVuZ3RoX186IGxlbmd0aCgkbWFwKTtcblx0XHRcdF9fZGVwdGhfXzogZGVwdGgoJG1hcCk7XG5cdFx0XHRfX2tleXNfXzogbWFwLWtleXMoJG1hcCk7XG5cdFx0XHRfX3Byb3BlcnRpZXNfXyB7XG5cdFx0XHRcdEBlYWNoICRrZXksICR2YWx1ZSBpbiAkbWFwIHtcblx0XHRcdFx0XHQjeycoJyArIHR5cGUtb2YoJHZhbHVlKSArICcpICcgKyAka2V5fTogaW5zcGVjdCgkdmFsdWUpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cblxuLy8gU3Bpbi1vdXQgbWFwLWZldGNoIGZ1bmN0aW9ucyBmb3IgbW9zdC11c2VkIHN0eWxlcy5cbi8vIERvbmUgYXMgZnVuY3Rpb25zLCBub3QgbWl4aW5zLCBzbyB3ZSBjYW4gdXNlIHRoZW0gd2l0aGluXG4vLyBzdGFuZGFyZCBzdHlsZSBsaXN0cywgZS5nLiBjb2xvcjogcGFsZXR0ZSgpO1xuLy8gU2VlOlxuLy8gaHR0cDovL3d3dy5iaWdlbmcuaW8vaG93LXdlLXVzZS1zYXNzLW1hcHMtZm9yLWRlc2lnbi10b2tlbnMtYW5kLWRldmVsb3Blci1oYXBwaW5lc3MvXG4vLyBodHRwOi8vZXJza2luZWRlc2lnbi5jb20vYmxvZy9mcmllbmRsaWVyLWNvbG91ci1uYW1lcy1zYXNzLW1hcHMvXG4vLyBAZnVuY3Rpb24gcGFsZXR0ZSgkcGFsZXR0ZSwgJHRvbmU6ICdiYXNlJykge1xuLy8gICAgIEByZXR1cm4gbWFwLWdldChtYXAtZ2V0KCRwYWxldHRlcywgJHBhbGV0dGUpLCAkdG9uZSk7XG4vLyB9XG5cbi8vIEBmdW5jdGlvbiBjb2xvcigkdHlwZTogJ3VpJywgJGluY3JlbWVudDogJ2Jhc2UnKSB7XG4vLyAgICAgQHJldHVybiBtYXAtZmV0Y2goJGNvbG9yLCAkdHlwZSwgJGluY3JlbWVudCk7XG4vLyB9XG5cbkBmdW5jdGlvbiBwYWxldHRlKCRodWU6ICdncmV5LTI1Jykge1xuXHRAcmV0dXJuIG1hcC1mZXRjaCgkcGFsZXR0ZSwgJGh1ZSk7XG59XG5cbkBmdW5jdGlvbiBzaXplKCR0eXBlOiAnZm9udCcsICRpbmNyZW1lbnQ6ICd0ZXh0Jykge1xuXHRAcmV0dXJuIG1hcC1mZXRjaCgkc2l6ZSwgJHR5cGUsICRpbmNyZW1lbnQpO1xufVxuXG5AZnVuY3Rpb24gY29udGFpbmVyLXdpZHRoKCR3aWR0aDogJ2xnJykge1xuXHRAcmV0dXJuIG1hcC1nZXQoJGNvbnRhaW5lci1tYXgtd2lkdGhzLCAkd2lkdGgpO1xufVxuXG5AZnVuY3Rpb24gZm9udHNpemUoJGluY3JlbWVudDogJ1RleHQnLCAkcmVzcG9uc2U6ICdzbScpIHtcblx0Ly8gQHJldHVybiBtYXAtZmV0Y2goJHNpemUsIGZvbnQsICRpbmNyZW1lbnQsICRyZXNwb25zZSk7XG5cdEByZXR1cm4gbWFwLWZldGNoKCRmb250c2l6ZXMsICRpbmNyZW1lbnQsICRyZXNwb25zZSk7XG59XG5cbkBmdW5jdGlvbiB0cmFuc2l0aW9uKCRwcm9wZXJ0eTogJ2R1cmF0aW9uJywgJHJlc3BvbnNlOiAnc2hvcnQnKSB7XG5cdEByZXR1cm4gbWFwLWZldGNoKCR0cmFuc2l0aW9uLCAkcHJvcGVydHksICRyZXNwb25zZSk7XG59XG5cbi8vIEkgdGhpbmsgdGhpcyBpcyBhIEdpcmF1ZGVsIGZ1bmN0aW9u4oCmXG4vLyBAbGluayBodHRwOi8vc2Fzcy1ndWlkZWxpbi5lcy8jZXJyb3JzXG4vLyBAbGluayBodHRwczovL2pvbnN1aC5jb20vYmxvZy9vcmdhbml6aW5nLXotaW5kZXgtd2l0aC1zYXNzL1xuXG5AZnVuY3Rpb24gZm9udC13ZWlnaHQoJGtleSkge1xuXHRAaWYgbm90IG1hcC1oYXMta2V5KCRmb250LXdlaWdodCwgJGtleSkge1xuXHRcdEBlcnJvciAnVGhlcmUgaXMgbm8ga2V5IG5hbWVkIGAjeyRrZXl9YCBpbiAkZm9udC13ZWlnaHRzLiAnXG5cdFx0XHQgKyAnS2V5IHNob3VsZCBiZSBvbmUgb2YgI3ttYXAta2V5cygkZm9udC13ZWlnaHQpfS4nO1xuXHR9XG5cblx0QHJldHVybiBtYXAtZ2V0KCRmb250LXdlaWdodCwgJGtleSk7XG59XG5cbkBtaXhpbiBmb250LXdlaWdodCgka2V5KSB7XG5cdC8vIGZvbnQtZmFtaWx5OiAkZm9udDtcblx0Zm9udC13ZWlnaHQ6IGZvbnQtd2VpZ2h0KCRrZXkpO1xufVxuXG5cbi8vIFRpbnRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBmdW5jdGlvbiB0aW50KCRjdXJyZW50LWNvbG9yLCAkcGVyY2VudCkge1xuXHRAcmV0dXJuIG1peCgjRkZGLCAkY3VycmVudC1jb2xvciwgJHBlcmNlbnQpO1xufVxuXG5cbi8vIFNwYWNlciBjb21wdXRhdGlvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFNlZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vamxvbmcvODc2MDI3NVxuLy8gU2VlOiBPVUk6cGFydGlhbHM6ZWxlbWVudHM6ZnVuY3Rpb25zXG5cbi8vIEBmdW5jdGlvbiBzcGFjZXIoJHZhbHVlKSB7XG4vLyAgIEBpZiAoJHZhbHVlICogMikgJSAxICE9IDAge1xuLy8gICAgIEB3YXJuICdTcGFjZXIgdmFsdWUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDAuNSc7XG4vLyAgICAgQHJldHVybiAnU3BhY2VyIHZhbHVlIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAwLjUnO1xuLy8gICB9IEBlbHNlIHtcbi8vICAgICBAcmV0dXJuICRzcGFjZXItdW5pdCAqICR2YWx1ZTtcbi8vICAgfVxuLy8gfVxuXG5AZnVuY3Rpb24gc3BhY2UoJHZhbHVlKSB7XG5cdEByZXR1cm4gJHNwYWNlLXVuaXQgKiAkdmFsdWU7XG59XG5cblxuLy8gU2N1dCBzdHJpcCB1bml0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gaHR0cDovL2RhdmlkdGhlY2xhcmsuZ2l0aHViLmlvL3NjdXQvc3RyaXAtdW5pdC5odG1sXG5cbkBmdW5jdGlvbiBzY3V0LXN0cmlwLXVuaXQgKFxuXHQkbnVtXG4pIHtcblxuXHRAcmV0dXJuICRudW0gLyAoJG51bSAqIDAgKyAxKTtcblxufVxuXG5cbi8vIFNjdXQgcHggdG8gcmVtXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gaHR0cDovL2RhdmlkdGhlY2xhcmsuZ2l0aHViLmlvL3NjdXQvcmVtLmh0bWxcbi8vIFJlcXVpcmVzOiBgc2N1dC1zdHJpcC11bml0YC5cbi8vIFJlbmFtZWQgcmVtKCkgZnJvbSBzY3V0LXJlbSgpIGZvciBlYXNlIG9mIHVzZS5cblxuJHNjdXQtcmVtLWJhc2U6IDE2ICFkZWZhdWx0O1xuXG5AZnVuY3Rpb24gcmVtIChcblx0JHBpeGVsc1xuKSB7XG5cblx0JHJlbS12YWxzOiAoKTtcblx0QGVhY2ggJHZhbCBpbiAkcGl4ZWxzIHtcblx0XHQkdmFsLWluLXJlbXM6IHNjdXQtc3RyaXAtdW5pdCgkdmFsKSAvICRzY3V0LXJlbS1iYXNlICogMXJlbTtcblx0XHQkcmVtLXZhbHM6IGFwcGVuZCgkcmVtLXZhbHMsICR2YWwtaW4tcmVtcyk7XG5cdH1cblxuXHRAaWYgbGVuZ3RoKCRyZW0tdmFscykgPT0gMSB7XG5cdFx0Ly8gcmV0dXJuIGEgc2luZ2xlIHZhbHVlIGluc3RlYWQgb2YgYSBsaXN0LFxuXHRcdC8vIHNvIGl0IGNhbiBiZSB1c2VkIGluIGNhbGN1bGF0aW9uc1xuXHRcdEByZXR1cm4gbnRoKCRyZW0tdmFscywgMSk7XG5cdH1cblx0QGVsc2Uge1xuXHRcdEByZXR1cm4gJHJlbS12YWxzO1xuXHR9XG5cbn1cblxuXG4vLyBTY3V0IGZvbnQtZmFjZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIGh0dHA6Ly9kYXZpZHRoZWNsYXJrLmdpdGh1Yi5pby9zY3V0L2ZvbnQtZmFjZS5odG1sXG4vLyBSZW5hbWVkIGZvbnQtZmFjZSgpIGZyb20gc2N1dC1mb250LWZhY2UoKSBmb3IgZWFzZSBvZiB1c2UuXG4vLyBPcmlnaW5hbCAkZm9ybWF0czogZW90IHdvZmYyIHdvZmYgdHRmIHN2Z1xuXG5AZnVuY3Rpb24gbWFpbi1zcmMoJGZvcm1hdHMsICRmaWxlLXBhdGgsICRmb250LWZhbWlseSkge1xuXHQvLyBSZXR1cm4gdGhlIGxpc3Qgb2YgYHNyY2AgdmFsdWVzLCBpbiBvcmRlciwgdGhhdFxuXHQvLyBhIGdvb2QgYEBmb250LWZhY2VgIHdpbGwgbmVlZCwgaW5jbHVkaW5nIG9ubHlcblx0Ly8gdGhvc2UgZm9ybWF0cyBzcGVjaWZpZWQgaW4gdGhlIGxpc3QgYCRmb3JtYXRzYC5cblx0JHJlc3VsdDogKCk7XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgZW90KSB7XG5cdFx0JGVvdC12YWw6IHVybCgnI3skZmlsZS1wYXRofS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpO1xuXHRcdCRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkZW90LXZhbCwgY29tbWEpO1xuXHR9XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgd29mZjIpIHtcblx0XHQkd29mZjItdmFsOiB1cmwoJyN7JGZpbGUtcGF0aH0ud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR3b2ZmMi12YWwsIGNvbW1hKTtcblx0fVxuXHRAaWYgaW5kZXgoJGZvcm1hdHMsIHdvZmYpIHtcblx0XHQkd29mZi12YWw6IHVybCgnI3skZmlsZS1wYXRofS53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR3b2ZmLXZhbCwgY29tbWEpO1xuXHR9XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgdHRmKSB7XG5cdFx0JHR0Zi12YWw6IHVybCgnI3skZmlsZS1wYXRofS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR0dGYtdmFsLCBjb21tYSk7XG5cdH1cblx0QGlmIGluZGV4KCRmb3JtYXRzLCBzdmcpIHtcblx0XHQkc3ZnLXZhbDogdXJsKCcjeyRmaWxlLXBhdGh9LnN2ZyMjeyRmb250LWZhbWlseX0nKSBmb3JtYXQoJ3N2ZycpO1xuXHRcdCRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkc3ZnLXZhbCwgY29tbWEpO1xuXHR9XG5cdEByZXR1cm4gJHJlc3VsdDtcbn1cblxuQG1peGluIGZvbnQtZmFjZSAoXG5cdCRmb250LWZhbWlseSxcblx0JGZpbGUtcGF0aCxcblx0JHdlaWdodDogbm9ybWFsLFxuXHQkc3R5bGU6IG5vcm1hbCxcblx0JGZvcm1hdHM6IGVvdCB3b2ZmIHR0ZiBzdmdcbikge1xuXG5cdEBpZiBpbmRleCgnaXRhbGljJyAnb2JsaXF1ZScsICR3ZWlnaHQpIHtcblx0XHQkc3R5bGU6ICR3ZWlnaHQ7XG5cdFx0JHdlaWdodDogbm9ybWFsO1xuXHR9XG5cblx0QGZvbnQtZmFjZSB7XG5cdFx0Zm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcblx0XHRmb250LXdlaWdodDogJHdlaWdodDtcblx0XHRmb250LXN0eWxlOiAkc3R5bGU7XG5cblx0XHRAaWYgaW5kZXgoJGZvcm1hdHMsIGVvdCkge1xuXHRcdFx0c3JjOiB1cmwoJyN7JGZpbGUtcGF0aH0uZW90Jyk7XG5cdFx0fVxuXG5cdFx0c3JjOiBtYWluLXNyYyggJGZvcm1hdHMsICRmaWxlLXBhdGgsICRmb250LWZhbWlseSApO1xuXHR9XG5cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBWQVJJQUJMRSBTRVRUSU5HU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBOYW1lc3BhY2UgZm9yIHRoZW1laW5nICYgdGVzdGluZ1xuLy8gQXBwbHk6IC4jeyRuYW1lc3BhY2V9dGV4dGFyZWFcbi8vIERvbid0IHVzZSB0aGlzIG1ldGhvZCB0byBuYW1lc3BhY2UgdmFyaWFibGVz4oCmXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kbmFtZXNwYWNlICAgICAgICAgICAgIDogJyc7XG5cblxuLy8gQ29sb3Vyc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGJhc2UtYmxhY2sgICAgICAgICAgICAgICAgICAgIDogIzAwMDtcbiRiYXNlLXdoaXRlICAgICAgICAgICAgICAgICAgICA6ICNGRkY7XG5cbiRwYWxldHRlOiAoXG5cdGJsYWNrICAgICAgICAgICAgICAgICAgICAgIDogJGJhc2UtYmxhY2ssXG5cdHRleHQgICAgICAgICAgICAgICAgICAgICAgIDogIzE1MTUxNSxcblx0ZGFyayAgICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCAxNSUpLFxuXHRhc2ggICAgICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDIyJSksXG5cdGNoYXJjb2FsICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgMzklKSxcblx0bWVkaXVtICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCA1MCUpLFxuXHRtdXRlZCAgICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDcwJSksXG5cdGJhc2UgICAgICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgODYlKSxcblx0bGlnaHQgICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCA5MSUpLFxuXHRmYWludCAgICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDk3JSksXG5cdHdoaXRlICAgICAgICAgICAgICAgICAgICAgIDogJGJhc2Utd2hpdGUsXG5cdGJhY2tncm91bmQgICAgICAgICAgICAgICAgIDogI2ZkZmRmZCxcblx0bmV1dHJhbCAgICAgICAgICAgICAgICAgICAgOiAjRjNGMkYxLFxuXHRuZXV0cmFsLXRleHQgICAgICAgICAgICAgICA6IGRhcmtlbigjZjBlZWViLCAyNyUpLFxuXHRuZXV0cmFsLWRhcmsgICAgICAgICAgICAgICA6IGRhcmtlbigjZjBlZWViLCA5JSksXG5cdG5ldXRyYWwtbGlnaHQgICAgICAgICAgICAgIDogbGlnaHRlbigjZjBlZWViLCAyJSksXG5cdGJyYW5kICAgICAgICAgICAgICAgICAgICAgIDogIzY1YmQyNCxcblx0YnJhbmQtY29tcGxlbWVudCAgICAgICAgICAgOiAjMmUyNDIzLFxuXHRicmFuZC1jb3VudGVyICAgICAgICAgICAgICA6ICM4ODdFNzMsXG5cdG1vZGFsLWJhY2tncm91bmQgICAgICAgICAgIDogIzE1MTUxNSxcblx0d2FybmluZyAgICAgICAgICAgICAgICAgICAgOiAjRkZENDBDLFxuXHRiYWQtbmV3cyAgICAgICAgICAgICAgICAgICA6ICNDNjBDMEMsXG5cdGdvb2QtbmV3cyAgICAgICAgICAgICAgICAgIDogYnJhbmQtY29tcGxlbWVudFxuKTtcblxuXG4vLyBCYXNlIHNpemUgbWVhc3VyZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRiYXNlLWZvbnQtc2l6ZS11bml0ICAgICAgICAgICA6IDE2O1xuJGJhc2UtbGluZS1oZWlnaHQtdW5pdCAgICAgICAgIDogMS41O1xuJGJhc2UtZm9udC1zaXplICAgICAgICAgICAgICAgIDogJGJhc2UtZm9udC1zaXplLXVuaXQgKiAxcHg7XG4kYmFzZS1saW5lLWhlaWdodCAgICAgICAgICAgICAgOiAoJGJhc2UtZm9udC1zaXplLXVuaXQgKiAkYmFzZS1saW5lLWhlaWdodC11bml0KSAqIDFweDsgLy8gMjQuNjVcbiRzcGFjZS11bml0ICAgICAgICAgICAgICAgICAgICA6ICRiYXNlLWxpbmUtaGVpZ2h0O1xuJHNwYWNlICAgICAgICAgICAgICAgICAgICAgICAgIDogJHNwYWNlLXVuaXQgKiAxO1xuXG4kZ3V0dGVyU3BhY2UgICAgICAgICAgICAgICAgICAgOiBzcGFjZSgxKTtcbiRwYXJhZ3JhcGhTcGFjZSAgICAgICAgICAgICAgICA6IHNwYWNlKDAuNzUpO1xuJGJsb2NrU3BhY2UgICAgICAgICAgICAgICAgICAgIDogNnZoO1xuXG5cblxuLy8gV2lkdGhzIChiYXNlZCBvbiBCUzQpXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBCUzQgZGVmYXVsdHM6XG4vLyBSZW1vdmVkIHRoZSBCUzQgYXNjZW5kaW5nIG1peGluOlxuLy8gQGluY2x1ZGUgX2Fzc2VydC1hc2NlbmRpbmcoJGdyaWQtYnJlYWtwb2ludHMsIFwiJGdyaWQtYnJlYWtwb2ludHNcIik7KSxcbi8vICRjb250YWluZXItbWF4LXdpZHRoczogKFxuLy8gXHRzbTogNTc2cHgsXG4vLyBcdG1kOiA3MjBweCxcbi8vIFx0bGc6IDk0MHB4LFxuLy8gXHR4bDogMTE0MHB4XG4vLyApICFkZWZhdWx0O1xuXG4kZ3JpZC1icmVha3BvaW50czogKFxuXHR4czogMCxcblx0c206IDU0NHB4LFxuXHRtZDogNzY4cHgsXG5cdGxnOiA5OTJweCxcblx0eGw6IDEyMDBweCxcblx0c3U6IDE3MDBweFxuKSAhZGVmYXVsdDtcblxuJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoXG5cdHNtOiA1NzZweCxcblx0bWQ6IDY2MHB4LFxuXHRsZzogMTA0MHB4LFxuXHR4bDogMTIwMHB4LFxuXHRzdTogMTcwMHB4LFxuKSAhZGVmYXVsdDtcblxuXG4vLyBGb250IHNpemVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kZm9udHNpemVzOiAoXG5cdHRleHQtLXhzOiAoXG5cdFx0eHMgICAgICAgICAgICA6IDEycHgsXG5cdFx0c20gICAgICAgICAgICA6IDEycHgsXG5cdFx0cmcgICAgICAgICAgICA6IDEycHhcblx0KSxcblx0dGV4dC0tc206IChcblx0XHR4cyAgICAgICAgICAgIDogMTNweCxcblx0XHRzbSAgICAgICAgICAgIDogMTRweCxcblx0XHRyZyAgICAgICAgICAgIDogMTRweFxuXHQpLFxuICAgIHRleHQtLW1ldGE6IChcbiAgICAgICAgeHMgICAgICAgICAgICA6IDE0cHgsXG4gICAgICAgIHNtICAgICAgICAgICAgOiAxNXB4LFxuICAgICAgICByZyAgICAgICAgICAgIDogMTVweFxuICAgICksXG5cdHRleHQ6IChcblx0XHR4cyAgICAgICAgICAgIDogMTZweCxcblx0XHRzbSAgICAgICAgICAgIDogMThweCxcblx0XHRyZyAgICAgICAgICAgIDogMjFweFxuXHQpLFxuXHR0ZXh0LS1sZzogKFxuICAgICAgICB4cyAgICAgICAgICAgIDogMTlweCxcbiAgICAgICAgc20gICAgICAgICAgICA6IDIycHgsXG4gICAgICAgIGxnICAgICAgICAgICAgOiAyNHB4XG5cdCksXG5cdGhlYWRsaW5lLS14czogKFxuXHRcdHhzICAgICAgICAgICAgOiAxOHB4LFxuXHRcdHNtICAgICAgICAgICAgOiAyMnB4LFxuXHRcdGxnICAgICAgICAgICAgOiAyN3B4XG5cdCksXG5cdGhlYWRsaW5lLS1zbTogKFxuXHRcdHhzICAgICAgICAgICAgOiAxNnB4LFxuXHRcdHNtICAgICAgICAgICAgOiAyMHB4LFxuXHRcdGxnICAgICAgICAgICAgOiAyMXB4XG5cdCksXG5cdGhlYWRsaW5lOiAoXG5cdFx0eHMgICAgICAgICAgICA6IDQ0cHgsXG5cdFx0c20gICAgICAgICAgICA6IDU0cHgsXG5cdFx0bGcgICAgICAgICAgICA6IDcycHhcblx0KSxcblx0ZGlzcGxheTogKFxuXHRcdHhzICAgICAgICAgICAgOiA0MHB4LFxuXHRcdHNtICAgICAgICAgICAgOiA1NHB4LFxuXHRcdGxnICAgICAgICAgICAgOiA2MHB4XG5cdClcbik7XG5cblxuLy8gT3RoZXIgc2l6ZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRib3JkZXItcmFkaXVzOiAoXG4gICAgc21hbGwgICAgICAgICAgICAgOiAzcHgsXG4gICAgYmFzZSAgICAgICAgICAgICAgOiA0cHgsXG4gICAgbGFyZ2UgICAgICAgICAgICAgOiA2cHhcbik7XG5cbiRidXR0b24taGVpZ2h0OiAoXG4gICAgY29uY2lzZSAgICAgICAgICAgOiAzNnB4LFxuICAgIGJhc2UgICAgICAgICAgICAgIDogNDRweCxcbiAgICBsZyAgICAgICAgICAgICAgICA6IDU1cHhcbik7XG5cbiRsaXN0LWluc2V0OiAoXG4gICAgbWFyZ2luICAgICAgICAgICAgOiBzcGFjZSgwLjc1KSxcbiAgICBwYWRkaW5nICAgICAgICAgICA6IDBcbik7XG5cblxuLy8gVHJhbnNpdGlvbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiR0cmFuc2l0aW9uOiAoXG5cdGR1cmF0aW9uOiAoXG5cdFx0ZmFzdCAgICAgICAgIDogNTBtcyxcblx0XHRzaG9ydCAgICAgICAgOiAxNTBtcyxcblx0XHRsb25nICAgICAgICAgOiA1MDBtc1xuXHQpLFxuXHR0eXBlOiAoXG5cdFx0dGhpc2Fsc28gICAgIDogY3ViaWMtYmV6aWVyKDAuMTksIDEsIDAuMjIsIDEpLFxuXHRcdGN1YmljLXN0YXRpYyA6IGN1YmljLWJlemllcigwLCAtMC4xLCAxLCAtMC4xKSxcblx0XHRjdWJpYy1zdGF0ZSAgOiBjdWJpYy1iZXppZXIoMCwgMS4xLCAxLCAxLjEpLFxuXHRcdGJhc2UgICAgICAgICA6IGVhc2Utb3V0LFxuXHRcdGZpbmUgICAgICAgICA6IGVhc2UtaW4tb3V0XG5cdClcbik7XG5cblxuLy8gWi1pbmRleGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kei1pbmRleDogKFxuXHQnbW9kYWwnICAgICA6IDgwMDEsXG5cdCdvdmVybGF5JyAgIDogODAwMCxcblx0J2Ryb3Bkb3duJyAgOiA3MDAwLFxuXHQnc2Vjb25kJyAgICA6IDIwMDAsXG5cdCdmaXJzdCcgICAgIDogMTAwMCxcblx0J2RlZmF1bHQnICAgOiAxLFxuXHQnYmVsb3cnICAgICA6IC0xLFxuKTtcblxuXG4vLyBGb250c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRGVmaW5lIHN0YWNrc1xuJG1vbm8tZm9udC1zdGFjayAgICAgICA6IE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcIkxpYmVyYXRpb24gTW9ub1wiLCAnQ291cmllciBOZXcnLCAnQW5kYWxlIE1vbm8nLCAnTHVjaWRhIFNhbiBUeXBld3JpdGVyJywgJ0x1Y2lkYSBDb25zb2xlJywgbW9ub3NwYWNlO1xuJHNhbnMtZm9udC1zdGFjayAgICAgICA6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuJHNlcmlmLWZvbnQtc3RhY2sgICAgICA6IEdlb3JnaWEsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFwiVGltZXNcIiwgc2VyaWY7XG4kZGlzcGxheS1mb250LXN0YWNrICAgIDogJHNhbnMtZm9udC1zdGFjaztcblxuLy8gQXJlIHlvdSByZWZlcmVuY2luZyB0aGUgZm9udCBmaWxlcyByYXRoZXIgdGhhbiB1c2luZyBhIGJhc2U2NCBzdHJpbmc/XG4kZm9udHMtcGF0aCAgICAgICAgICAgOiAnL2Fzc2V0cy9mb250cy8nO1xuXG4vLyBJcyB5b3VyIGZvbnQgbmFtZXNwYWNlZD9cbiRmb250LW5hbWVzcGFjZSAgICAgICAgOiAnJztcblxuLy8gSXMgdGhlIGh0bWwtbGV2ZWwgZm9udCBzdGFjayBzYW5zIG9yIHNlcmlmP1xuJG1haW4tZm9udC1zdGFjayAgICAgICA6ICRzYW5zLWZvbnQtc3RhY2s7XG5cbi8vIENyZWF0ZSBmb250LWZpbGUgdmFyaWFibGVzXG4kc2Fucy10aGluICAgICAgICAgICAgOiBUaGluO1xuJHNhbnMtbGlnaHQgICAgICAgICAgIDogTGlnaHQ7XG4kc2Fucy1ib29rICAgICAgICAgICAgOiBSZWd1bGFyO1xuJHNhbnMtcmVndWxhciAgICAgICAgIDogUmVndWxhcjtcbiRzYW5zLW1lZGl1bSAgICAgICAgICA6IE1lZGl1bTtcbiRzYW5zLWJvbGQgICAgICAgICAgICA6IEJvbGQ7XG4vLyRzYW5zLXhib2xkICAgICAgICAgICA6IEV4dHJhYm9sZDtcbiRzYW5zLWJsYWNrICAgICAgICAgICA6IEJsYWNrO1xuLy8kZGlzcGxheSAgICAgICAgICAgICAgOiAjeyRkaXNwbGF5LWZvbnQtbmFtZX07XG5cbiRzYW5zLXJlZ3VsYXItaXRhbGljICA6IFJlZ3VsYXItaXRhbGljO1xuJHNhbnMtbWVkaXVtLWl0YWxpYyAgIDogTWVkaXVtLWl0YWxpYztcblxuXG5cbi8vIE1ha2UgYWxsIGZvbnQgZmlsZXMgYXZhaWxhYmxlXG4vLyBNaXhpbiBvcHRpb25zOiAkZm9udC1mYW1pbHksICRmaWxlLXBhdGgsICR3ZWlnaHQsICRzdHlsZSwgJGZvcm1hdHNcbi8vIFBzLiBUaGlzIGJlbG93IHByaW50cyBhbiB1bndhbnRlZCBzcGFjZSBiZXR3ZWVuIHRoZSBwYXRoIHZhciBhbmQgdGhlIGZvbnQgdmFyOlxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLXRoaW4sIGpvaW4oJGZvbnRzLXBhdGgsJHNhbnMtdGhpbikgKTtcblxuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLXRoaW4sICcjeyRmb250cy1wYXRofSN7JHNhbnMtdGhpbn0nICk7XG5AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtbGlnaHQsICcjeyRmb250cy1wYXRofSN7JHNhbnMtbGlnaHR9JyApO1xuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLWJvb2ssICcjeyRmb250cy1wYXRofSN7JHNhbnMtYm9va30nICk7XG5AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtcmVndWxhciwgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy1yZWd1bGFyfScgKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy1tZWRpdW0sICcjeyRmb250cy1wYXRofSN7JHNhbnMtbWVkaXVtfScgKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy1ib2xkLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLWJvbGR9JyApO1xuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLWJsYWNrLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLWJsYWNrfScgKTtcblxuLy8gVW51c2VkLCBzbyBhcHBseSBhIGRlZmF1bHQgdG8gYXZvaWQgZ3VscCBmdWNrdXBzXG4vL0BpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy14Ym9sZCwgICAnI3skZm9udHMtcGF0aH0jeyRzYW5zLXhib2xkfScgKTtcbi8vQGluY2x1ZGUgZm9udC1mYWNlKCRkaXNwbGF5LCAnI3skZm9udHMtcGF0aH0jeyRkaXNwbGF5fScgKTtcbi8vQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLXJlZ3VsYXItaXRhbGljLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLXJlZ3VsYXItaXRhbGljfScgKTtcblxuXG4vLyBBcHBseSBmb250LWZpbGUgdmFyaWFibGVzIHRvIGEgZm9udC1zdGFjay5cbi8vIFdlIG9ubHkgdXNlIHRoZXNlIHZhcmlhYmxlcyBpbiBvdXIgY2xhc3Nlcy5cblxuJGZvbnQtdGV4dC10aGluICAgICAgIDogam9pbigkc2Fucy10aGluLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtbGlnaHQgICAgICA6IGpvaW4oJHNhbnMtbGlnaHQsICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtdGV4dC1ib29rICAgICAgIDogam9pbigkc2Fucy1ib29rLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtcmVndWxhciAgICA6IGpvaW4oJHNhbnMtcmVndWxhciwgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LXJlZ3VsYXItaSAgOiBqb2luKCRzYW5zLXJlZ3VsYXIsICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtdGV4dC1tZWRpdW0gICAgIDogam9pbigkc2Fucy1tZWRpdW0sICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtdGV4dC1tZWRpdW0taSAgIDogam9pbigkc2Fucy1tZWRpdW0taXRhbGljLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtYm9sZCAgICAgICA6IGpvaW4oJHNhbnMtYm9sZCwgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LXhib2xkICAgICAgOiAkZm9udC10ZXh0LXJlZ3VsYXI7XG4kZm9udC10ZXh0LWJsYWNrICAgICAgOiBqb2luKCRzYW5zLWJsYWNrLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtcmVndWxhci1pICA6ICRmb250LXRleHQtcmVndWxhcjtcbiRmb250LWRpc3BsYXkgICAgICAgICA6ICRmb250LXRleHQtcmVndWxhcjtcblxuLy8gVW51c2VkLCBzbyBhcHBseSBhIGRlZmF1bHQgdG8gYXZvaWQgZ3VscCBmdWNrdXBzXG4vLyRmb250LXNhbnMteGJvbGQgICAgICA6IGpvaW4oJHNhbnMteGJvbGQsICRtYWluLWZvbnQtc3RhY2spO1xuLy8kZm9udC1zYW5zLXJlZ3VsYXItaSAgOiBqb2luKCRzYW5zLXJlZ3VsYXItaXRhbGljLCAkbWFpbi1mb250LXN0YWNrKTtcbi8vJGZvbnQtZGlzcGxheSAgICAgICAgIDogam9pbigkZGlzcGxheSwgJGRpc3BsYXktZm9udC1zdGFjayk7XG5cblxuXG4vLyBPYmplY3QvY29tcG9uZW50IGRlZmF1bHQgZm9udHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRmb250cy1wYXRoLTIgICAgICAgICAgIDogJy9hc3NldHMvZm9udHMyLyc7XG4kc2VyaWYgICAgICAgICAgICAgICAgICA6IHJlZ3VsYXJTZXJpZjtcblxuQGluY2x1ZGUgZm9udC1mYWNlKCRzZXJpZiwgJyN7JGZvbnRzLXBhdGgtMn0jeyRzZXJpZn0nICk7XG5cbiRmb250LXNlcmlmICAgICAgICAgICAgIDogam9pbigkc2VyaWYsICRzZXJpZi1mb250LXN0YWNrKTtcblxuXG5cbi8vIE9iamVjdC9jb21wb25lbnQgZGVmYXVsdCBmb250c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGZvbnQtYnV0dG9uICAgICAgICAgICA6ICRmb250LXRleHQtYm9sZDtcblxuXG4vLyBTdWl0IGJyZWFrcG9pbnQgc3dpdGNoZXNcbi8vIFJlOiAnIWRlZmF1bHQnLiBpZiB0aGUgdmFyaWFibGUgaGFzIGFscmVhZHkgYmVlbiBhc3NpZ25lZCB0bywgaXQgd29u4oCZdCBiZVxuLy8gcmUtYXNzaWduZWQsIGJ1dCBpZiBpdCBkb2VzbuKAmXQgaGF2ZSBhIHZhbHVlIHlldCwgaXQgd2lsbCBiZSBnaXZlbiBvbmUuXG4vLyBTZWU6IGh0dHA6Ly9zYXNzLWxhbmcuY29tL2RvY3VtZW50YXRpb24vZmlsZS5TQVNTX1JFRkVSRU5DRS5odG1sI3ZhcmlhYmxlX2RlZmF1bHRzX1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJHN1aXQtdGV4dC1icmVha3BvaW50cyAgICAgIDogZmFsc2UgIWRlZmF1bHQ7XG4kc3VpdC1mbGV4LWJyZWFrcG9pbnRzICAgICAgOiBmYWxzZSAhZGVmYXVsdDtcbiRzdWl0LWZsZXhlbWJlZC1icmVha3BvaW50cyA6IGZhbHNlICFkZWZhdWx0O1xuJHN1aXQtZ3JpZC1icmVha3BvaW50cyAgICAgIDogdHJ1ZSAhZGVmYXVsdDtcbiRzdWl0LXNpemUtYnJlYWtwb2ludHMgICAgICA6IHRydWUgIWRlZmF1bHQ7XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgU1VJVCBTSVpFXG4vLyAgIFZlcnNpb24gMS4wLjkgMTYwNjI5XG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvdXRpbHMtc2l6ZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBBUElcbi8vIHUtc2l6ZUZpbGxcbi8vIHUtc2l6ZUZpbGxBbHRcbi8vIHUtc2l6ZUZpdFxuLy8gdS1zaXplRnVsbFxuLy8gdS1zaXplWG9mMlxuLy8gdS1zaXplWG9mM1xuLy8gdS1zaXplWG9mNFxuLy8gdS1zaXplWG9mNVxuLy8gdS1zaXplWG9mNlxuLy8gdS1zaXplWG9mOFxuLy8gdS1zaXplWG9mMTBcbi8vIHUtc2l6ZVhvZjEyXG5cblxuLyoqXG4gKiBAZGVmaW5lIHV0aWxpdGllc1xuICogU2l6aW5nIHV0aWxpdGllc1xuICovXG5cbi8qIFByb3BvcnRpb25hbCB3aWR0aHNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogU3BlY2lmeSB0aGUgcHJvcG9ydGlvbmFsIHdpZHRoIG9mIGFuIG9iamVjdC5cbiAqIEludGVudGlvbmFsIHJlZHVuZGFuY3kgYnVpbGQgaW50byBlYWNoIHNldCBvZiB1bml0IGNsYXNzZXMuXG4gKiBTdXBwb3J0czogMiwgMywgNCwgNSwgNiwgOCwgMTAsIDEyIHBhcnRcbiAqXG4gKiAxLiBVc2UgYGZsZXgtYmFzaXM6IGF1dG9gIHdpdGggYSB3aWR0aCB0byBhdm9pZCBib3gtc2l6aW5nIGJ1ZyBpbiBJRTEwLzExXG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbE1EXG4gKi9cblxuW2NsYXNzKj1cInUtc2l6ZVwiXSB7XG4gIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDtcbiAgLyogMSAqL1xufVxuXG4udS1zaXplMW9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mMTAge1xuICB3aWR0aDogMTAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxb2Y4IHtcbiAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxb2Y2LFxuLnUtc2l6ZTJvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mNSxcbi51LXNpemUyb2YxMCB7XG4gIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTFvZjQsXG4udS1zaXplMm9mOCxcbi51LXNpemUzb2YxMiB7XG4gIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTNvZjEwIHtcbiAgd2lkdGg6IDMwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mMyxcbi51LXNpemUyb2Y2LFxuLnUtc2l6ZTRvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAzKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplM29mOCB7XG4gIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMm9mNSxcbi51LXNpemU0b2YxMCB7XG4gIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTVvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTFvZjIsXG4udS1zaXplMm9mNCxcbi51LXNpemUzb2Y2LFxuLnUtc2l6ZTRvZjgsXG4udS1zaXplNW9mMTAsXG4udS1zaXplNm9mMTIge1xuICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU3b2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUzb2Y1LFxuLnUtc2l6ZTZvZjEwIHtcbiAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplNW9mOCB7XG4gIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMm9mMyxcbi51LXNpemU0b2Y2LFxuLnUtc2l6ZThvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplN29mMTAge1xuICB3aWR0aDogNzAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUzb2Y0LFxuLnUtc2l6ZTZvZjgsXG4udS1zaXplOW9mMTIge1xuICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU0b2Y1LFxuLnUtc2l6ZThvZjEwIHtcbiAgd2lkdGg6IDgwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplNW9mNixcbi51LXNpemUxMG9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU3b2Y4IHtcbiAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU5b2YxMCB7XG4gIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTExb2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50O1xufVxuXG4vKiBJbnRyaW5zaWMgd2lkdGhzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIE1ha2UgYW4gZWxlbWVudCBzaHJpbmsgd3JhcCBpdHMgY29udGVudC5cbiAqL1xuXG4udS1zaXplRml0IHtcbiAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIE1ha2UgYW4gZWxlbWVudCBmaWxsIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gKlxuICogMS4gQmUgZXhwbGljaXQgdG8gd29yayBhcm91bmQgSUUxMCBidWcgd2l0aCBzaG9ydGhhbmQgZmxleFxuICogICAgaHR0cDovL2dpdC5pby92bGxDN1xuICogMi4gSUUxMCBpZ25vcmVzIHByZXZpb3VzIGBmbGV4LWJhc2lzYCB2YWx1ZS4gU2V0dGluZyBhZ2FpbiBoZXJlIGZpeGVzXG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbE10XG4gKi9cblxuLnUtc2l6ZUZpbGwge1xuICBmbGV4OiAxIDEgMCUgIWltcG9ydGFudDsgLyogMSAqL1xuICBmbGV4LWJhc2lzOiAwJSAhaW1wb3J0YW50OyAvKiAyICovXG59XG5cbi8qKlxuICogQW4gYWx0ZXJuYXRpdmUgbWV0aG9kIHRvIG1ha2UgYW4gZWxlbWVudCBmaWxsIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gKiBEaXN0cmlidXRlcyBzcGFjZSBiYXNlZCBvbiB0aGUgaW5pdGlhbCB3aWR0aCBhbmQgaGVpZ2h0IG9mIHRoZSBlbGVtZW50XG4gKlxuICogaHR0cDovL3d3dy53My5vcmcvVFIvY3NzLWZsZXhib3gvaW1hZ2VzL3JlbC12cy1hYnMtZmxleC5zdmdcbiAqL1xuXG4udS1zaXplRmlsbEFsdCB7XG4gIGZsZXg6IDEgMSBhdXRvICFpbXBvcnRhbnQ7XG4gIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBNYWtlIGFuIGVsZW1lbnQgdGhlIHdpZHRoIG9mIGl0cyBwYXJlbnQuXG4gKi9cblxuLnUtc2l6ZUZ1bGwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94ICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cblxuXG5cbi8vIEF0IG1lZGlhLXF1ZXJpZXMuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AaWYgKCRzdWl0LXNpemUtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdFtjbGFzcyo9XCJ1LSN7JGJyZWFrcG9pbnR9LXNpemVcIl0ge1xuICAgIFx0XHQgIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUxb2YxMiB7XG4gICAgXHRcdCAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAxMikgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUxb2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDEwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjgge1xuICAgIFx0XHQgIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjYsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2YxMiB7XG4gICAgXHRcdCAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjUsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDIwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjQsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2Y4LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplM29mMTIge1xuICAgIFx0XHQgIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUzb2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDMwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjMsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2Y2LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplNG9mMTIge1xuICAgIFx0XHQgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUzb2Y4IHtcbiAgICBcdFx0ICB3aWR0aDogMzcuNSUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2Y1LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplNG9mMTAge1xuICAgIFx0XHQgIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU1b2YxMiB7XG4gICAgXHRcdCAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUxb2YyLFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplMm9mNCxcbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTNvZjYsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU0b2Y4LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplNW9mMTAsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU2b2YxMiB7XG4gICAgXHRcdCAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTdvZjEyIHtcbiAgICBcdFx0ICB3aWR0aDogY2FsYygxMDAlICogNyAvIDEyKSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTNvZjUsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU2b2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTVvZjgge1xuICAgIFx0XHQgIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTJvZjMsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU0b2Y2LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplOG9mMTIge1xuICAgIFx0XHQgIHdpZHRoOiBjYWxjKDEwMCUgKiAyIC8gMykgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU3b2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDcwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTNvZjQsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU2b2Y4LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplOW9mMTIge1xuICAgIFx0XHQgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU0b2Y1LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplOG9mMTAge1xuICAgIFx0XHQgIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU1b2Y2LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplMTBvZjEyIHtcbiAgICBcdFx0ICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7XG4gICAgXHRcdH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplN29mOCB7XG4gICAgXHRcdCAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7XG4gICAgXHRcdH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplOW9mMTAge1xuICAgIFx0XHQgIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUxMW9mMTIge1xuICAgIFx0XHQgIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG4gICAgXHR9XG4gICAgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuXG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvdjQtZGV2L3Njc3MvbWl4aW5zL19icmVha3BvaW50cy5zY3NzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEJyZWFrcG9pbnRzIGFyZSBkZWZpbmVkIGFzIGEgbWFwIG9mIChuYW1lOiBtaW5pbXVtIHdpZHRoKSxcbi8vIG9yZGVyIGZyb20gc21hbGwgdG8gbGFyZ2U6XG4vLyAgICh4czogMCwgc206IDU0NHB4LCBtZDogNzY4cHgpXG4vLyBUaGUgbWFwIGRlZmluZWQgaW4gdGhlIGAkZ3JpZC1icmVha3BvaW50c2AgZ2xvYmFsIHZhcmlhYmxlXG4vLyBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuXG5cbi8vIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICh4czogMCwgc206IDU0NHB4LCBtZDogNzY4cHgpKVxuLy8gICAgbWRcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgJGJyZWFrcG9pbnQtbmFtZXM6ICh4cyBzbSBtZCkpXG4vLyAgICBtZFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbmV4dCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cywgJGJyZWFrcG9pbnQtbmFtZXM6IG1hcC1rZXlzKCRicmVha3BvaW50cykpIHtcblx0JG46IGluZGV4KCRicmVha3BvaW50LW5hbWVzLCAkbmFtZSk7XG5cdEByZXR1cm4gaWYoJG4gPCBsZW5ndGgoJGJyZWFrcG9pbnQtbmFtZXMpLCBudGgoJGJyZWFrcG9pbnQtbmFtZXMsICRuICsgMSksIG51bGwpO1xufVxuXG4vLyBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG4vLyAgICA+PiBicmVha3BvaW50LW1pbihzbSwgKHhzOiAwLCBzbTogNTQ0cHgsIG1kOiA3NjhweCkpXG4vLyAgICA1NDRweFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG5cdCRtaW46IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XG5cdEByZXR1cm4gaWYoJG1pbiAhPSAwLCAkbWluLCBudWxsKTtcbn1cblxuLy8gTWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBOdWxsIGZvciB0aGUgbGFyZ2VzdCAobGFzdCkgYnJlYWtwb2ludC5cbi8vIFRoZSBtYXhpbXVtIHZhbHVlIGlzIGNhbGN1bGF0ZWQgYXMgdGhlIG1pbmltdW0gb2YgdGhlIG5leHQgb25lIGxlc3MgMC4xLlxuLy8gICAgPj4gYnJlYWtwb2ludC1tYXgoc20sICh4czogMCwgc206IDU0NHB4LCBtZDogNzY4cHgpKVxuLy8gICAgNzY3cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHQkbmV4dDogYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuXHRAcmV0dXJuIGlmKCRuZXh0LCBicmVha3BvaW50LW1pbigkbmV4dCwgJGJyZWFrcG9pbnRzKSAtIDFweCwgbnVsbCk7XG59XG5cbi8vIE1lZGlhIG9mIGF0IGxlYXN0IHRoZSBtaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgd2lkZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHQkbWluOiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcblx0QGlmICRtaW4ge1xuXHRcdEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH0gQGVsc2Uge1xuXHRcdEBjb250ZW50O1xuXHR9XG59XG5cbi8vIE1lZGlhIG9mIGF0IG1vc3QgdGhlIG1heGltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBsYXJnZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHQkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcblx0QGlmICRtYXgge1xuXHRcdEBtZWRpYSAobWF4LXdpZHRoOiAkbWF4KSB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH0gQGVsc2Uge1xuXHRcdEBjb250ZW50O1xuXHR9XG59XG5cbi8vIE1lZGlhIGJldHdlZW4gdGhlIGJyZWFrcG9pbnQncyBtaW5pbXVtIGFuZCBtYXhpbXVtIHdpZHRocy5cbi8vIE5vIG1pbmltdW0gZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LCBhbmQgbm8gbWF4aW11bSBmb3IgdGhlIGxhcmdlc3Qgb25lLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IG9ubHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQsIG5vdCB2aWV3cG9ydHMgYW55IHdpZGVyIG9yIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtb25seSgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHMpIHtcblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50cykge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG59XG5cbi8vIE1lZGlhIHRoYXQgc3BhbnMgbXVsdGlwbGUgYnJlYWtwb2ludCB3aWR0aHMuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgYmV0d2VlbiB0aGUgbWluIGFuZCBtYXggYnJlYWtwb2ludHNcbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWJldHdlZW4oJGxvd2VyLCAkdXBwZXIsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbG93ZXIsICRicmVha3BvaW50cykge1xuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkdXBwZXIsICRicmVha3BvaW50cykge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgU1VJVCBGTEVYQk9YXG4vLyAgIFZlcnNpb24gMS4xLjEgMTYwNjI5XG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvdXRpbHMtZmxleFxuLy8gICBTZWU6IGh0dHA6Ly9zdWl0Y3NzLmdpdGh1Yi5pby91dGlscy1mbGV4L3Rlc3QvXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEFQSVxuLy8gZmxleC1jb250YWluZXJcbi8vIC0gdS1mbGV4XG4vLyAtIHUtZmxleElubGluZVxuLy9cbi8vIGZsZXgtZGlyZWN0aW9uXG4vLyAtIHUtZmxleFJvd1xuLy8gLSB1LWZsZXhSb3dSZXZlcnNlXG4vLyAtIHUtZmxleENvbFxuLy8gLSB1LWZsZXhDb2xSZXZlcnNlXG4vL1xuLy8gZmxleC13cmFwXG4vLyAtIHUtZmxleFdyYXBcbi8vIC0gdS1mbGV4Tm9XcmFwXG4vLyAtIHUtZmxleFdyYXBSZXZlcnNlXG4vL1xuLy8ganVzdGlmeS1jb250ZW50XG4vLyAtIHUtZmxleEp1c3RpZnlTdGFydFxuLy8gLSB1LWZsZXhKdXN0aWZ5RW5kXG4vLyAtIHUtZmxleEp1c3RpZnlDZW50ZXJcbi8vIC0gdS1mbGV4SnVzdGlmeUJldHdlZW5cbi8vIC0gdS1mbGV4SnVzdGlmeUFyb3VuZFxuLy9cbi8vIGFsaWduLWl0ZW1zXG4vLyAtIHUtZmxleEFsaWduSXRlbXNTdHJldGNoXG4vLyAtIHUtZmxleEFsaWduSXRlbXNTdGFydFxuLy8gLSB1LWZsZXhBbGlnbkl0ZW1zRW5kXG4vLyAtIHUtZmxleEFsaWduSXRlbXNDZW50ZXJcbi8vIC0gdS1mbGV4QWxpZ25JdGVtc0Jhc2VsaW5lXG4vL1xuLy8gYWxpZ24tY29udGVudFxuLy8gLSB1LWZsZXhBbGlnbkNvbnRlbnRTdGFydFxuLy8gLSB1LWZsZXhBbGlnbkNvbnRlbnRFbmRcbi8vIC0gdS1mbGV4QWxpZ25Db250ZW50Q2VudGVyXG4vLyAtIHUtZmxleEFsaWduQ29udGVudFN0cmV0Y2hcbi8vIC0gdS1mbGV4QWxpZ25Db250ZW50QmV0d2VlblxuLy8gLSB1LWZsZXhBbGlnbkNvbnRlbnRBcm91bmRcbi8vXG4vLyBhbGlnbi1zZWxmXG4vLyAtIHUtZmxleEFsaWduU2VsZlN0YXJ0XG4vLyAtIHUtZmxleEFsaWduU2VsZkVuZFxuLy8gLSB1LWZsZXhBbGlnblNlbGZDZW50ZXJcbi8vIC0gdS1mbGV4QWxpZ25TZWxmU3RyZXRjaFxuLy8gLSB1LWZsZXhBbGlnblNlbGZBdXRvXG4vL1xuLy8gb3JkZXJcbi8vIC0gdS1mbGV4T3JkZXJGaXJzdFxuLy8gLSB1LWZsZXhPcmRlckxhc3Rcbi8vIC0gdS1mbGV4T3JkZXJOb25lXG4vL1xuLy8gZmxleC1ncm93XG4vLyAtIHUtZmxleEdyb3cxXG4vLyAtIHUtZmxleEdyb3cyXG4vLyAtIHUtZmxleEdyb3czXG4vLyAtIHUtZmxleEdyb3c0XG4vLyAtIHUtZmxleEdyb3c1XG4vL1xuLy8gQWxpZ25pbmcgd2l0aCBhdXRvIG1hcmdpbnNcbi8vIC0gdS1mbGV4RXhwYW5kXG4vLyAtIHUtZmxleEV4cGFuZFRvcFxuLy8gLSB1LWZsZXhFeHBhbmRSaWdodFxuLy8gLSB1LWZsZXhFeHBhbmRCb3R0b21cbi8vIC0gdS1mbGV4RXhwYW5kTGVmdFxuXG5cbi8qKiBAZGVmaW5lIHV0aWxpdGllcyAqL1xuXG4vKiBBcHBsaWVzIHRvIGZsZXggY29udGFpbmVyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvbnRhaW5lclxuICovXG5cbi51LWZsZXgge1xuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhJbmxpbmUge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIERpcmVjdGlvbjogcm93XG4gKi9cblxuLnUtZmxleFJvdyB7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3cgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleFJvd1JldmVyc2Uge1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2UgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBEaXJlY3Rpb246IGNvbHVtblxuICovXG5cbi51LWZsZXhDb2wge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhDb2xSZXZlcnNlIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogV3JhcFxuICovXG5cbi51LWZsZXhXcmFwIHtcbiAgZmxleC13cmFwOiB3cmFwICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhOb1dyYXAge1xuICBmbGV4LXdyYXA6IG5vd3JhcCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4V3JhcFJldmVyc2Uge1xuICBmbGV4LXdyYXA6IHdyYXAtcmV2ZXJzZSAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEFsaWduIGl0ZW1zIGFsb25nIHRoZSBtYWluIGF4aXMgb2YgdGhlIGN1cnJlbnQgbGluZSBvZiB0aGUgZmxleCBjb250YWluZXJcbiAqL1xuXG4udS1mbGV4SnVzdGlmeVN0YXJ0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhKdXN0aWZ5RW5kIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4SnVzdGlmeUNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhKdXN0aWZ5QmV0d2VlbiB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4SnVzdGlmeUFyb3VuZCB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogQWxpZ24gaXRlbXMgaW4gdGhlIGNyb3NzIGF4aXMgb2YgdGhlIGN1cnJlbnQgbGluZSBvZiB0aGUgZmxleCBjb250YWluZXJcbiAqIFNpbWlsYXIgdG8gYGp1c3RpZnktY29udGVudGAgYnV0IGluIHRoZSBwZXJwZW5kaWN1bGFyIGRpcmVjdGlvblxuICovXG5cbi51LWZsZXhBbGlnbkl0ZW1zU3RhcnQge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4QWxpZ25JdGVtc0VuZCB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4QWxpZ25JdGVtc0NlbnRlciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduSXRlbXNTdHJldGNoIHtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2ggIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduSXRlbXNCYXNlbGluZSB7XG4gIGFsaWduLWl0ZW1zOiBiYXNlbGluZSAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEFsaWducyBpdGVtcyB3aXRoaW4gdGhlIGZsZXggY29udGFpbmVyIHdoZW4gdGhlcmUgaXMgZXh0cmFcbiAqIHNwYWNlIGluIHRoZSBjcm9zcy1heGlzXG4gKlxuICogSGFzIG5vIGVmZmVjdCB3aGVuIHRoZXJlIGlzIG9ubHkgb25lIGxpbmUgb2YgZmxleCBpdGVtcy5cbiAqL1xuXG4udS1mbGV4QWxpZ25Db250ZW50U3RhcnQge1xuICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnbkNvbnRlbnRFbmQge1xuICBhbGlnbi1jb250ZW50OiBmbGV4LWVuZCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4QWxpZ25Db250ZW50Q2VudGVyIHtcbiAgYWxpZ24tY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnbkNvbnRlbnRTdHJldGNoIHtcbiAgYWxpZ24tY29udGVudDogc3RyZXRjaCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4QWxpZ25Db250ZW50QmV0d2VlbiB7XG4gIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduQ29udGVudEFyb3VuZCB7XG4gIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWFyb3VuZCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIDEuIFNldCB0aGUgZmxleC1zaHJpbmsgZGVmYXVsdCBleHBsaWNpdGx5IHRvIGZpeCBJRTEwIC0gaHR0cDovL2dpdC5pby92bGxDN1xuICovXG5cbi8qIHBvc3Rjc3MtYmVtLWxpbnRlcjogaWdub3JlICovXG5cbi51LWZsZXggPiAqLFxuLnUtZmxleElubGluZSA+ICoge1xuICBmbGV4LXNocmluazogMTsgLyogMSAqL1xufVxuXG4vKiBBcHBsaWVzIHRvIGZsZXggaXRlbXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogT3ZlcnJpZGUgZGVmYXVsdCBhbGlnbm1lbnQgb2Ygc2luZ2xlIGl0ZW0gd2hlbiBzcGVjaWZpZWQgYnkgYGFsaWduLWl0ZW1zYFxuICovXG5cbi51LWZsZXhBbGlnblNlbGZTdGFydCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduU2VsZkVuZCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnblNlbGZDZW50ZXIge1xuICBhbGlnbi1zZWxmOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduU2VsZlN0cmV0Y2gge1xuICBhbGlnbi1zZWxmOiBzdHJldGNoICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnblNlbGZCYXNlbGluZSB7XG4gIGFsaWduLXNlbGY6IGJhc2VsaW5lICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnblNlbGZBdXRvIHtcbiAgYWxpZ24tc2VsZjogYXV0byAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIENoYW5nZSBvcmRlciB3aXRob3V0IGVkaXRpbmcgdW5kZXJseWluZyBIVE1MXG4gKi9cblxuLnUtZmxleE9yZGVyRmlyc3Qge1xuICBvcmRlcjogLTEgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleE9yZGVyTGFzdCB7XG4gIG9yZGVyOiAxICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhPcmRlck5vbmUge1xuICBvcmRlcjogMCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIFNwZWNpZnkgdGhlIGZsZXggZ3JvdyBmYWN0b3IsIHdoaWNoIGRldGVybWluZXMgaG93IG11Y2ggdGhlIGZsZXggaXRlbSB3aWxsXG4gKiBncm93IHJlbGF0aXZlIHRvIHRoZSByZXN0IG9mIHRoZSBmbGV4IGl0ZW1zIGluIHRoZSBmbGV4IGNvbnRhaW5lci5cbiAqXG4gKiBTdXBwb3J0cyAxLTUgcHJvcG9ydGlvbnNcbiAqXG4gKiAxLiBQcm92aWRlIGFsbCB2YWx1ZXMgdG8gYXZvaWQgSUUxMCBidWcgd2l0aCBzaG9ydGhhbmQgZmxleFxuICogICAgLSBodHRwOi8vZ2l0LmlvL3ZsbEM3XG4gKlxuICogICAgVXNlIGAwJWAgdG8gYXZvaWQgYnVnIGluIElFMTAvMTEgd2l0aCB1bml0bGVzcyBmbGV4IGJhc2lzLiBVc2luZyB0aGlzXG4gKiAgICBpbnN0ZWFkIG9mIGBhdXRvYCBhcyB0aGlzIG1hdGNoZXMgd2hhdCB0aGUgZGVmYXVsdCB3b3VsZCBiZSB3aXRoIGBmbGV4YFxuICogICAgc2hvcnRoYW5kIC0gaHR0cDovL2dpdC5pby92bGxXeFxuICovXG5cbi51LWZsZXhHcm93MSB7XG4gIGZsZXg6IDEgMSAwJSAhaW1wb3J0YW50OyAvKiAxICovXG59XG5cbi51LWZsZXhHcm93MiB7XG4gIGZsZXg6IDIgMSAwJSAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4R3JvdzMge1xuICBmbGV4OiAzIDEgMCUgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEdyb3c0IHtcbiAgZmxleDogNCAxIDAlICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhHcm93NSB7XG4gIGZsZXg6IDUgMSAwJSAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEFsaWduaW5nIHdpdGggYGF1dG9gIG1hcmdpbnNcbiAqIGh0dHA6Ly93d3cudzMub3JnL1RSL2Nzcy1mbGV4Ym94LTEvI2F1dG8tbWFyZ2luc1xuICovXG5cbi51LWZsZXhFeHBhbmQge1xuICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEV4cGFuZExlZnQge1xuICBtYXJnaW4tbGVmdDogYXV0byAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4RXhwYW5kUmlnaHQge1xuICBtYXJnaW4tcmlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEV4cGFuZFRvcCB7XG4gIG1hcmdpbi10b3A6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEV4cGFuZEJvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IGF1dG8gIWltcG9ydGFudDtcbn1cblxuXG5cblxuLy8gQXQgbWVkaWEtcXVlcmllcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AaWYgKCRzdWl0LWZsZXgtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXggICAgICAgICAgICAgICAgICAgIHsgZGlzcGxheTogZmxleCAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhJbmxpbmUgICAgICAgICAgICAgIHsgZGlzcGxheTogaW5saW5lLWZsZXggIWltcG9ydGFudDsgfVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhSb3cgICAgICAgICAgICAgICAgIHsgZmxleC1kaXJlY3Rpb246IHJvdyAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhSb3dSZXZlcnNlICAgICAgICAgIHsgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4Q29sICAgICAgICAgICAgICAgICB7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4gIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4Q29sUmV2ZXJzZSAgICAgICAgICB7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZSAhaW1wb3J0YW50OyB9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleFdyYXAgICAgICAgICAgICAgICAgeyBmbGV4LXdyYXA6IHdyYXAgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4Tm9XcmFwICAgICAgICAgICAgICB7IGZsZXgtd3JhcDogbm93cmFwICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleFdyYXBSZXZlcnNlICAgICAgICAgeyBmbGV4LXdyYXA6IHdyYXAtcmV2ZXJzZSAhaW1wb3J0YW50OyB9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEp1c3RpZnlTdGFydCAgICAgICAgeyBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4SnVzdGlmeUVuZCAgICAgICAgICB7IGp1c3RpZnktY29udGVudDogZmxleC1lbmQgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4SnVzdGlmeUNlbnRlciAgICAgICB7IGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEp1c3RpZnlCZXR3ZWVuICAgICAgeyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4SnVzdGlmeUFyb3VuZCAgICAgICB7IGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25JdGVtc0NlbnRlciAgICB7IGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25JdGVtc1N0cmV0Y2ggICB7IGFsaWduLWl0ZW1zOiBzdHJldGNoICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEFsaWduSXRlbXNCYXNlbGluZSAgeyBhbGlnbi1pdGVtczogYmFzZWxpbmUgIWltcG9ydGFudDsgfVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRTdGFydCAgIHsgYWxpZ24tY29udGVudDogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRFbmQgICAgIHsgYWxpZ24tY29udGVudDogZmxleC1lbmQgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25Db250ZW50Q2VudGVyICB7IGFsaWduLWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRTdHJldGNoIHsgYWxpZ24tY29udGVudDogc3RyZXRjaCAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRCZXR3ZWVuIHsgYWxpZ24tY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRBcm91bmQgIHsgYWxpZ24tY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25TZWxmU3RhcnQgICAgICB7IGFsaWduLXNlbGY6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25TZWxmRW5kICAgICAgICB7IGFsaWduLXNlbGY6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEFsaWduU2VsZkNlbnRlciAgICAgeyBhbGlnbi1zZWxmOiBjZW50ZXIgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25TZWxmU3RyZXRjaCAgICB7IGFsaWduLXNlbGY6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25TZWxmQmFzZWxpbmUgICB7IGFsaWduLXNlbGY6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEFsaWduU2VsZkF1dG8gICAgICAgeyBhbGlnbi1zZWxmOiBhdXRvICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4T3JkZXJMYXN0ICAgICAgICAgICB7IG9yZGVyOiAxICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleE9yZGVyTm9uZSAgICAgICAgICAgeyBvcmRlcjogMCAhaW1wb3J0YW50OyB9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEdyb3cxICAgICAgICAgICAgICAgeyBmbGV4OiAxIDEgMCUgIWltcG9ydGFudDsgLyogMSAqLyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhHcm93MiAgICAgICAgICAgICAgIHsgZmxleDogMiAxIDAlICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEdyb3czICAgICAgICAgICAgICAgeyBmbGV4OiAzIDEgMCUgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4R3JvdzQgICAgICAgICAgICAgICB7IGZsZXg6IDQgMSAwJSAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhHcm93NSAgICAgICAgICAgICAgIHsgZmxleDogNSAxIDAlICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4RXhwYW5kICAgICAgICAgICAgICB7IG1hcmdpbjogYXV0byAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhFeHBhbmRMZWZ0ICAgICAgICAgIHsgbWFyZ2luLWxlZnQ6IGF1dG8gIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4RXhwYW5kUmlnaHQgICAgICAgICB7IG1hcmdpbi1yaWdodDogYXV0byAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhFeHBhbmRUb3AgICAgICAgICAgIHsgbWFyZ2luLXRvcDogYXV0byAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhFeHBhbmRCb3R0b20gICAgICAgIHsgbWFyZ2luLWJvdHRvbTogYXV0byAhaW1wb3J0YW50OyB9XG4gICAgXHR9XG4gICAgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIFNVSVQgVEVYVCBVVElMU1xuLy8gICBWZXJzaW9uIDEuMC4wIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL3V0aWxzLXRleHRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQVBJXG4vLyB1LXRleHRCcmVha1xuLy8gdS10ZXh0Q2VudGVyXG4vLyB1LXRleHRDb2xvckluaGVyaXRcbi8vIHUtdGV4dExlZnRcbi8vIHUtdGV4dEtyZW5cbi8vIHUtdGV4dE5vV3JhcFxuLy8gdS10ZXh0UmlnaHRcbi8vIHUtdGV4dFRydW5jYXRlXG5cbi8qKlxuICogV29yZCBicmVha2luZ1xuICpcbiAqIEJyZWFrIHN0cmluZ3Mgd2hlbiB0aGVpciBsZW5ndGggZXhjZWVkcyB0aGUgd2lkdGggb2YgdGhlaXIgY29udGFpbmVyLlxuICovXG5cbi51LXRleHRCcmVhayB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEhvcml6b250YWwgdGV4dCBhbGlnbm1lbnRcbiAqL1xuXG4udS10ZXh0Q2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi51LXRleHRMZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O1xufVxuXG4udS10ZXh0UmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEluaGVyaXQgdGhlIGFuY2VzdG9yJ3MgdGV4dCBjb2xvci5cbiAqL1xuXG4udS10ZXh0SW5oZXJpdENvbG9yIHtcbiAgY29sb3I6IGluaGVyaXQgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBFbmFibGVzIGZvbnQga2VybmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKiBodHRwOi8vYmxvZy50eXBla2l0LmNvbS8yMDE0LzAyLzA1L2tlcm5pbmctb24tdGhlLXdlYi9cbiAqXG4gKiAxLiBDaHJvbWUgKG5vdCBXaW5kb3dzKSwgRmlyZWZveCwgSUUgMTArXG4gKiAyLiBTYWZhcmkgNyBhbmQgZnV0dXJlIGJyb3dzZXJzXG4gKiAzLiBDaHJvbWUgKG5vdCBXaW5kb3dzKSwgRmlyZWZveCwgU2FmYXJpIDYrLCBpT1MsIEFuZHJvaWRcbiAqL1xuXG4udS10ZXh0S2VybiB7XG4gIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuXCIgMTsgLyogMSAqL1xuICBmb250LWtlcm5pbmc6IG5vcm1hbDsgLyogMiAqL1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyAvKiAzICovXG59XG5cbi8qKlxuICogUHJldmVudCB3aGl0ZXNwYWNlIHdyYXBwaW5nXG4gKi9cblxuLnUtdGV4dE5vV3JhcCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBUZXh0IHRydW5jYXRpb25cbiAqXG4gKiBQcmV2ZW50IHRleHQgZnJvbSB3cmFwcGluZyBvbnRvIG11bHRpcGxlIGxpbmVzLCBhbmQgdHJ1bmNhdGUgd2l0aCBhblxuICogZWxsaXBzaXMuXG4gKlxuICogMS4gRW5zdXJlIHRoYXQgdGhlIG5vZGUgaGFzIGEgbWF4aW11bSB3aWR0aCBhZnRlciB3aGljaCB0cnVuY2F0aW9uIGNhblxuICogICAgb2NjdXIuXG4gKiAyLiBGaXggZm9yIElFIDgvOSBpZiBgd29yZC13cmFwOiBicmVhay13b3JkYCBpcyBpbiBlZmZlY3Qgb24gYW5jZXN0b3JcbiAqICAgIG5vZGVzLlxuICovXG5cbi51LXRleHRUcnVuY2F0ZSB7XG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDtcbiAgd29yZC13cmFwOiBub3JtYWwgIWltcG9ydGFudDsgLyogMiAqL1xufVxuXG5cblxuLy8gQXQgbWVkaWEtcXVlcmllcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBpZiAoJHN1aXQtdGV4dC1icmVha3BvaW50cyA9PSB0cnVlKSB7XG4gICAgQGVhY2ggJGJyZWFrcG9pbnQgaW4gbWFwLWtleXMoJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgICBcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGJyZWFrcG9pbnQpIHtcbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tdGV4dEJyZWFrIHsgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tdGV4dENlbnRlciB7IHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXRleHRMZWZ0IHsgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXRleHRSaWdodCB7IHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tdGV4dE5vV3JhcCB7IHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDsgfVxuICAgIFx0fVxuICAgIH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTVUlUIEJVVFRPTlxuLy8gICBWZXJzaW9uIDUuMC4wIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2NvbXBvbmVudHMtYnV0dG9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEFQSVxuLy8gQnV0dG9uXG4vLyBCdXR0b24uaXMtZGlzYWJsZWRcblxuXG4vKiogQGRlZmluZSBCdXR0b24gKi9cblxuLy8gOnJvb3Qge1xuLy8gICAtLUJ1dHRvbi1ib3JkZXItY29sb3I6IGN1cnJlbnRjb2xvcjtcbi8vICAgLS1CdXR0b24tYm9yZGVyLXdpZHRoOiAxcHg7XG4vLyAgIC0tQnV0dG9uLWNvbG9yOiBpbmhlcml0O1xuLy8gICAtLUJ1dHRvbi1kaXNhYmxlZC1vcGFjaXR5OiAwLjY7XG4vLyAgIC0tQnV0dG9uLWZvbnQ6IGluaGVyaXQ7XG4vLyAgIC0tQnV0dG9uLXBhZGRpbmc6IDAuNGVtIDAuNzVlbTtcbi8vIH1cblxuJEJ1dHRvbjogKFxuXHRCdXR0b24tYm9yZGVyLWNvbG9yOiBjdXJyZW50Y29sb3IsXG5cdEJ1dHRvbi1ib3JkZXItd2lkdGg6IDFweCxcblx0QnV0dG9uLWNvbG9yOiBpbmhlcml0LFxuXHRCdXR0b24tZGlzYWJsZWQtb3BhY2l0eTogMC42LFxuXHRCdXR0b24tZm9udDogaW5oZXJpdCxcblx0QnV0dG9uLXBhZGRpbmc6IDAuNGVtIDAuNzVlbVxuKTtcblxuLyoqXG4gKiBUaGUgYnV0dG9uIGNsYXNzZXMgYXJlIGJlc3QgYXBwbGllZCB0byBsaW5rcyBhbmQgYnV0dG9ucy5cbiAqIFRoZXNlIGNvbXBvbmVudHMgY2FuIGJlIHVzZWQgaW4gZm9ybXMsIGFzIGNhbGxzIHRvIGFjdGlvbiwgb3IgYXMgcGFydCBvZiB0aGVcbiAqIGdlbmVyYWwgVUkgb2YgdGhlIHNpdGUvYXBwLlxuICovXG5cbi8qKlxuICogMS4gTm9ybWFsaXplIGBib3gtc2l6aW5nYCBhY3Jvc3MgYWxsIGVsZW1lbnRzIHRoYXQgdGhpcyBjb21wb25lbnQgY291bGQgYmVcbiAqICAgIGFwcGxpZWQgdG8uXG4gKiAyLiBJbmhlcml0IHRleHQgY29sb3IgZnJvbSBhbmNlc3Rvci5cbiAqIDMuIEluaGVyaXQgZm9udCBzdHlsZXMgZnJvbSBhbmNlc3Rvci5cbiAqIDQuIFByZXZlbnQgYnV0dG9uIHRleHQgZnJvbSBiZWluZyBzZWxlY3RhYmxlLlxuICovXG5cbi5CdXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWNvbG9yOiBtYXAtZmV0Y2goJEJ1dHRvbiwgQnV0dG9uLWJvcmRlci1jb2xvcik7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogbWFwLWZldGNoKCRCdXR0b24sIEJ1dHRvbi1ib3JkZXItd2lkdGgpO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBtYXAtZmV0Y2goJEJ1dHRvbiwgQnV0dG9uLWNvbG9yKTsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udDogbWFwLWZldGNoKCRCdXR0b24sIEJ1dHRvbi1mb250KTsgLyogMyAqL1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IG1hcC1mZXRjaCgkQnV0dG9uLCBCdXR0b24tcGFkZGluZyk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lOyAvKiA0ICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0K1xuICovXG5cbi5CdXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogV29yayBhcm91bmQgYSBGaXJlZm94L0lFIGJ1ZyB3aGVyZSB0aGUgdHJhbnNwYXJlbnQgYGJ1dHRvbmAgYmFja2dyb3VuZFxuICogcmVzdWx0cyBpbiBhIGxvc3Mgb2YgdGhlIGRlZmF1bHQgYGJ1dHRvbmAgZm9jdXMgc3R5bGVzLlxuICovXG5cbi5CdXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XG59XG5cbi8qKlxuICogVUkgc3RhdGVzXG4gKi9cblxuLkJ1dHRvbjpob3Zlcixcbi5CdXR0b246Zm9jdXMsXG4uQnV0dG9uOmFjdGl2ZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLkJ1dHRvbjpkaXNhYmxlZCxcbi5CdXR0b24uaXMtZGlzYWJsZWQge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIG9wYWNpdHk6IHZhcigtLUJ1dHRvbi1kaXNhYmxlZC1vcGFjaXR5KTtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTVUlUIEZMRVggRU1CRURcbi8vICAgVmVyc2lvbiAyLjAuNCAxNjA2Mjlcbi8vICAgU2VlOiBodHRwczovL2dpdGh1Yi5jb20vc3VpdGNzcy9jb21wb25lbnRzLWZsZXgtZW1iZWRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQVBJXG4vLyBGbGV4RW1iZWRcbi8vIEZsZXhFbWJlZC0tMmJ5MVxuLy8gRmxleEVtYmVkLS0zYnkxXG4vLyBGbGV4RW1iZWQtLTRieTNcbi8vIEZsZXhFbWJlZC0tMTZieTlcbi8vIEZsZXhFbWJlZC1pdGVtXG5cblxuLyoqIEBkZWZpbmUgRmxleEVtYmVkICovXG5cbi8qKlxuICogRmxleGlibGUgbWVkaWEgZW1iZWRzXG4gKlxuICogRm9yIHVzZSB3aXRoIG1lZGlhIGVtYmVkcyDigJMgc3VjaCBhcyB2aWRlb3MsIHNsaWRlc2hvd3MsIG9yIGV2ZW4gaW1hZ2VzIOKAk1xuICogdGhhdCBuZWVkIHRvIHJldGFpbiBhIHNwZWNpZmljIGFzcGVjdCByYXRpbyBidXQgYWRhcHQgdG8gdGhlIHdpZHRoIG9mIHRoZWlyXG4gKiBjb250YWluaW5nIGVsZW1lbnQuXG4gKlxuICogQmFzZWQgb246IGh0dHA6Ly9hbGlzdGFwYXJ0LmNvbS9hcnRpY2xlL2NyZWF0aW5nLWludHJpbnNpYy1yYXRpb3MtZm9yLXZpZGVvXG4gKi9cblxuLkZsZXhFbWJlZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi8qKlxuICogVGhlIGFzcGVjdC1yYXRpbyBoYWNrIGlzIGFwcGxpZWQgdG8gYW4gZW1wdHkgZWxlbWVudCBiZWNhdXNlIGl0IGFsbG93c1xuICogdGhlIGNvbXBvbmVudCB0byByZXNwZWN0IGBtYXgtaGVpZ2h0YC4gRGVmYXVsdCBhc3BlY3QgcmF0aW8gaXMgMToxLlxuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy1ib3R0b206IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiAzOjEgYXNwZWN0IHJhdGlvXG4gKi9cblxuLkZsZXhFbWJlZC1yYXRpby0tM2J5MSB7XG4gIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLyAzKTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogMjoxIGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTJieTEge1xuICBwYWRkaW5nLWJvdHRvbTogNTAlO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiAxNjo5IGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTE2Ynk5IHtcbiAgcGFkZGluZy1ib3R0b206IDU2LjI1JTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogNDozIGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTRieTMge1xuICBwYWRkaW5nLWJvdHRvbTogNzUlO1xufVxuXG4vKipcbiAqIEZpdCB0aGUgY29udGVudCB0byB0aGUgYXNwZWN0IHJhdGlvXG4gKi9cblxuLkZsZXhFbWJlZC1jb250ZW50IHtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuXG4vLyBBdCBtZWRpYS1xdWVyaWVzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQGlmICgkc3VpdC1mbGV4ZW1iZWQtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1GbGV4RW1iZWQtcmF0aW8tLTNieTEgeyBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC8gMyk7IH1cbiAgICBcdFx0LiN7JGJyZWFrcG9pbnR9LUZsZXhFbWJlZC1yYXRpby0tMmJ5MSB7IHBhZGRpbmctYm90dG9tOiA1MCU7IH1cbiAgICBcdFx0LiN7JGJyZWFrcG9pbnR9LUZsZXhFbWJlZC1yYXRpby0tMTZieTkgeyBwYWRkaW5nLWJvdHRvbTogNTYuMjUlOyB9XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1GbGV4RW1iZWQtcmF0aW8tLTRieTMgeyBwYWRkaW5nLWJvdHRvbTogNzUlOyB9XG4gICAgXHR9XG4gICAgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIFNVSVQgR1JJRFxuLy8gICBWZXJzaW9uIDMuMC4zIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2NvbXBvbmVudHMtZ3JpZFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBBUElcbi8vIEdyaWRcbi8vIEdyaWQtLWFsaWduQ2VudGVyXG4vLyBHcmlkLS1hbGlnblJpZ2h0XG4vLyBHcmlkLS1hbGlnbk1pZGRsZVxuLy8gR3JpZC0tYWxpZ25Cb3R0b21cbi8vIEdyaWQtLWZpdFxuLy8gR3JpZC0tZXF1YWxIZWlnaHRcbi8vIEdyaWQtY2VsbFxuLy8gR3JpZC1jZWxsLS1jZW50ZXJcblxuXG4vKiogQGRlZmluZSBHcmlkICovXG5cbi8vIDpyb290IHtcbi8vICAgLS1HcmlkLWd1dHRlci1zaXplOiAyMHB4O1xuLy8gfVxuXG4kR3JpZC1ndXR0ZXItc2l6ZTogc3BhY2UoMC43NSk7XG5cbi8qKlxuICogQ29yZSBncmlkIGNvbXBvbmVudFxuICpcbiAqIERPIE5PVCBhcHBseSBkaW1lbnNpb24gb3Igb2Zmc2V0IHV0aWxpdGllcyB0byB0aGUgYEdyaWRgIGVsZW1lbnQuIEFsbCBjZWxsXG4gKiB3aWR0aHMgYW5kIG9mZnNldHMgc2hvdWxkIGJlIGFwcGxpZWQgdG8gY2hpbGQgZ3JpZCBjZWxscy5cbiAqL1xuXG4vKiBHcmlkIGNvbnRhaW5lclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBbGwgY29udGVudCBtdXN0IGJlIGNvbnRhaW5lZCB3aXRoaW4gY2hpbGQgYEdyaWQtY2VsbGAgZWxlbWVudHMuXG4gKlxuICogMS4gQWNjb3VudCBmb3IgYnJvd3NlciBkZWZhdWx0cyBvZiBlbGVtZW50cyB0aGF0IG1pZ2h0IGJlIHRoZSByb290IG5vZGUgb2ZcbiAqICAgIHRoZSBjb21wb25lbnQuXG4gKi9cblxuLkdyaWQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBmbGV4OyAvKiAxICovXG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIG1hcmdpbjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAxICovXG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGNlbnRlciBhbGlnbiBhbGwgZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnbkNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiByaWdodCBhbGlnbiBhbGwgZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnblJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogbWlkZGxlLWFsaWduIGdyaWQgY2VsbHNcbiAqL1xuXG4uR3JpZC0tYWxpZ25NaWRkbGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiBib3R0b20tYWxpZ24gZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnbkJvdHRvbSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogYWxsb3cgY2VsbHMgdG8gZXF1YWwgZGlzdHJpYnV0ZSB3aWR0aFxuICpcbiAqIDEuIFByb3ZpZGUgYWxsIHZhbHVlcyB0byBhdm9pZCBJRTEwIGJ1ZyB3aXRoIHNob3J0aGFuZCBmbGV4XG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbEM3XG4gKlxuICogICAgVXNlIGAwJWAgdG8gYXZvaWQgYnVnIGluIElFMTAvMTEgd2l0aCB1bml0bGVzcyBmbGV4IGJhc2lzXG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbFd4XG4gKi9cblxuLkdyaWQtLWZpdCA+IC5HcmlkLWNlbGwge1xuICBmbGV4OiAxIDEgMCU7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBNb2RpZmllcjogYWxsIGNlbGxzIG1hdGNoIGhlaWdodCBvZiB0YWxsZXN0IGNlbGwgaW4gYSByb3dcbiAqL1xuXG4uR3JpZC0tZXF1YWxIZWlnaHQgPiAuR3JpZC1jZWxsIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogZ3V0dGVyc1xuICovXG5cbi5HcmlkLS13aXRoR3V0dGVyIHtcbiAgbWFyZ2luOiAwIGNhbGMoLTAuNSAqICN7JEdyaWQtZ3V0dGVyLXNpemV9KTtcbn1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCBjYWxjKDAuNSAqICN7JEdyaWQtZ3V0dGVyLXNpemV9KTtcbn1cblxuLyogR3JpZCBjZWxsXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIE5vIGV4cGxpY2l0IHdpZHRoIGJ5IGRlZmF1bHQuIFJlbHkgb24gY29tYmluaW5nIGBHcmlkLWNlbGxgIHdpdGggYSBkaW1lbnNpb25cbiAqIHV0aWxpdHkgb3IgYSBjb21wb25lbnQgY2xhc3MgdGhhdCBleHRlbmRzICdHcmlkJy5cbiAqXG4gKiAxLiBTZXQgZmxleCBpdGVtcyB0byBmdWxsIHdpZHRoIGJ5IGRlZmF1bHRcbiAqIDIuIEZpeCBpc3N1ZSB3aGVyZSBlbGVtZW50cyB3aXRoIG92ZXJmbG93IGV4dGVuZCBwYXN0IHRoZVxuICogICAgYEdyaWQtY2VsbGAgY29udGFpbmVyIC0gaHR0cHM6Ly9naXQuaW8vdnc1b0ZcbiAqL1xuXG4uR3JpZC1jZWxsIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgZmxleC1iYXNpczogMTAwJTsgLyogMSAqL1xuICBtaW4td2lkdGg6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBNb2RpZmllcjogaG9yaXpvbnRhbGx5IGNlbnRlciBvbmUgdW5pdFxuICogU2V0IGEgc3BlY2lmaWMgdW5pdCB0byBiZSBob3Jpem9udGFsbHkgY2VudGVyZWQuIERvZXNuJ3QgYWZmZWN0XG4gKiBhbnkgb3RoZXIgdW5pdHMuIENhbiBzdGlsbCBjb250YWluIGEgY2hpbGQgYEdyaWRgIG9iamVjdC5cbiAqL1xuXG4uR3JpZC1jZWxsLS1jZW50ZXIge1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuXG5cbi8vIEF0IG1lZGlhLXF1ZXJpZXMuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AaWYgKCRzdWl0LWdyaWQtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1HcmlkLS1hbGlnbkNlbnRlciAgeyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25SaWdodCAgIHsganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25NaWRkbGUgIHsgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25Cb3R0b20gIHsgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1HcmlkLWNlbGwtLWNlbnRlciAgeyBtYXJnaW46IDAgYXV0bzsgfVxuICAgIFx0fVxuICAgIH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICAgU1VJVCBHUklEIFNFVFRJTkdTXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi5HcmlkLS13aXRoR3V0dGVyIHtcblx0bWFyZ2luOiAwIC0jeyRndXR0ZXJTcGFjZSAvIDJ9O1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBtYXJnaW46IDAgLSN7JGd1dHRlclNwYWNlfTsgfVxufVxuXG4uR3JpZC0td2l0aEd1dHRlciA+IC5HcmlkLWNlbGwge1xuXHRwYWRkaW5nOiAwICRndXR0ZXJTcGFjZSAvIDI7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7IHBhZGRpbmc6IDAgJGd1dHRlclNwYWNlOyB9XG59XG5cbi8vJGd1dHRlclNwYWNlTmVnYXRpdmUgOiAtKCRndXR0ZXJTcGFjZSk7XG5cbi8vLkdyaWQtLXdpdGhHdXR0ZXJMZyB7XG4vL1x0bWFyZ2luOiAwICRndXR0ZXJTcGFjZU5lZ2F0aXZlO1xuLy9cdHBhZGRpbmc6IDAgKCRndXR0ZXJTcGFjZSAqIDIpO1xuLy9cbi8vXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhzKSB7IG1hcmdpbjogMCAkZ3V0dGVyU3BhY2VOZWdhdGl2ZTsgfVxuLy99XG4vL1xuLy8uR3JpZC0td2l0aEd1dHRlckxnID4gLkdyaWQtY2VsbCB7XG4vL1x0cGFkZGluZzogMCAkZ3V0dGVyU3BhY2U7XG4vL1xuLy9cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHsgcGFkZGluZzogMCAkZ3V0dGVyU3BhY2U7IH1cbi8vfVxuXG4uR3JpZC0td2l0aEd1dHRlclNtIHtcblx0bWFyZ2luOiAwIC0xcHg7XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBtYXJnaW46IDAgLTFweDsgfVxufVxuXG4uR3JpZC0td2l0aEd1dHRlclNtID4gLkdyaWQtY2VsbCB7XG5cdHBhZGRpbmc6IDAgMXB4O1xuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgcGFkZGluZzogMCAxcHg7IH1cbn1cblxuLkdyaWQtLXdpdGhHdXR0ZXJMZyB7XG5cdG1hcmdpbjogMCAtI3skZ3V0dGVyU3BhY2V9O1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBtYXJnaW46IDAgLSN7JGd1dHRlclNwYWNlICogM307IH1cbn1cblxuLkdyaWQtLXdpdGhHdXR0ZXJMZyA+IC5HcmlkLWNlbGwge1xuXHRwYWRkaW5nOiAwICRndXR0ZXJTcGFjZTtcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgcGFkZGluZzogMCAkZ3V0dGVyU3BhY2UgKiAzOyB9XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQkFTRTogUEFHRVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4gLyoqXG4gICogU2ltcGxlIHBhZ2UtbGV2ZWwgc2V0dXAgZnJvbSBJbnVpdENTUy5cbiAgKlxuICAqIDEuIFNldCB0aGUgZGVmYXVsdCBgZm9udC1zaXplYCBhbmQgYGxpbmUtaGVpZ2h0YCBmb3IgdGhlIGVudGlyZSBwcm9qZWN0LFxuICAqICAgIHNvdXJjZWQgZnJvbSBvdXIgZGVmYXVsdCB2YXJpYWJsZXMuIFRoZSBgZm9udC1zaXplYCBpcyBjYWxjdWxhdGVkIHRvIGV4aXN0XG4gICogICAgaW4gZW1zLCB0aGUgYGxpbmUtaGVpZ2h0YCBpcyBjYWxjdWxhdGVkIHRvIGV4aXN0IHVuaXRsZXNzbHkuXG4gICogMi4gRm9yY2Ugc2Nyb2xsYmFycyB0byBhbHdheXMgYmUgdmlzaWJsZSB0byBwcmV2ZW50IGF3a3dhcmQg4oCYanVtcHPigJkgd2hlblxuICAqICAgIG5hdmlnYXRpbmcgYmV0d2VlbiBwYWdlcyB0aGF0IGRvL2RvIG5vdCBoYXZlIGVub3VnaCBjb250ZW50IHRvIHByb2R1Y2VcbiAgKiAgICBzY3JvbGxiYXJzIG5hdHVyYWxseS5cbiAgKiAzLiBFbnN1cmUgdGhlIHBhZ2UgYWx3YXlzIGZpbGxzIGF0IGxlYXN0IHRoZSBlbnRpcmUgaGVpZ2h0IG9mIHRoZSB2aWV3cG9ydC5cbiAgKi9cblxuaHRtbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShiYWNrZ3JvdW5kKTtcbiAgICBtaW4taGVpZ2h0OiAxMDAlOyAvKiAzICovXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsOyAvKiAyICovXG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQkFTRTogTElOS1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5hIHtcblx0Y29sb3I6IGN1cnJlbnRDb2xvcjtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdGNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdH1cbn1cblxuLy9wIGEsXG4vL2xpIGEge1xuLy9cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuLy9cdH1cbi8vfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE1JWElOU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBVc2luZyBmb250LWZhY2U/IFVzZSB0aGlzIHdpdGggaXQuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gdHlwZVJlc2V0KCkge1xuICAgIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cblxuLy8gTWVkaWEgcXVlcmllc1xuLy8gSSBsb3ZlIHRoaXMgdmVyc2lvbiwgYnV0IEkgbmVlZCBtb3JlIGZsZXhpYmlsaXR5LiBUaGlzIHdpbGwgYmUgZGVwcmVjYXRlZFxuLy8gYnkgQlM0J3MgYnJlYWtwb2ludHMgbWl4aW4uIFNlZTogYHRvb2xzLm1peGlucy5icmVha3BvaW50c2Bcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBAbGluayBodHRwOi8vc2Fzcy1ndWlkZWxpbi5lcy8jYnJlYWtwb2ludC1tYW5hZ2VyIFNhc3MgR3VpZGVsaW5lcyAtIEJyZWFrcG9pbnQgTWFuYWdlclxuLy8gQGxpbmsgaHR0cDovL3d3dy5zaXRlcG9pbnQuY29tL21hbmFnaW5nLXJlc3BvbnNpdmUtYnJlYWtwb2ludHMtc2Fzcy9cblxuLy9AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgkYnJlYWtwb2ludCkge1xuLy9cdC8vICRyYXctcXVlcnk6IG1hcC1nZXQoJGdyaWQtYnJlYWtwb2ludHMsICRicmVha3BvaW50KTtcbi8vXHQvLyAkcmF3LXF1ZXJ5OiBtYXAtZmV0Y2goJHNpemUsIGJyZWFrcG9pbnQsICRicmVha3BvaW50KTtcbi8vXHQkcmF3LXF1ZXJ5OiBzaXplKGJyZWFrcG9pbnQsICRicmVha3BvaW50KTtcbi8vXG4vL1x0QGlmICRyYXctcXVlcnkge1xuLy9cdFx0JHF1ZXJ5OiBpZih0eXBlLW9mKCRyYXctcXVlcnkpID09ICdzdHJpbmcnLCB1bnF1b3RlKCRyYXctcXVlcnkpLCBpbnNwZWN0KCRyYXctcXVlcnkpKTtcbi8vXG4vL1x0XHRAbWVkaWEgI3skcXVlcnl9IHtcbi8vXHRcdFx0QGNvbnRlbnQ7XG4vL1x0XHR9XG4vL1xuLy9cdH0gQGVsc2Uge1xuLy9cdFx0QGVycm9yICdObyB2YWx1ZSBmb3VuZCBmb3IgYCN7JGJyZWFrcG9pbnR9YC4gJ1xuLy9cdFx0XHQgKyAnUGxlYXNlIG1ha2Ugc3VyZSBpdCBpcyBkZWZpbmVkIGluIGAkYnJlYWtwb2ludHNgIG1hcC4nO1xuLy9cdH1cbi8vfVxuXG5cbi8vIENsZWFyZml4XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gMS4gVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGVcbi8vICAgIGNvbnRlbnRlZGl0YWJsZSBhdHRyaWJ1dGUgaXMgaW5jbHVkZWQgYW55d2hlcmUgZWxzZSBpbiB0aGUgZG9jdW1lbnQuXG4vLyAgICBPdGhlcndpc2UgaXQgY2F1c2VzIHNwYWNlIHRvIGFwcGVhciBhdCB0aGUgdG9wIGFuZCBib3R0b20gb2YgZWxlbWVudHNcbi8vICAgIHRoYXQgYXJlIGNsZWFyZml4ZWQuXG4vLyAyLiBUaGUgdXNlIG9mIGB0YWJsZWAgcmF0aGVyIHRoYW4gYGJsb2NrYCBpcyBvbmx5IG5lY2Vzc2FyeSBpZiB1c2luZ1xuLy8gICAgYDpiZWZvcmVgIHRvIGNvbnRhaW4gdGhlIHRvcC1tYXJnaW5zIG9mIGNoaWxkIGVsZW1lbnRzLlxuXG5AbWl4aW4gY2xlYXJmaXgoKSB7XG5cdCY6YmVmb3JlLFxuXHQmOmFmdGVyIHtcblx0XHRjb250ZW50OiBcIiBcIjsgLy8gMVxuXHRcdGRpc3BsYXk6IHRhYmxlOyAvLyAyXG5cdH1cblxuXHQmOmFmdGVyIHtcblx0XHRjbGVhcjogYm90aDtcblx0fVxufVxuXG5cbi8vIEV2ZW50IHdyYXBwZXJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBAYXV0aG9yIEhhcnJ5IFJvYmVydHNcbi8vIEBwYXJhbSB7Qm9vbH0gJHNlbGYgW2ZhbHNlXSAtIFdoZXRoZXIgb3Igbm90IHRvIGluY2x1ZGUgY3VycmVudCBzZWxlY3RvclxuLy8gQGxpbmsgaHR0cHM6Ly90d2l0dGVyLmNvbS9jc3N3aXphcmRyeS9zdGF0dXMvNDc4OTM4NTMwMzQyMDA2Nzg0XG4vLyBAbGluayBodHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL3Nhc3Mvc2ltcGxpZnlpbmctY29udGV4dHMtZXZlbnRzL1xuXG5AbWl4aW4gb24tZXZlbnQoJHNlbGY6IGZhbHNlKSB7XG5cdEBpZiAkc2VsZiB7XG5cdFx0Jixcblx0XHQmOmhvdmVyLFxuXHRcdCY6YWN0aXZlLFxuXHRcdCY6Zm9jdXMge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9IEBlbHNlIHtcblx0XHQmOmhvdmVyLFxuXHRcdCY6YWN0aXZlLFxuXHRcdCY6Zm9jdXMge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG59XG5cblxuLy8gQ29udGV4dC1iYXNlZCBzZWxlY3RvclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIE1ha2UgYSBjb250ZXh0LWJhc2VkIHNlbGVjdG9yIGEgbGl0dGxlIG1vcmUgZnJpZW5kbHlcbi8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8gQHBhcmFtIHtTdHJpbmd9ICRjb250ZXh0XG4vLyBAbGluayBodHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL3Nhc3Mvc2ltcGxpZnlpbmctY29udGV4dHMtZXZlbnRzL1xuLy8gLm15LWVsZW1lbnQge1xuLy8gICAgIGRpc3BsYXk6IGZsZXg7XG4vLyAgICAgQGluY2x1ZGUgd2hlbi1pbnNpZGUoJy5uby1mbGV4Ym94Jykge1xuLy8gICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbi8vICAgICB9XG4vLyB9XG4vLyBSZXBsYWNpbmfigKZcbi8vIC5teS1lbGVtZW50IHtcbi8vICAgICBkaXNwbGF5OiBmbGV4O1xuLy8gICAgIC5uby1mbGV4Ym94ICYge1xuLy8gICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbi8vICAgICB9XG4vLyB9XG5cbkBtaXhpbiB3aGVuLWluc2lkZSgkY29udGV4dCkge1xuXHQjeyRjb250ZXh0fSAmIHtcblx0XHRAY29udGVudDtcblx0fVxufVxuXG5cbi8vIFRyYW5zaXRpb24gYmFzZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFF1aWNrIGFuZCBlYXN5LiBDb3VsZCBleHRlbmQgdGhpc+KAplxuXG5AbWl4aW4gYmFzZVRyYW5zaXRpb24oXG5cdCRwcm9wZXJ0eTogYWxsXG4pIHtcblx0dHJhbnNpdGlvbi1wcm9wZXJ0eTogJHByb3BlcnR5O1xuXHR0cmFuc2l0aW9uLWR1cmF0aW9uOiBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIGR1cmF0aW9uLCBsb25nKTtcblx0dHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgdHlwZSwgYmFzZSk7XG59XG5cblxuLy8gU2N1dCByZW0gZmFsbGJhY2tcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBodHRwOi8vZGF2aWR0aGVjbGFyay5naXRodWIuaW8vc2N1dC9yZW1GYWxsYmFjay5odG1sXG4vLyBSZXF1aXJlczogc2N1dC1yZW0gYW5kIHNjdXQtc3RyaXAtdW5pdC5cbi8vIFJlbmFtZWQgcmVtRmFsbGJhY2soKSBmcm9tIHNjdXQtcmVtRmFsbGJhY2soKSBmb3IgZWFzZSBvZiB1c2UuXG5cbkBtaXhpbiByZW1GYWxsYmFjayAoXG5cdCRwaXhlbHMsXG5cdCRwcm9wZXJ0eTogZm9udC1zaXplXG4pIHtcblxuXHQkcHgtdmFsczogbnVsbDtcblx0QGVhY2ggJHZhbCBpbiAkcGl4ZWxzIHtcblx0XHQkdmFsLWluLXB4OiBzY3V0LXN0cmlwLXVuaXQoJHZhbCkgKiAxcHg7XG5cdFx0JHB4LXZhbHM6IGFwcGVuZCgkcHgtdmFscywgJHZhbC1pbi1weCk7XG5cdH1cblx0JHJlbS12YWxzOiByZW0oJHBpeGVscyk7XG5cblx0I3skcHJvcGVydHl9OiAkcHgtdmFscztcblx0I3skcHJvcGVydHl9OiAkcmVtLXZhbHM7XG5cbn1cblxuXG4vLyBUcmFuc2Zvcm0gc21vb3RoaW5nIGhhY2tzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQXMgaXMgb2Z0ZW4gdGhlIGNhc2UsIHNvbWUgZGV2aWNlcy9icm93c2VycyBuZWVkIGFkZGl0aW9uYWwgY29kZSB0byBnZXQgQ1NTIHRvIHdvcmtcbi8vIGluIHRoZSBtb3N0IGRlc2lyZWQgd2F5LiBUaGVzZSBtaXhpbnMgYXJlIHVzZWQgdG8gcXVpY2tseSBkcm9wIGluIGhhY2tzIGZvciBlYWNoIGVsZW1lbnRcbi8vIEZpbmQgb3V0IG1vcmUgaGVyZTogaHR0cHM6Ly9naXRodWIuY29tL0lhbkx1bm4vSG92ZXIvd2lraS9IYWNrcy1FeHBsYWluZWRcbi8vIDEuIEltcHJvdmUgcGVyZm9ybWFuY2Ugb24gbW9iaWxlL3RhYmxldCBkZXZpY2VzXG4vLyAyLiBJbXByb3ZlIGFsaWFzaW5nIG9uIG1vYmlsZS90YWJsZXQgZGV2aWNlc1xuLy8gMy4gVHJhbnNmb3JtcyBuZWVkIHRvIGJlIGJsb2NrLWxldmVsIHRvIHdvcmtcbi8vIDQuIEBDRjogJ3dpbGwtY2hhbmdlJyBpcyBhbG1vc3QgYXZhaWxhYmxlLiBTZWU6IGh0dHBzOi8vZGV2Lm9wZXJhLmNvbS9hcnRpY2xlcy9jc3Mtd2lsbC1jaGFuZ2UtcHJvcGVydHkvXG5cbkBtaXhpbiBoYXJkd2FyZUFjY2VsKCkge1xuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7IC8vMS5cbn1cblxuQG1peGluIGltcHJvdmVBbnRpQWxpYXMoKSB7XG5cdGJveC1zaGFkb3c6IDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwKTsgLy8gMi5cbn1cblxuQG1peGluIGZvbnRTbW9vdGgoKSB7XG5cdGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbn1cblxuQG1peGluIGZvcmNlQmxvY2tMZXZlbCgpIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrOyAvLzMuXG5cdC8vIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbkBtaXhpbiBhbnRpY2lwYXRlUGFpbnRpbmcge1xuXHR3aWxsLWNoYW5nZTogYWxsOyAvLyA0LlxufVxuXG5AbWl4aW4gc21vb3RoVHJhbnNpdGlvbigpIHtcblx0Ly9AaW5jbHVkZSBmb3JjZUJsb2NrTGV2ZWwoKTtcblx0QGluY2x1ZGUgaGFyZHdhcmVBY2NlbCgpO1xuXHQvKiBAaW5jbHVkZSBpbXByb3ZlQW50aUFsaWFzKCk7ICovXG5cdEBpbmNsdWRlIGZvbnRTbW9vdGgoKTtcblx0LyogQGluY2x1ZGUgYW50aWNpcGF0ZVBhaW50aW5nKCk7ICovXG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgSU1BR0VTXG4vLyAgIFRPRE86IGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vb24tb2JqZWN0LWZpdC1hbmQtb2JqZWN0LXBvc2l0aW9uL1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyAxLiBGbHVpZCBpbWFnZXMgZm9yIHJlc3BvbnNpdmUgcHVycG9zZXMuXG4vLyAyLiBPZmZzZXQgYGFsdGAgdGV4dCBmcm9tIHN1cnJvdW5kaW5nIGNvcHkuXG4vLyAzLiBTZXR0aW5nIGB2ZXJ0aWNhbC1hbGlnbmAgcmVtb3ZlcyB0aGUgd2hpdGVzcGFjZSB0aGF0IGFwcGVhcnMgdW5kZXIgYGltZ2Bcbi8vICAgIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgZHJvcHBlZCBpbnRvIGEgcGFnZSBhcy1pcy4gU2FmZXIgYWx0ZXJuYXRpdmUgdG9cbi8vICAgIHVzaW5nIGBkaXNwbGF5OiBibG9jaztgLlxuXG5pbWcge1xuICAgIG1heC13aWR0aDogMTAwJTsgICAgICAgIC8vIDEuXG4gICAgZm9udC1zdHlsZTogaXRhbGljOyAgICAgLy8gMi5cbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvLyAzLlxufVxuXG5cbi8vIDEuIEdvb2dsZSBNYXBzIGJyZWFrcyBpZiBgbWF4LXdpZHRoOiAxMDAlYCBhY3RzIHVwb24gaXQ7IHVzZSB0aGVpciBzZWxlY3RvclxuLy8gICAgdG8gcmVtb3ZlIHRoZSBlZmZlY3RzLlxuLy8gMi4gSWYgYSBgd2lkdGhgIGFuZC9vciBgaGVpZ2h0YCBhdHRyaWJ1dGUgaGF2ZSBiZWVuIGV4cGxpY2l0bHkgZGVmaW5lZCwgbGV04oCZc1xuLy8gICAgbm90IG1ha2UgdGhlIGltYWdlIGZsdWlkLlxuXG4uZ20tc3R5bGUgaW1nLCAvLyAxLlxuaW1nW3dpZHRoXSwgICAgLy8gMi5cbmltZ1toZWlnaHRdIHsgIC8vIDIuXG4gICAgbWF4LXdpZHRoOiBub25lO1xufVxuXG4vLyBjaXJjbGUgaXRcbi5vLWltYWdlLS1jaXJjbGUge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICAgVFlQT0dSQVBIWSBFTEVNRU5UIFNFVFRJTkdTXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8qIHVuY3NzOmlnbm9yZSAqL1xuaDEsIGgyLCBoMywgaDQsIGg1LCBoNixcbmJsb2NrcXVvdGUsXG51bCwgb2wsIGxpLCBkbCwgZGRcbnAsIGFkZHJlc3MsXG50YWJsZSwgdGltZSxcbmZvcm0sIGZpZWxkc2V0LCBsZWdlbmQsXG5maWd1cmUsIGZpZ2NhcHRpb24sXG50YWJsZSwgdGgsIHRkLCBjYXB0aW9uXG5wcmUsIHNtYWxsLFxuZW0sIGIge1xuXHRAaW5jbHVkZSB0eXBlUmVzZXQoKTtcbn1cblxuXG4vLyBSb290IHN0eWxpbmcgdG8gY2FzY2FkZSB0aHJ1XG4vLyBNb3ZlZCB0byBib2R5LCBub3QgOnJvb3QsIHNvIHRoYXQgaXQncyBlYXNpZXIgdG8gdXNlIGZvbnRmYWNlb25sb2FkLmpzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5odG1sIHtcblx0QGluY2x1ZGUgdHlwZVJlc2V0KCk7XG5cdGNvbG9yOiBwYWxldHRlKHRleHQpO1xuXHRmb250LWZhbWlseTogJGZvbnQtdGV4dC1yZWd1bGFyO1xuXHRmb250LXNpemU6IDEwMCU7XG5cdGxpbmUtaGVpZ2h0OiAkYmFzZS1saW5lLWhlaWdodC11bml0O1xuXHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHQvL3RleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gICAgdGV4dC1yZW5kZXJpbmc6IGdlb21ldHJpY1ByZWNpc2lvbjtcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcblx0LXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG59XG5cblxuLy8gQ29uc2lzdGVudCB2ZXJ0aWNhbCByaHl0aG1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qIHVuY3NzOmlnbm9yZSAqL1xuLy8gaDEsIGgyLCBoMywgaDQsIGg1LCBoNixcbnVsLCBvbCwgbGksIGRsLFxuYmxvY2txdW90ZSwgcCwgYWRkcmVzcyxcbnRhYmxlLCB0aW1lLFxuZmllbGRzZXQsXG5wcmUge1xuXHRtYXJnaW4tYm90dG9tOiAkcGFyYWdyYXBoU3BhY2U7XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgRElTUExBWSBPQkpFQ1RTXG4vLyAgIEZyb206IFNVSVQgUE9TSVRJT04gVVRJTFNcbi8vICAgVmVyc2lvbiAxLjAuMSAxNjA2Mjlcbi8vICAgU2VlOiBodHRwczovL2dpdGh1Yi5jb20vc3VpdGNzcy91dGlscy1wb3NpdGlvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBBUElcbi8vIHUtcG9zQWJzb2x1dGVcbi8vIHUtcG9zRml4ZWRcbi8vIG8tcG9zQWJzb2x1dGVDZW50ZXJcbi8vIG8tcG9zRml4ZWRDZW50ZXJcbi8vIG8tcG9zRnVsbFNjcmVlblxuXG4vLyBwb3NBYnNvbHV0ZUNlbnRlciBsZWdhY3k6XG4vLyBib3R0b206IDAgIWltcG9ydGFudDtcbi8vIGxlZnQ6IDAgIWltcG9ydGFudDtcbi8vIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xuLy8gcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4vLyByaWdodDogMCAhaW1wb3J0YW50O1xuLy8gdG9wOiAwICFpbXBvcnRhbnQ7XG5cblxuQG1peGluIHUtcG9zQWJzb2x1dGUge1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbkBtaXhpbiB1LXBvc0ZpeGVkIHtcblx0YmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRwb3NpdGlvbjogZml4ZWQ7XG59XG5cbkBtaXhpbiBvLXBvc0NlbnRlcihcblx0JHBvc0NlbnRlclBvc2l0aW9uOiBhYnNvbHV0ZVxuKSB7XG5cdGxlZnQ6IDUwJTtcblx0cG9zaXRpb246ICRwb3NDZW50ZXJQb3NpdGlvbjtcblx0dG9wOiA1MCU7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuXG5AbWl4aW4gby1wb3NGdWxsU2NyZWVuKFxuXHQkcG9zRnVsbFNjcmVlbjogZml4ZWRcbikge1xuXHRib3R0b206IDA7XG5cdGxlZnQ6IDA7XG5cdG1hcmdpbjogYXV0bztcblx0cG9zaXRpb246ICRwb3NGdWxsU2NyZWVuO1xuXHRyaWdodDogMDtcblx0dG9wOiAwO1xufVxuXG4uby1wb3NBYnNvbHV0ZUNlbnRlciAgICB7IEBpbmNsdWRlIG8tcG9zQ2VudGVyKCk7IH1cbi5vLXBvc0ZpeGVkQ2VudGVyICAgICAgIHsgQGluY2x1ZGUgby1wb3NDZW50ZXIoZml4ZWQpOyB9XG4uby1wb3NGdWxsU2NyZWVuICAgICAgICB7IEBpbmNsdWRlIG8tcG9zRnVsbFNjcmVlbigpOyB9XG4uby1wb3NBYnNvbHV0ZUNlbnRlckFsdCB7IEBpbmNsdWRlIG8tcG9zRnVsbFNjcmVlbihhYnNvbHV0ZSk7IH1cblxuLy8gMS4gTWFrZSBzdXJlIGZpeGVkIGVsZW1lbnRzIGFyZSBwcm9tb3RlZCBpbnRvIGEgbmV3IGxheWVyLFxuLy8gICAgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnMuXG5cbi5vLXBvc0Z1bGxTY3JlZW4sXG4uby1wb3NGaXhlZENlbnRlciB7XG5cdGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgLy8gMVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIENPTlRBSU5FUiBPQkpFQ1Rcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuQG1peGluIGNvbnRhaW5lcihcblx0JHdpZHRoOiBjb250YWluZXItd2lkdGgobGcpXG4pIHtcblx0QGluY2x1ZGUgY2xlYXJmaXgoKTtcblx0aGVpZ2h0OiBpbmhlcml0O1xuXHRtYXJnaW46IDAgYXV0bztcblx0bWF4LXdpZHRoOiAkd2lkdGg7XG5cdHBhZGRpbmc6IDAgc3BhY2UoMSk7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuXHRwLFxuXHRsaSxcblx0b2wge1xuXHRcdCY6bGFzdC1jaGlsZCxcblx0XHQmOmxhc3QtY2hpbGQgYSB7XG5cdFx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdH1cblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRwYWRkaW5nOiAwIHNwYWNlKDEuNSk7XG5cdH1cbn1cblxuLm8tY29udGFpbmVyIHtcblx0QGluY2x1ZGUgY29udGFpbmVyKCk7XG5cblx0Ly9AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7IG1heC13aWR0aDogY29udGFpbmVyLXdpZHRoKGxnKTsgfVxuXG4gICAgLy8gc2l6ZXNcblxuXHQmLS1tZCB7XG5cdFx0QGluY2x1ZGUgY29udGFpbmVyKCBjb250YWluZXItd2lkdGgobWQpICk7XG5cdH1cblxuXHQmLS14bCB7XG5cdFx0QGluY2x1ZGUgY29udGFpbmVyKCBjb250YWluZXItd2lkdGgoeGwpICk7XG5cdH1cblxuXHQmLS1zdXBlciB7XG5cdH1cblxuICAgICYtLXN1cGVyIHtcbiAgICAgICAgLy9AaW5jbHVkZSBjb250YWluZXIoIGNvbnRhaW5lci13aWR0aChzdSkgKTtcblx0XHRtYXgtd2lkdGg6IDEwMCU7XG5cdFx0cGFkZGluZzogMCBzcGFjZSgxLjUpO1xuXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgc3BhY2UoNCk7XG4gICAgICAgIH1cblx0fVxufVxuXG4uQ29sdW1uLS1wb3N0IHtcblx0bWF4LXdpZHRoOiBjb250YWluZXItd2lkdGgoeHMpO1xuXHQvLyBAaW5jbHVkZSB3aGVuLWluc2lkZShcIi5vLWNvbnRhaW5lclwiKSAgICAgeyBtYXJnaW4tbGVmdDogMDsgfVxuXHQvLyBAaW5jbHVkZSB3aGVuLWluc2lkZShcIi5vLWNvbnRhaW5lci0teGxcIikgeyBtYXJnaW4tbGVmdDogY2FsYyggKDEyMDAtOTYwKSAvIDIgKTsgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIENPTVBPTkVOVDogR1JJRFxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9IZXlkb24vZnVrb2wtZ3JpZHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLm8tZ3JpZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG59XG5cbi5vLWdyaWQgPiAqIHtcbiAgICBmbGV4OiAxIDAgNWVtO1xufVxuXG4vLyB2YXJpYWJsZXNcbi5vLWdyaWQtLXNwYWNlQmV0d2VlbiB7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE9CSkVDVDogQ1VSU09SIFNUQVRFU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBodHRwczovL2Nzcy10cmlja3MuY29tL2F0dHJpYnV0ZS1zZWxlY3RvcnMvXG4vLyBodHRwczovL2Nzcy10cmlja3MuY29tL2FsbWFuYWMvc2VsZWN0b3JzL2EvYXR0cmlidXRlL1xuLy8gQWxzbzogQXR0cmlidXRlIE5vdCBFcXVhbCBTZWxlY3RvciBbbmFtZSE94oCddmFsdWXigJ1dXG5cbi8vIFtkYXRhLXZhbHVlKj1cImRpc21pc3NcIl0sXG4vLyBbZGF0YS0qPVwidG9nZ2xlXCJdLFxuLy8gW2RhdGEtdG9nZ2xlXSxcbi8vIFtyZWxePVwiZGF0YS10b2dnbGVcIl0sXG5bZGF0YS1tb2RhbC10b2dnbGVdLFxuW2RhdGEtdG9nZ2xlLWZvbGRdLFxuW2RhdGEtZGlzbWlzc11cbntcblx0Y3Vyc29yOiBwb2ludGVyO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE9CSkVDVDogTElTVFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyAxLiBSZW1vdmUgZXh0cmEgdmVydGljYWwgc3BhY2luZyB3aGVuIG5lc3RpbmcgbGlzdHMuXG5cbnVsIHtcblx0bGlzdC1zdHlsZS10eXBlOiBkaXNjO1xuXHRtYXJnaW4tbGVmdDogbWFwLWZldGNoKCRsaXN0LWluc2V0LCBtYXJnaW4pO1xuXHRwYWRkaW5nLWxlZnQ6IG1hcC1mZXRjaCgkbGlzdC1pbnNldCwgcGFkZGluZyk7XG59XG5cbm9sIHtcblx0bGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsO1xufVxuXG5saSB7XG5cdG1hcmdpbi1ib3R0b206IDA7XG5cblx0PiB1bCxcblx0PiBvbCB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDsgLy8gMS5cblx0fVxufVxuXG5cbi8vIExpc3Qgb2JqZWN0OiBkZWZhdWx0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gbGlzdCgpIHtcblx0bWFyZ2luLWxlZnQ6IG1hcC1mZXRjaCgkbGlzdC1pbnNldCwgbWFyZ2luKTtcblx0cGFkZGluZy1sZWZ0OiBtYXAtZmV0Y2goJGxpc3QtaW5zZXQsIHBhZGRpbmcpO1xufVxuXG4uby1saXN0IHsgQGluY2x1ZGUgbGlzdCgpOyB9XG5cblxuLy8gQ2xlYW4gbGlzdCBvYmplY3Q6IHJlbW92ZSBhbGwgZGVmYXVsdCBzcGFjaW5nXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gbGlzdENsZWFuKCkge1xuXHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cdG1hcmdpbi1sZWZ0OiAwO1xuXHRwYWRkaW5nLWxlZnQ6IDA7XG59XG5cbi5vLWxpc3RDbGVhbiB7IEBpbmNsdWRlIGxpc3RDbGVhbigpOyB9XG5cblxuLy8gSW5saW5lIGxpc3Qgb2JqZWN0OlxuLy8gQXBwbHkgdG8gdGhlIHVsL29sIHRhZywgYnV0IGl0J3Mgc2V0dXAgZm9yIHVzZSBvbiBhbnkgZGl2LlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1peGluIGxpc3RJbmxpbmUoKSB7XG5cdEBpbmNsdWRlIGxpc3RDbGVhbigpO1xuXG5cdGxpLFxuXHRkaXYge1xuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHQmOm5vdCg6bGFzdC1jaGlsZCkge1xuXHRcdFx0bWFyZ2luLXJpZ2h0OiBzcGFjZSgwLjI1KTtcblx0XHR9XG5cdH1cbn1cblxuLm8tbGlzdElubGluZSB7IEBpbmNsdWRlIGxpc3RJbmxpbmUoKTsgfVxuIiwiLy9cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgT0JKRUNUOiBMSU5LU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBUaGVtZTogbGlua1xuXG5hIHtcblx0QGluY2x1ZGUgYmFzZVRyYW5zaXRpb24oKTtcblx0Ly9ib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSggcGFsZXR0ZSh0ZXh0KSwgMC4yICk7XG5cblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0QGluY2x1ZGUgYmFzZVRyYW5zaXRpb24oKTtcblx0XHQvL2JvcmRlci1jb2xvcjogcmdiYSggcGFsZXR0ZSh0ZXh0KSwgMSApO1xuXHR9XG59XG5cbnAgYSxcbmxpIGEge1xuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHQvLyBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcblx0fVxufVxuXG5cbi8vIE9iamVjdDogYnVyaWVkIGFuY2hvcnNcbi8vIFNhbWUgcGF0dGVybiBhcyBTdWl0J3MgdS1saW5rQ29tcGxleCwgYnV0IGRpZmZlcmVudCBzdHlsaW5nLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1peGluIGNvbXBsZXhMaW5rIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdC5vLWxpbmtCdXJpZWRUYXJnZXQge1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG5cdFx0fVxuXHR9XG59XG5cbi5vLWxpbmtCdXJpZWQge1xuXHRAaW5jbHVkZSBjb21wbGV4TGluaygpO1xuXHRtYXJnaW4tYm90dG9tOiBzcGFjZSgwLjUpO1xufVxuXG4vLyBEb24ndCBmb3JnZXQ6IHRoaXMgaXMgYSBzcGFuLCBub3QgYW4gPGE+LFxuLy8gc28gaXQgbmVlZHMgdGhlc2Ugc3R5bGVzLlxuLm8tbGlua0J1cmllZFRhcmdldCB7XG5cdEBpbmNsdWRlIGJhc2VUcmFuc2l0aW9uKCk7XG5cdGNvbG9yOiBwYWxldHRlKHRleHQpO1xufVxuXG5cbi8vIENvbXBvbmVudDogY29udHJvbCB1bmRlcmxpbmVzIHdpdGggbGluZWFyLWdyYWRpZW50XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kbGlua1J1bGVCbGFjazogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKGRhcmspLDApIDUwJSwgIHJnYmEocGFsZXR0ZShkYXJrKSwwLjQpIDUwJSk7XG4kbGlua1J1bGVHcmV5OiAgbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKG11dGVkKSwwKSA1MCUsIHBhbGV0dGUobXV0ZWQpIDUwJSk7XG4kbGlua1J1bGVMaXRlOiAgbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKGxpZ2h0KSwwKSA1MCUsIHBhbGV0dGUobGlnaHQpIDUwJSk7XG4kbGlua1J1bGVXaGl0ZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKHdoaXRlKSwwKSA1MCUsIHBhbGV0dGUod2hpdGUpIDUwJSk7XG4kbGlua1J1bGVCcmFuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKGJyYW5kKSwwKSA1MCUsIHBhbGV0dGUoYnJhbmQpIDUwJSk7XG4kbGlua1J1bGVOb25lOiAgbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKGRhcmspLDApIDUwJSwgIHJnYmEocGFsZXR0ZShkYXJrKSwwKSA1MCUpO1xuXG5AbWl4aW4gdW5kZXJsaW5lTGluayhcblx0JG1peGluLXJ1bGU6ICRsaW5rUnVsZUJsYWNrLFxuXHQkbWl4aW4taG92ZXItcnVsZTogbm9uZSxcblx0JG1peGluLWNvbG9yOiBjdXJyZW50Q29sb3IsXG5cdCRtaXhpbi1ob3Zlci1jb2xvcjogaW5oZXJpdCxcblx0Ly8gJG1peGluLWhvdmVyLWNvbG9yOiBjdXJyZW50Q29sb3IsXG5cdCRtaXhpbi1pbnZlcnNlOiBmYWxzZVxuXG4pIHtcblxuXHRAaWYgJG1peGluLXJ1bGUgPT0gJ25vbmUnIHtcblx0XHRiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuXHRcdC8vcGFkZGluZy1ib3R0b206IDA7XG5cdH1cblxuXHRAZWxzZSB7XG5cdFx0YmFja2dyb3VuZC1pbWFnZTogJG1peGluLXJ1bGU7XG5cdFx0YmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuXHRcdGJhY2tncm91bmQtc2l6ZTogMXB4IDFweDtcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG5cdFx0Y29sb3I6ICRtaXhpbi1jb2xvcjtcblx0XHRwYWRkaW5nLWJvdHRvbTogMDtcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdH1cblxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHRiYWNrZ3JvdW5kLWltYWdlOiAkbWl4aW4taG92ZXItcnVsZTtcblx0XHRjb2xvcjogJG1peGluLWhvdmVyLWNvbG9yO1xuXHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0fVxufVxuXG4uby1saW5rIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygpOyB9XG4uby1jaGlsZExpbmsgeyBhIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygpOyB9IH1cblxuLm8tbGlua0dyZXkgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVHcmV5KTsgfVxuLm8tY2hpbGRMaW5rR3JleSB7IGEgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVHcmV5KTsgfSB9XG5cbi5vLWxpbmtMaXRlIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlTGl0ZSk7IH1cbi5vLWNoaWxkTGlua0xpdGUgeyBhIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlTGl0ZSk7IH0gfVxuXG4uby1saW5rQnJhbmQgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVCcmFuZCk7IH1cbi5vLWNoaWxkTGlua0JyYW5kIHsgYSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZUJyYW5kKTsgfSB9XG5cbi5vLWxpbmtXaGl0ZSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZVdoaXRlKTsgfVxuLm8tY2hpbGRMaW5rV2hpdGUgeyBhIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlV2hpdGUpOyB9IH1cblxuLm8tbGlua0ludmlzaWJsZSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsobm9uZSk7IH1cbi5vLWNoaWxkTGlua0ludmlzaWJsZSB7IGEgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKG5vbmUpOyB9IH1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBGTEVYIEFMSUdORVIgT0JKRUNUXG4vLyAgIFNlZTogaHR0cHM6Ly9waGlsaXB3YWx0b24uZ2l0aHViLmlvL3NvbHZlZC1ieS1mbGV4Ym94L2RlbW9zL3ZlcnRpY2FsLWNlbnRlcmluZy9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuQG1peGluIG8tYWxpZ25lciB7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdG1pbi1oZWlnaHQ6IDEwMCU7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5AbWl4aW4gby1hbGlnbmVyLWl0ZW0ge1xuXHRmbGV4OiAxO1xufVxuXG4uby1hbGlnbmVyIHtcblx0QGluY2x1ZGUgby1hbGlnbmVyO1xufVxuXG4uby1hbGlnbmVyLWl0ZW0ge1xuXHRAaW5jbHVkZSBvLWFsaWduZXItaXRlbTtcbn1cblxuLm8tYWxpZ25lci1pdGVtLS10b3Age1xuXHRhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xufVxuXG4uby1hbGlnbmVyLWl0ZW0tLWJvdHRvbSB7XG5cdGFsaWduLXNlbGY6IGZsZXgtZW5kO1xufVxuXG4uby1hbGlnbmVyLWl0ZW0tLWZpeGVkIHtcblx0ZmxleDogbm9uZTtcblx0bWF4LXdpZHRoOiA1MCU7XG59XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgVkVSVElDQUwgQUxJR05FUlxuLy8gICBSaXBwZWQgZnJvbTogaW5zdHJ1bWVudC5jb21cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLm8tZ2hvc3Qge1xuICAgIGZvbnQtc2l6ZTogMDtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi5vLWdob3N0OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luLWxlZnQ6IC0xcHg7XG4gICAgd2lkdGg6IDFweDtcbn1cblxuLm8tZ2hvc3Q6YmVmb3JlLFxuLm8tZ2hvc3QtY2hpbGQge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBPQkpFQ1Q6IFJVTEVcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gVE9EMDogZmlndXJlIG91dCB3YXlzIHRvIG1hbmFnZSB0aGlzIGNvbXBsZXhpdHnigKZcbi8vIC5tc20tU2VjdGlvblJ1bGUgICAgICAgIHsgQGluY2x1ZGUgU2VjdGlvbnJ1bGUoKTsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBkaXNwbGF5OiBub25lOyB9IH1cbi8vIC5tc20tU2VjdGlvblJ1bGUtLWxpZ2h0IHsgQGluY2x1ZGUgU2VjdGlvbnJ1bGUoJG1peGluLWNvbG9yOiByZ2JhKCBwYWxldHRlKG11dGVkKSwgMC41KSApOyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGRpc3BsYXk6IG5vbmU7IH0gfVxuLy8gLm14cy1TZWN0aW9uUnVsZSAgICAgICAgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHsgQGluY2x1ZGUgU2VjdGlvbnJ1bGUoKTsgfSB9XG5cbkBtaXhpbiBydWxlKFxuXHQkbWl4aW4tY29sb3I6IHBhbGV0dGUoYnJhbmQpLFxuXHQkbWl4aW4td2VpZ2h0OiAxcHhcbikge1xuXHRib3JkZXI6IDA7XG5cdGJvcmRlci10b3A6ICRtaXhpbi13ZWlnaHQgc29saWQgJG1peGluLWNvbG9yO1xufVxuXG4vLyBJbmRlcGVkZW504oCmXG5cbi5IelJ1bGUge1xuXHRAaW5jbHVkZSBydWxlKCBwYWxldHRlKGxpZ2h0KSApO1xuXHRoZWlnaHQ6IDA7XG5cdG1hcmdpbi10b3A6IGNhbGMoICN7c3BhY2UoMSl9IC0gMXB4KTtcblx0bWFyZ2luLWJvdHRvbTogc3BhY2UoMSk7XG59XG5cbi8vIENvbnRhaW5lZCBvbuKAplxuXG4uUnVsZSB7XG5cdEBpbmNsdWRlIHJ1bGUoKTtcbn1cblxuLkRpdlJ1bGUtLWxpZ2h0IHtcblx0QGluY2x1ZGUgcnVsZSggMXB4LCBwYWxldHRlKGJhc2UpICk7XG59XG5cbi5EaXZSdWxlLS1ib3R0b20ge1xuXHRib3JkZXItYm90dG9tOiAxcHggc29saWQgcGFsZXR0ZSh0ZXh0KTtcbn1cblxuLy8gQ29udGFpbmVkIG9uIHZlcnRpY2FsbHnigKZcblxuLlZlcnRSdWxlLS1sZWZ0IHtcblx0Ym9yZGVyLWxlZnQ6IDFweCBzb2xpZCBwYWxldHRlKGJhc2UpO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE9CSkVDVDogU1ZHIElDT05TXG4vLyAgIFJpcHBlZCBmcm9tIE9VSSBpY29uc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4uby1pY29uV3JhcHBlciB7XG5cdC8vY3Vyc29yOiBwb2ludGVyO1xuXHQvL2Rpc3BsYXk6IGlubGluZS1ibG9jaztcblx0Ly9tYXJnaW46IC0zMHB4O1xuXHQvL3BhZGRpbmc6IDMwcHg7XG59XG5cbi8vLm8taWNvbldyYXBwZXIgKyAuby1pY29uV3JhcHBlciB7XG4vL1x0bWFyZ2luLXRvcDogc3BhY2UoMC41KTtcbi8vfVxuXG4vLyAuI3skbmFtZXNwYWNlfUljb24sXG4uby1pY29uIHtcblx0d2lkdGg6IDMycHg7XG5cdGhlaWdodDogMzJweDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmaWxsOiBjdXJyZW50Q29sb3I7IC8vIFRoZSBjb2xvciBvZiB0aGUgU1ZHIHdpbGwgaW5oZXJpdCB0aGUgcGFyZW50J3MgYGNvbG9yYC5cblxuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0bGluZS1oZWlnaHQ6IDE7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdG91dGxpbmU6IDA7XG5cdH1cblxuXHQmLS1zdHJva2Uge1xuICAgICAgICBmaWxsOiB0cmFuc3BhcmVudDtcblx0XHRzdHJva2U6IGN1cnJlbnRDb2xvcjtcblx0XHRzdHJva2Utd2lkdGg6IDJweDtcblx0XHRzdHJva2UtbGluZWpvaW46IHJvdW5kO1xuXHR9XG5cblx0Ly8gMjQ6MTggcmF0aW9cblx0Ji0tbmF2IHtcblx0XHRoZWlnaHQ6IDIwcHg7XG5cdFx0bWFyZ2luLWxlZnQ6IDEycHg7XG5cdFx0d2lkdGg6IDE1cHg7XG5cdH1cblxuXHQmLS1zbSB7XG4gICAgICAgIGhlaWdodDogMTBweDtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHRcdHdpZHRoOiAxMHB4O1xuXG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuXHRcdFx0d2lkdGg6IDExcHg7XG5cdFx0XHRoZWlnaHQ6IDExcHg7XG5cdFx0fVxuXHR9XG5cblx0Ji0tbWQge1xuXHRcdHdpZHRoOiAyN3B4O1xuXHRcdGhlaWdodDogMjdweDtcblxuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRcdHdpZHRoOiAzNnB4O1xuXHRcdFx0aGVpZ2h0OiAzNnB4O1xuXHRcdH1cblx0fVxuXG5cdCYtLWxnIHtcblx0XHR3aWR0aDogcmVtKDMyKTtcblx0XHRoZWlnaHQ6IHJlbSgzMik7XG5cdH1cblxuXHQmLS14bCB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcblx0XHRoZWlnaHQ6IDQ4cHg7XG4gICAgICAgIHdpZHRoOiA0OHB4O1xuXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRcdGhlaWdodDogNjBweDtcbiAgICAgICAgICAgIHdpZHRoOiA2MHB4O1xuXHRcdH1cblx0fVxuXG5cdCYtLXN1cGVyIHtcblx0XHR3aWR0aDogcmVtKDQwKTtcblx0XHRoZWlnaHQ6IHJlbSg0MCk7XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0XHR3aWR0aDogcmVtKDQ4KTtcblx0XHRcdGhlaWdodDogcmVtKDQ4KTtcblx0XHR9XG5cdH1cblxuXHQmLS1sZWZ0IHtcblx0XHRtYXJnaW4tcmlnaHQ6IDNweDtcblxuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRcdG1hcmdpbi1yaWdodDogNHB4O1xuXHRcdH1cblx0fVxuXG5cdCYtLWxlZnRTbSB7XG5cdFx0bWFyZ2luLXJpZ2h0OiAxcHg7XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IHJlbSgyKTtcblx0XHR9XG5cdH1cblxuXHQmLS1yaWdodCB7XG5cdFx0bWFyZ2luLWxlZnQ6IDhweDtcblxuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRcdG1hcmdpbi1sZWZ0OiAxMnB4O1xuXHRcdH1cblx0fVxuXG5cdCYtLXJpZ2h0U20ge1xuXHRcdG1hcmdpbi1sZWZ0OiAxcHg7XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0XHRtYXJnaW4tbGVmdDogcmVtKDIpO1xuXHRcdH1cblx0fVxuXG5cdC8vIFRoaXMgaXMgYSB2ZXJ0aWNhbCBhbGlnbm1lbnQgZml4IHdoZW4gdXNlZCB0byB0aGUgcmlnaHQgb2YgYC4jeyRuYW1lc3BhY2V9aWNvbmAuXG5cdCsgW2NsYXNzXj1cIiN7JG5hbWVzcGFjZX0tYXJyb3ctaW5saW5lXCJdIHtcblx0XHR2ZXJ0aWNhbC1hbGlnbjogc3VwZXI7XG5cdH1cblxuXHQmLS10ZXh0QWxpZ24ge1xuXHRcdC8vIHZlcnRpY2FsLWFsaWduOiBzdWI7XG5cdFx0bGluZS1oZWlnaHQ6IGluaGVyaXQ7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xuXHRcdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG5cdH1cblxuXHQmLS10ZXh0TGdBbGlnbiB7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XG5cdH1cblxuXHQmLS1idXR0b25BbGlnbiB7XG5cdFx0bGluZS1oZWlnaHQ6IGluaGVyaXQ7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xuXHRcdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG5cdH1cblxuXHQmLS1mb3JtQWxpZ24ge1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHR2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuXHR9XG5cblx0Ji0tbWVkaWFBbGlnbiB7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVZKHJlbSgtNCkpO1xuXHR9XG59XG5cbi8vLyBJY29uIGFsaWdubWVudCBmaXhlc1xuLy8vIEBkZXNjcmlwdGlvbiBGaXggZm9yIGljb25zIGluc2lkZSBidXR0b25zIHdpdGggdGV4dCBhbmQgaWNvbnMgaW5zaWRlIHRhYnMuXG5cbi8vIC4jeyRuYW1lc3BhY2V9YnV0dG9uIC4jeyRuYW1lc3BhY2V9SWNvbiB7XG4vLyAgIHZlcnRpY2FsLWFsaWduOiBzdWI7XG4vLyB9XG4vL1xuLy8gLiN7JG5hbWVzcGFjZX10YWJzLW5hdl9faXRlbSAuI3skbmFtZXNwYWNlfWljb24ge1xuLy8gICB2ZXJ0aWNhbC1hbGlnbjogc3ViO1xuLy8gfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDT01QT05FTlQ6IENPVkVSIElNQUdFXG4vLyBAVVJMOiBodHRwOi8vbmljb2xhc2dhbGxhZ2hlci5jb20vZmxleGlibGUtY3NzLWNvdmVyLWltYWdlcy9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gMS4gVG8gZW5hYmxlIHVzZSB3LyAnLkZsZXhFbWJlZCdcbkBtaXhpbiBjb3ZlckltYWdlKCRkYXJrSW5zaWRlOiBmYWxzZSkge1xuXHRAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbjtcblx0YmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcblx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblx0YmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGhlaWdodDogMTAwJTsgLy8gMS5cblx0Ly8gbWF4LWhlaWdodDogcmVtKDYwMCk7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHQvLyBwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdEBpZiAkZGFya0luc2lkZSB7XG5cdFx0JjpiZWZvcmUge1xuXHRcdFx0QGluY2x1ZGUgby1wb3NGdWxsU2NyZWVuKGFic29sdXRlKTtcblx0XHRcdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAxICkgMCUsIHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAwLjIgKSAxMDAlKTtcblx0XHRcdGJhY2tncm91bmQtYmxlbmQtbW9kZTogbXVsdGlwbHk7XG5cdFx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRcdG9wYWNpdHk6IDE7XG5cdFx0XHQvLyB6LWluZGV4OiAtMTtcblx0XHR9XG5cblx0fSBAZWxzZSB7XG5cdFx0Y29udGVudDogbm9uZTtcblx0fVxuXG5cdC8vIGluIGNhc2UgdGhlIC5vLWNvdmVySW1hZ2UgaXMgaXRzZWxmIGEgbGlua1xuXHQmI3thfSB7XG5cdFx0Ly8gQGluY2x1ZGUgdS1saW5rKG5vbmUpO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuXG5cdH1cbn1cblxuLm8tY292ZXJJbWFnZSB7XG5cdEBpbmNsdWRlIGNvdmVySW1hZ2UoKTtcbn1cblxuLm8tY292ZXJJbWFnZS0tZGFyayB7XG5cdEBpbmNsdWRlIGNvdmVySW1hZ2UodHJ1ZSk7XG59XG5cbi5vLWNvdmVySW1hZ2UtLWJsZW5kcyB7XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkge1xuXHQgICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiAwO1xuXHR9XG59XG5cbi5vLWNvbnRhaW5JbWFnZSB7XG5cdEBpbmNsdWRlIGNvdmVySW1hZ2UoKTtcblx0YmFja2dyb3VuZC1zaXplOiBjb250YWluO1xufVxuIiwiXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gT0JKRUNUOiBPQkpFQ1QtRklUIElNQUdFXG4vLyBAVVJMOiBodHRwOi8vY29kZXBlbi5pby9yb2JpbnJlbmRsZS9wZW4vQnl3TlZYP2VkaXRvcnM9MDEwMFxuLy8gUmVxcyBJRS9FZGdlIGZhbGxiYWNr4oCmXG4vLyBAVVJMOiBodHRwczovL21lZGl1bS5jb20vQHByaW1vemNpZ2xlci9uZWF0LXRyaWNrLWZvci1jc3Mtb2JqZWN0LWZpdC1mYWxsYmFjay1vbi1lZGdlLWFuZC1vdGhlci1icm93c2Vycy1hZmJjNTNiYmIyYzMjLmJzODA5anI4Z1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQVBJXG4vLy5vYmplY3QtZml0X2ZpbGwgeyBvYmplY3QtZml0OiBmaWxsIH1cbi8vLm9iamVjdC1maXRfY29udGFpbiB7IG9iamVjdC1maXQ6IGNvbnRhaW4gfVxuLy8ub2JqZWN0LWZpdF9jb3ZlciB7IG9iamVjdC1maXQ6IGNvdmVyIH1cbi8vLm9iamVjdC1maXRfbm9uZSB7IG9iamVjdC1maXQ6IG5vbmUgfVxuLy8ub2JqZWN0LWZpdF9zY2FsZS1kb3duIHsgb2JqZWN0LWZpdDogc2NhbGUtZG93biB9XG5cbkBtaXhpbiBPYmplY3RGaXQoKSB7XG5cdC8vQGluY2x1ZGUgYmFzZVRyYW5zaXRpb247XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4vLyBGb3IgdXNlIHdpdGggRmxleEVtYmVkXG4uRmxleEVtYmVkLWZpdEltYWdlIHsgQGluY2x1ZGUgT2JqZWN0Rml0KCk7IH1cblxuLy8gVG8gZGFya2VuIGxpa2UgJ0NvdmVySW1hZ2UtLWRhcmsnXG4uRmxleEVtYmVkLWNvbnRlbnQtLWRhcmsge1xuICAgICY6YmVmb3JlIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSggcGFsZXR0ZShicmFuZCksIDAuOSApIDAlLCByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMCApIDEwMCUpO1xuICAgICAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuICAgICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIC8vIHotaW5kZXg6IC0xO1xuICAgIH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBURVhUIFRZUE9HUkFQSFlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQ29tbW9uIHRoZW1l4oCmXG5cbi8vIEEgbm90ZSBvbiBtaXhpbiBwYXJhbWV0ZXJzLlxuLy8gUmVxdWlyZWQgcGFyYW1ldGVycyBtdXN0IHByZWNlZCBvcHRpb25hbCBwYXJhbWV0ZXJzLlxuLy8gVG8gdXNlIHBhcmFtZXRlciA0LCB5b3UgbXVzdCBoYXZlIGEgdmFsdWUgZm9yIGVhY2hcbi8vIHByZWNlZGluZyByZXF1aXJlZCBwYXJhbWV0ZXIuIE9yIGxpc3QgdGhlIHBhcmFtZXRlclxuLy8gdmFsdWUgYWZ0ZXIgaXQncyBrZXkgbmFtZSAobGlrZSBiZWxvdykuXG4vLyBAbWl4aW4gdGV4dFNtKCkge1xuLy8gXHRAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG4vLyBcdFx0VGV4dC0tc20sXG4vLyBcdFx0JG1peGluTGV0dGVyU3BhY2luZzogMC4wMWVtXG4vLyBcdCk7XG4vLyB9XG5cbkBtaXhpbiB0ZXh0VGVtcGxhdGUoXG5cdCRtaXhpblNpemU6IHRleHQsXG5cdCRtaXhpbkNvbG9yOiBwYWxldHRlKHRleHQpLFxuXHQkbWl4aW5Gb250OiAkZm9udC10ZXh0LXJlZ3VsYXIsXG5cdCRtaXhpbkxldHRlclNwYWNpbmc6IDAsXG5cdCRtaXhpbkxpbmVIZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0LXVuaXRcbikge1xuXG5cdC8vIHN0YW5kYXJkc1xuXHRjb2xvcjogJG1peGluQ29sb3I7XG5cdGZvbnQtZmFtaWx5OiAkbWl4aW5Gb250O1xuXHRsZXR0ZXItc3BhY2luZzogJG1peGluTGV0dGVyU3BhY2luZztcblx0bGluZS1oZWlnaHQ6ICRtaXhpbkxpbmVIZWlnaHQ7XG5cblx0Ly8gc2l6ZXNcblx0Zm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCB4cyk7XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCBzbSk7IH1cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkgeyBmb250LXNpemU6IGZvbnRzaXplKCRtaXhpblNpemUsIHJnKTsgfVxuXG5cdC8vIHZlcnkgc3BlY2lmaWMgY2hpbGRyZW5cblx0PiBsaSxcblx0PiBsaSBhLFxuXHQ+IGEge1xuXHRcdGNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdFx0Ly9mb250LWZhbWlseTogaW5oZXJpdDtcblx0XHRmb250LXNpemU6IGluaGVyaXQ7XG5cdFx0bWFyZ2luOiAwO1xuXHR9XG59XG5cblxuLy8gVGV4dCBjb21wb25lbnRzIGJ5IHNpemXigKZcblxuQG1peGluIHRleHRYcygpIHtcbiAgICBAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG4gICAgJG1peGluU2l6ZTogdGV4dC0teHMsXG4gICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4wMjVlbVxuICAgICk7XG59XG5cbkBtaXhpbiB0ZXh0U20oKSB7XG4gICAgQGluY2x1ZGUgdGV4dFRlbXBsYXRlKFxuICAgICRtaXhpblNpemU6IHRleHQtLXNtLFxuICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDI1ZW1cbiAgICApO1xufVxuXG5AbWl4aW4gdGV4dFJnKCkge1xuXHRAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG4gICAgICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDEyNWVtXG4gICAgKTtcbn1cblxuQG1peGluIHRleHRMZygpIHtcblx0QGluY2x1ZGUgdGV4dFRlbXBsYXRlKFxuXHRcdCRtaXhpblNpemU6IHRleHQtLWxnLFxuICAgIFx0JG1peGluRm9udDogJGZvbnQtdGV4dC1tZWRpdW0sXG4gICAgICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDEyNWVtLFxuICAgIFx0JG1peGluTGluZUhlaWdodDogMS4zNVxuXHQpO1xufVxuXG4vLyBNZXRhIHRleHRz4oCmXG5cbkBtaXhpbiB0ZXh0TWV0YSgpIHtcblx0QGluY2x1ZGUgdGV4dFRlbXBsYXRlKFxuICAgIFx0JG1peGluU2l6ZTogdGV4dC0tbWV0YSxcbiAgICBcdCRtaXhpbkZvbnQ6ICRmb250LXRleHQtYm9sZCxcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4wNzVlbVxuICAgICk7XG4gICAgbWFyZ2luLWJvdHRvbTogJHBhcmFncmFwaFNwYWNlICogMC41O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbkBtaXhpbiB0ZXh0TWV0YUhlYWRsaW5lKCkge1xuICAgIEBpbmNsdWRlIHRleHRUZW1wbGF0ZShcbiAgICAgICAgJG1peGluQ29sb3I6IHBhbGV0dGUobWVkaXVtKSxcbiAgICAgICAgJG1peGluU2l6ZTogdGV4dC0teHMsXG4gICAgICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDc1ZW0sXG4gICAgICAgICRtaXhpbkxpbmVIZWlnaHQ6IDEuOTZcbiAgICApO1xuICAgIC8vbWFyZ2luLWJvdHRvbTogJHBhcmFncmFwaFNwYWNlICogMC4yNTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG5AbWl4aW4gdGV4dEFzaWRlIHtcbiAgICBAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG4gICAgXHQkbWl4aW5TaXplOiB0ZXh0LS1zbSxcbiAgICBcdCRtaXhpbkZvbnQ6ICRmb250LXRleHQtbWVkaXVtLFxuICAgICAgICAkbWl4aW5MZXR0ZXJTcGFjaW5nOiAwLjA3NWVtXG4gICAgKTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG5cblxuXG4vLyBDb21wb25lbnQ6IFRleHRcbi8vIEluaXRpYXRlIG1peGlucyBpbiBjbGFzc2VzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtdGV4dC0teHMgICAgICAgeyBAaW5jbHVkZSB0ZXh0WHMoKTsgfVxuLmMtdGV4dC0tc20gICAgICAgeyBAaW5jbHVkZSB0ZXh0U20oKTsgfVxuLmMtdGV4dCAgICAgICAgICAgeyBAaW5jbHVkZSB0ZXh0UmcoKTsgfVxuLmMtdGV4dC0tbWVkaXVtICAgeyBAaW5jbHVkZSB0ZXh0UmcoKTsgY29sb3I6IHBhbGV0dGUobWVkaXVtKTsgfVxuLmMtdGV4dC0taW50cm8gICAgeyBAaW5jbHVkZSB0ZXh0UmcoKTsgY29sb3I6IHBhbGV0dGUobWVkaXVtKTsgbWFyZ2luLWJvdHRvbTogc3BhY2UoMC41KTsgfVxuLy8uYy10ZXh0LS1sZyAgICAgICB7IEBpbmNsdWRlIHRleHRMZygpOyBtYXJnaW4tYm90dG9tOiAwOyA+IHN0cm9uZyB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWV4dHJhYm9sZDsgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7IH0gfVxuLmMtdGV4dC0tYXNpZGUgeyBAaW5jbHVkZSB0ZXh0QXNpZGUoKTsgfVxuXG5cblxuXG4uYy10ZXh0LS1tZXRhIHtcblx0QGluY2x1ZGUgdGV4dFNtKCk7XG5cdGNvbG9yOiBwYWxldHRlKG1lZGl1bSkgIWltcG9ydGFudDtcblx0Ly8gdGV4dC1hbGlnbjogY2VudGVyO1xuXG5cdD4gYSB7XG5cdFx0Ym9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuXG5cdFx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0XHRib3JkZXItY29sb3I6IHBhbGV0dGUobWVkaXVtKSAhaW1wb3J0YW50O1xuXHRcdH1cblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRtYXJnaW46IGF1dG87XG5cdFx0Ly8gd2lkdGg6IDcwJTtcblx0fVxufVxuXG5cblxuLy8gQ29tcG9uZW50OiBUZXh0IGJsb2Nrc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtdGV4dC1ibG9jayB7ID4gKiB7IEBpbmNsdWRlIHRleHRSZygpOyB9IH1cblxuLmMtdGV4dC1ibG9jay0tZm9vdGVyIHtcblx0QGluY2x1ZGUgbGlzdENsZWFuKCk7XG5cdG1hcmdpbjogMDtcblxuXHQmOjpiZWZvcmUge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHJnYmEoIHBhbGV0dGUoYmFja2dyb3VuZCksIDAuMik7XG5cdFx0Y29udGVudDogXCIgXCI7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0aGVpZ2h0OiAxcHg7XG5cdFx0bWFyZ2luOiBzcGFjZSgxKSAwIHNwYWNlKDEuMTUpO1xuXHRcdHdpZHRoOiAyLjUlO1xuXHR9XG5cblx0PiAqIHtcblx0XHRAaW5jbHVkZSB0ZXh0UmcoKTtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHR9XG59XG5cblxuXG5cbi8vIENvbXBvbmVudDogbGlzdFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy9saXN0IGNlbGwgb2YgZml4ZWQgd2lkdGgsIGxpa2UgYSB0YWJiZWQgaW5mbyBlbGVtZW50XG4uYy1saXN0LS1pdGVtVGFnIHtcblx0QGluY2x1ZGUgdGV4dFNtKCk7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0d2lkdGg6IHNwYWNlKDAuNzUpO1xufVxuXG4uYy1saXN0LS1tZXRhIHtcblx0QGluY2x1ZGUgdGV4dFNtKCk7XG5cdEBpbmNsdWRlIGxpc3RDbGVhbigpO1xuXHRjb2xvcjogcGFsZXR0ZShtZWRpdW0pO1xuXHRtYXJnaW4tYm90dG9tOiBzcGFjZSgxLjI1KTtcbn1cblxuLmMtbGlzdC0tbWV0YS10aXRsZSB7XG5cdGNvbG9yOiBwYWxldHRlKHRleHQpICFpbXBvcnRhbnQ7XG5cdG1hcmdpbjogc3BhY2UoMS4yNSkgMCBzcGFjZSgwLjYyNSkgIWltcG9ydGFudDtcblxuXHQmOmZpcnN0LWNoaWxkIHtcblx0XHRtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG5cdH1cbn1cblxuXG5cbi8vIFV0aWxpdHk6IHdlaWdodHMgJiBpdGFsaWNzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4udS10ZXh0V3RMdCAgICAgICAgeyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1saWdodCAhaW1wb3J0YW50OyB9XG4udS10ZXh0V3RSZyAgICAgICAgeyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1yZWd1bGFyICFpbXBvcnRhbnQ7IH1cbi51LXRleHRXdE1kICAgICAgICB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LW1lZGl1bSAhaW1wb3J0YW50OyB9XG4vLy51LXRleHRXdFNlbWkgICAgICB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXNlbWlib2xkICFpbXBvcnRhbnQ7IH1cblxuLy8udS10ZXh0RW1SZyAgICAgICAgeyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1yZWd1bGFyLWkgIWltcG9ydGFudDsgfVxuLy8udS10ZXh0RW1NZCAgICAgICAgeyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1tZWRpdW0taSAhaW1wb3J0YW50OyB9XG5cblxuXG4vLyBVdGlsaXR5OiBIVE1MIGVsZW1lbnRzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxuLy8gYmxvY2txdW90ZSwgZmlndXJlXG4vLyBsaVxudWwsIG9sLCBkbCxcbnAsIGFkZHJlc3MsXG50YWJsZSwgdGltZSxcbmZpZWxkc2V0LCBmaWdjYXB0aW9uLFxucHJlLCBhIHtcblx0QGluY2x1ZGUgdGV4dFJnKCk7XG59XG5cbmVtLFxuLnUtdGV4dEVtIHtcblx0QGluY2x1ZGUgdHlwZVJlc2V0KCk7XG5cdC8vZm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9sZC1pO1xufVxuXG5iLFxuc3Ryb25nLFxuLnUtdGV4dEJvbGQge1xuXHRAaW5jbHVkZSB0eXBlUmVzZXQoKTtcbiAgICBAaW5jbHVkZSB0ZXh0TWV0YSgpO1xuXHQvL2ZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG59XG5cbmJsb2NrcXVvdGUsXG4uQmxvY2txdW90ZSB7XG5cdC8vIGlzIHRoaXMgcmVxJ2Q/XG5cdC8vIEBpbmNsdWRlIHR5cGVSZXNldCgpO1xuXHRjb2xvcjogcGFsZXR0ZShtZWRpdW0pO1xuXHRmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib29rO1xuXHRmb250LXNpemU6IGZvbnRzaXplKHRleHQsIHhzKTtcblx0bWFyZ2luLWJvdHRvbTogc3BhY2UoMC43NSk7XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuXHRcdGZvbnQtc2l6ZTogZm9udHNpemUodGV4dCwgc20pO1xuXHRcdG1hcmdpbi1ib3R0b206IHNwYWNlKDEpO1xuXHR9XG59XG5cbi8vIC5MZWRlIHtcbi8vIFx0QGluY2x1ZGUgdGV4dFJnKCk7XG4vLyBcdGNvbG9yOiBjb2xvcih0ZXh0LCBicmFuZCkgIWltcG9ydGFudDtcbi8vIFx0Zm9udC1mYW1pbHk6ICRmb250LXRleHQtcmVndWxhcjtcbi8vIFx0Zm9udC1zaXplOiBmb250c2l6ZShoZWFkbGluZSwgeHMpO1xuLy8gXHRsaW5lLWhlaWdodDogMS40NTtcbi8vIFx0Ly8gbWFyZ2luLWJvdHRvbTogc3BhY2UoMSk7XG4vL1xuLy8gXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4vLyBcdFx0Zm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9sZDtcbi8vIFx0XHRmb250LXNpemU6IGZvbnRzaXplKGhlYWRsaW5lLCBiYXNlKTtcbi8vIFx0XHRsaW5lLWhlaWdodDogJGJhc2UtbGluZS1oZWlnaHQtdW5pdDtcbi8vIFx0fVxuLy8gfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIEhFQURMSU5FIFRZUE9HUkFQSFlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQ29tbW9uIHRoZW1l4oCmXG5cbkBtaXhpbiBoZWFkbGluZVRlbXBsYXRlKFxuXHQkbWl4aW5TaXplOiBoZWFkbGluZSxcblx0JG1peGluQ29sb3I6IHBhbGV0dGUodGV4dCksXG5cdCRtaXhpbkZvbnQ6ICRmb250LXRleHQtbWVkaXVtLFxuXHQkbWl4aW5MZXR0ZXJTcGFjaW5nOiAwLFxuXHQkbWl4aW5MaW5lSGVpZ2h0OiAxLjI1LFxuXHQkbWl4aW5NYXJnaW5Cb3R0b206IDBcbikge1xuXG5cdC8vIHN0YW5kYXJkc1xuXHRjb2xvcjogJG1peGluQ29sb3I7XG5cdGZvbnQtZmFtaWx5OiAkbWl4aW5Gb250O1xuXHRsZXR0ZXItc3BhY2luZzogJG1peGluTGV0dGVyU3BhY2luZztcblx0bGluZS1oZWlnaHQ6ICRtaXhpbkxpbmVIZWlnaHQ7XG5cdC8vbWFyZ2luLWxlZnQ6IGF1dG87XG5cdC8vbWFyZ2luLXJpZ2h0OiBhdXRvO1xuXHRtYXJnaW4tYm90dG9tOiAkbWl4aW5NYXJnaW5Cb3R0b207XG5cdHRleHQtYWxpZ246IGxlZnQ7XG5cblx0Ly8gc2l6ZXNcblx0Zm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCB4cyk7XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCBzbSk7IH1cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBmb250LXNpemU6IGZvbnRzaXplKCRtaXhpblNpemUsIGxnKTsgfVxuXG5cdC8vIGNoaWxkcmVuXG5cdD4gbGksXG5cdD4gbGkgYSxcblx0PiBhIHtcblx0XHRib3JkZXItYm90dG9tOiAwO1xuXHRcdGNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cdFx0Zm9udC1zaXplOiBpbmhlcml0O1xuXHRcdG1hcmdpbjogMDtcblx0fVxufVxuXG5cbi8vIENvbXBvbmVudCBieSBzaXpl4oCmXG5cbkBtaXhpbiBkaXNwbGF5KCkge1xuICAgIEBpbmNsdWRlIGhlYWRsaW5lVGVtcGxhdGUoXG4gICAgICAgICRtaXhpbkxldHRlclNwYWNpbmc6IC0wLjAwNWVtLFxuICAgICAgICAkbWl4aW5MaW5lSGVpZ2h0OiAxLjEsXG4gICAgICAgICRtaXhpblNpemU6IGRpc3BsYXlcbiAgICApO1xufVxuXG5AbWl4aW4gaGVhZGxpbmUoKSB7XG5cdEBpbmNsdWRlIGhlYWRsaW5lVGVtcGxhdGUoXG5cdFx0JG1peGluU2l6ZTogaGVhZGxpbmUsXG4gICAgICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMjVlbVxuXHQpO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbkBtaXhpbiBoZWFkbGluZU1kKCkge1xuICAgIEBpbmNsdWRlIGhlYWRsaW5lVGVtcGxhdGUoXG4gICAgXHQkbWl4aW5Gb250OiAkZm9udC10ZXh0LXJlZ3VsYXIsXG4gICAgICAgICRtaXhpblNpemU6IGhlYWRsaW5lLS14cyxcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4yNWVtXG4gICAgKTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG5AbWl4aW4gaGVhZGxpbmVTbSgpIHtcbiAgICBAaW5jbHVkZSBoZWFkbGluZVRlbXBsYXRlKFxuICAgICAgICAkbWl4aW5TaXplOiBoZWFkbGluZS0tc20sXG4gICAgICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMTI1ZW0sXG4gICAgXHQkbWl4aW5MaW5lSGVpZ2h0OiAxLjVcbiAgICApO1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LW1lZGl1bTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG5AbWl4aW4gaGVhZGxpbmVYcygpIHtcbiAgICBAaW5jbHVkZSBoZWFkbGluZVRlbXBsYXRlKFxuICAgICAgICAkbWl4aW5TaXplOiB0ZXh0LS1zbSxcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4xZW1cbiAgICApO1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LW1lZGl1bTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG59XG5cblxuXG5cbi8vIENvbXBvbmVudDogaGVhZGxpbmVcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5jLWRpc3BsYXkgICAgICAgICAgeyBAaW5jbHVkZSBkaXNwbGF5KCk7IH1cbi5jLWhlYWRsaW5lICAgICAgICAgeyBAaW5jbHVkZSBoZWFkbGluZSgpOyB9XG4uYy1oZWFkbGluZS0tbWQgICAgIHsgQGluY2x1ZGUgaGVhZGxpbmVNZCgpOyB9XG4uYy1oZWFkbGluZS0tc20gICAgIHsgQGluY2x1ZGUgaGVhZGxpbmVTbSgpOyB9XG4uYy1oZWFkbGluZS0teHMgICAgIHsgQGluY2x1ZGUgaGVhZGxpbmVYcygpOyB9XG5cblxuLmMtaGVhZGxpbmUgZW0ge1xuXHRmb250LWZhbWlseTogaW5oZXJpdDtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xuXHRmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG5cblxuXG5cblxuLy8gQ29tcG9uZW50OiBoZWFkbGluZSBibG9ja3MuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyAuSGVhZGxpbmUtYmxvY2sgeyA+ICogeyBAaW5jbHVkZSBoZWFkbGluZSgpOyB9IH1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBUWVBFIE1JWElOIEhFTFBFUlNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gVGV4dCBzaXplc+KAplxuLy8gTWFwIGtleSBtdXN0IGVxdWFsIGNsYXNzIG5hbWUuXG4vLyBUT0RPIDE2MDYzMDogaWYgbm8gb3RoZXIgYnJlYWtwb2ludHMsIG51bGwuXG5cbkBtaXhpbiB0ZXh0U2l6ZShcblx0JG1peGluU2l6ZTogVGV4dFxuKSB7XG5cdGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgeHMpO1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgc20pOyB9XG59XG5cblxuLy8gVGV4dCBibG9jayBtaXhpbnPigKZcblxuQG1peGluIHJldmVyc2VUZXh0QmxvY2sge1xuXHRoMSxcblx0cCxcblx0dWwge1xuXHRcdGNvbG9yOiBwYWxldHRlKGxpZ2h0KSAhaW1wb3J0YW50O1xuXHR9XG59XG5cbi8vLmMtdGV4dC1ibG9jay0tcmV2ZXJzZSB7IEBpbmNsdWRlIHJldmVyc2VUZXh0QmxvY2soKTsgfVxuXG5AbWl4aW4gY2VudGVyVGV4dEJsb2NrIHtcblx0aDEsXG5cdHAsXG5cdHVsIHtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcblx0fVxufVxuXG4vLy5jLXRleHQtYmxvY2stLWNlbnRlciB7IEBpbmNsdWRlIGNlbnRlclRleHRCbG9jaygpOyB9XG5cbkBtaXhpbiBoZWFkZXJUZXh0QmxvY2sge1xuXHRoMSB7IG1hcmdpbi1ib3R0b206IHNwYWNlKDAuMik7IH1cblx0cCAgeyBtYXJnaW4tYm90dG9tOiBzcGFjZSgwLjM1KTsgfVxufVxuXG4vLy5jLXRleHQtYmxvY2stLWhlYWRlciB7IEBpbmNsdWRlIGhlYWRlclRleHRCbG9jaygpOyB9XG5cblxuLy8gQmFzZSBzcGFjZXIgcnVsZXM/XG4vLyBwICsgaDIgeyBtYXJnaW4tdG9wOiAkc3BhY2UgKiAxLjc1OyB9XG5cbi51LXBTcGFjZSB7XG4gICAgLy9tYXJnaW4tdG9wOlxufVxuXG4vL3AgKyBjaXRlIHsgbWFyZ2luLXRvcDogc3BhY2UoMSk7IH1cbmgyICsgaDMgIHsgbWFyZ2luLXRvcDogc3BhY2UoMC4yKTsgfVxuaDMgKyBwICAgeyBtYXJnaW4tdG9wOiBzcGFjZSgwLjQpOyB9XG5cblxuXG5cblxuXG5cblxuXG5cblxuLy8gQXR0ZW1wdHMgYXQgQGVhY2ggbG9vcHMgb24gc2FzcyBtYXBzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBMb29wIHRocnUgc2l6ZXPigKZcblxuLy8gQGVhY2ggJGJyZWFrcG9pbnQgaW4gbWFwLWtleXMoJGdyaWQtYnJlYWtwb2ludHMpIHtcbi8vIFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkYnJlYWtwb2ludCkge1xuLy8gXHRcdC51LSN7JGJyZWFrcG9pbnR9LXRleHRMZWZ0ICAgICAgICAgICAgIHsgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50OyB9XG4vLyBAZWFjaCAkdGhlbWUgaW4gbWFwLWtleXMoIG1hcC1nZXQoJGNvbmZpZywgXCJ0aGVtZXNcIikgKSB7XG5cbi8vIHRoaXMgZGlkbid0IHdvcmtcblxuLy8gQGVhY2ggJGluY3JlbWVudCBpbiBtYXAta2V5cygkZm9udHNpemUpIHtcbi8vXG4vLyBcdC4jeyRpbmNyZW1lbnR9IHtcbi8vXG4vLyBcdFx0QGVhY2ggJHJlc3BvbnNlIGluIG1hcC12YWx1ZXMoIG1hcC1nZXQoJGZvbnRzaXplLCAkaW5jcmVtZW50KSApIHtcbi8vXG4vLyBcdFx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRyZXNwb25zZSkgeyBmb250LXNpemU6IGZvbnRzaXplKCRpbmNyZW1lbnQsICRyZXNwb25zZSk7IH1cbi8vIFx0XHRcdC8vIGZvbnQtc2l6ZTogZm9udHNpemUoJGluY3JlbWVudCwgJHJlc3BvbnNlKTtcbi8vIFx0XHRcdC8vIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHsgZm9udC1zaXplOiBmb250c2l6ZSgkaW5jcmVtZW50LCBtZCk7IH1cbi8vXG4vLyBcdFx0fVxuLy8gXHR9XG4vL1xuLy8gfVxuXG5cbi8vIExvb3AgdGhydSBzaXplc+KApiBCdXQgSSBuZWVkIG1peGlucyBmaXJzdCwgbm90IGNsYXNzZXPigKZcblxuLy8gQGVhY2ggJHNpemUgaW4gbWFwLWtleXMoJGZvbnRzaXplKSB7XG4vL1xuLy8gXHQuI3skc2l6ZX0ge1xuLy8gXHRcdGZvbnQtc2l6ZTogbWFwLWZldGNoKCRmb250c2l6ZSwgJHNpemUsIHhzKTtcbi8vIFx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZvbnQtc2l6ZTogbWFwLWZldGNoKCRmb250c2l6ZSwgJHNpemUsIHNtKTsgfVxuLy8gXHR9XG4vL1xuLy8gfVxuIiwiLy8gVXRpbGl0eTogUmVzcG9uc2l2ZSBsaW5lIGJyZWFrXG4vLyBodHRwczovL2Nzcy10cmlja3MuY29tL2luamVjdGluZy1saW5lLWJyZWFrL1xuLy8gMS4gZW11bGF0ZXMgdGV4dC1hbGlnbjogY2VudGVyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24obGcpIHtcbiAgICBzcGFuLnUtbGctbGluZUJyZWFrIHtcbiAgICAgICAgZGlzcGxheTogdGFibGUgIWltcG9ydGFudDtcbiAgICAgICAgbWFyZ2luOiBhdXRvOyAvLyAxLlxuICAgIH1cbn1cblxuQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgIC51LXNtLWxpbmVCcmVhayB7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgICAgIC8vbWFyZ2luOiBhdXRvOyAvLyAxLlxuICAgIH1cbn1cblxuQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgc3Bhbi51LXNtRG93bi1saW5lQnJlYWsge1xuICAgICAgICBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50O1xuICAgICAgICAvL21hcmdpbjogYXV0bzsgLy8gMS5cbiAgICB9XG59XG5cbkBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkge1xuICAgIC51LXNtRG93bi1oaWRlIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBMQVlPVVQ6IEJPRFlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuaHRtbCB7XG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKG5ldXRyYWwpO1xufVxuXG4uYy1oZWFkZXIsXG4uYy1jb250ZW50IHtcbiAgICAvL2JhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYmFja2dyb3VuZCk7XG59XG5cbi5jLWNvbnRlbnQtLXBvc3Qge1xuICAgIHBhZGRpbmctYm90dG9tOiAkYmxvY2tTcGFjZSAqIDEuMjUgIWltcG9ydGFudDtcbn1cblxuXG5cbi5jLWxpc3RQYW5lbCB7XG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKHRleHQpO1xuICAgIC8vcGFkZGluZzogMCAoJGJsb2NrU3BhY2UgKiAwLjc1KTtcbiAgICAvL3BhZGRpbmc6IDAgMnB4O1xufVxuXG4vLyBtYWtlIGJhY2tncm91bmRzIGJsYWNrIGR1cmluZyBpbWFnZSBsb2FkaW5nXG4uYy1jb250ZW50IC5GbGV4RW1iZWQsXG4uYy1wb3N0Q2VsbCAuRmxleEVtYmVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKHRleHQpO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIEhFQURFUiBMQVlPVVRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy91c2UgcGFkZGluZyBzbyB3ZSBjYW4gZ28gZXhhY3RseSAnYmFjayB0byB0b3AnXG4uYy1oZWFkZXIge1xuICAgIHBhZGRpbmc6ICgkYmxvY2tTcGFjZSAqIDAuNikgMCAoJGJsb2NrU3BhY2UgKiAwLjc1KTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICAvL3BhZGRpbmc6ICgkYmxvY2tTcGFjZSAqIDAuNzUpIDA7XG4gICAgfVxufVxuXG4uYy1oZWFkZXItYnJhbmQge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJGJsb2NrU3BhY2UgKiAwLjc1O1xuICAgICAgICAvL21hcmdpbi10b3A6ICRibG9ja1NwYWNlICogMC43NTtcbiAgICB9XG59XG5cbi5jLWhlYWRlci1sb2dvID4gaW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIHdpZHRoOiAxNTBweDtcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xuICAgIH1cbn1cblxuLmMtbmF2IHtcbiAgICAvL0BpbmNsdWRlIGxpc3RJbmxpbmUoKTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMCBzcGFjZSgxLjUpO1xuXG4gICAgLy9AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IG1heC13aWR0aDogY29udGFpbmVyLXdpZHRoKHhsKTsgfVxuICAgIC8vQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBtYXgtd2lkdGg6IG5vbmU7IH1cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7IHBhZGRpbmc6IDAgNCU7IH1cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhsKSB7IHBhZGRpbmc6IDAgMTIlOyB9XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzdSkgeyBwYWRkaW5nOiAwIDE4JTsgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgIC8vIG1vYmlsZSBuYXYgdGFrZXMgb3ZlciBoZXJl4oCmXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG4uYy1uYXYtaXRlbSB7XG4gICAgLy9AaW5jbHVkZSBsaXN0SW5saW5lKCk7XG4gICAgZmxleC1zaHJpbms6IDE7XG4gICAgbWFyZ2luOiAwO1xuXG4gICAgLy8gdGhlbWVcbiAgICBhIHtcbiAgICAgICAgQGluY2x1ZGUgdGV4dEFzaWRlKCk7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9sZCAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNnB4O1xuXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkge1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgY29uY2lzZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLmlzLWFjdGl2ZSB7XG4gICAgICAgIGEge1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiBwYWxldHRlKHRleHQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgb24tZXZlbnQoKSB7XG4gICAgICAgIGEge1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiBwYWxldHRlKHRleHQpO1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9sZDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmMtbmF2LXRyaWdnZXIge1xuICAgIEBpbmNsdWRlIHRleHRBc2lkZSgpO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHBhbGV0dGUobGlnaHQpO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBoZWlnaHQ6IDEwNyU7XG4gICAgcGFkZGluZzogNnB4IDEycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiBzcGFjZSgxKTtcbiAgICB0b3A6IDA7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG4vLyB0aGUgYWRkcmVzcy9vcGVuIHRleHQgaW4gdGhlIGhlYWRlclxuLmMtaGVhZGVyLWluZm9BbGlnbiB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHBhbGV0dGUoYnJhbmQpO1xuICAgIC8vcGFkZGluZy1ib3R0b206ICRibG9ja1NwYWNlICogMC4yO1xuICAgIHBhZGRpbmctYm90dG9tOiA3cHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgN3B4KTtcbn1cblxuLmMtaGVhZGVyLWluZm8ge1xuICAgIEBpbmNsdWRlIHRleHRBc2lkZSgpO1xuICAgIGNvbG9yOiBwYWxldHRlKGJyYW5kKTtcbiAgICAvL2ZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG4gICAgLy9mb250LWZhbWlseTogJGZvbnQtc2VyaWY7XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQ09NUE9ORU5UOiBCTE9HIFBPU1RTXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFBvc3RzIGdyaWQgdXNpbmcgJ2MuZ3JpZCc6XG4vL1xuLy8uby1ncmlkIHtcbi8vICAgIGRpc3BsYXk6IGZsZXg7XG4vLyAgICBmbGV4LXdyYXA6IHdyYXA7XG4vL31cbi8vXG4vLy5vLWdyaWQgPiAqIHtcbi8vICAgIGZsZXg6IDEgMCA1ZW07XG4vL31cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5jLXBvc3RHcmlkID4gKiB7XG4gICAgZmxleC1iYXNpczogNTB2dztcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgLy9mbGV4LWJhc2lzOiBjYWxjKDIwdncgLSAycHgpO1xuICAgICAgICBmbGV4LWJhc2lzOiAyMHZ3O1xuICAgIH1cbn1cblxuLy8gMXB4IGJvcmRlciBmb3IgZWFjaCBjZWxsXG4uYy1wb3N0R3JpZCAuYy1wb3N0Q2VsbDpub3QoOmZpcnN0LWNoaWxkKSxcbi5jLXBvc3RHcmlkLS1pblBvc3QgLmMtcG9zdENlbGw6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgIC5GbGV4RW1iZWQge1xuICAgICAgICBtYXJnaW4tbGVmdDogMXB4O1xuICAgIH1cbn1cblxuLmMtcG9zdEdyaWQgLkZsZXhFbWJlZC1yYXRpbyB7XG4gICAgcGFkZGluZy1ib3R0b206IDI1dmg7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA1MHZoO1xuICAgIH1cbn1cblxuLy8gZm9yIGMtcG9zdC1uZXh0L3ByZXZcbi5jLXBvc3RHcmlkLS1pblBvc3Qge1xuICAgID4gKiB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBmbGV4LWJhc2lzOiAyMCU7IH1cbiAgICB9XG5cbiAgICAuRmxleEVtYmVkLXJhdGlvIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEyLjV2aDtcbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBwYWRkaW5nLWJvdHRvbTogMjV2aDsgfVxuICAgIH1cbn1cblxuXG5cblxuLy8gUG9zdCBjZWxsIGluIGEgbGlzdFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuYS5jLXBvc3RDZWxsIHtcblx0QGluY2x1ZGUgY29tcGxleExpbmsoKTtcblx0Ym9yZGVyOiAwO1xuXHRtYXJnaW4tYm90dG9tOiAxcHg7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHQuYy1wb3N0Q2VsbC1oZWFkbGluZSxcblx0XHQuYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSB7XG5cdFx0XHRAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbigpO1xuXHRcdFx0Y29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuXHRcdH1cblxuICAgICAgICAuYy1pbWFnZUJsZW5kIHtcblx0XHRcdEBpbmNsdWRlIGJhc2VUcmFuc2l0aW9uKCk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCBwYWxldHRlKHRleHQpLCAwLjg4ICk7XG4gICAgICAgIH1cblx0fVxufVxuXG4uYy1wb3N0Q2VsbC1oZWFkbGluZSxcbi5jLXBvc3RDZWxsLXN1YmhlYWRsaW5lIHtcblx0QGluY2x1ZGUgYmFzZVRyYW5zaXRpb24oKTtcbiAgICBAaW5jbHVkZSB0ZXh0QXNpZGUoKTtcbiAgICBjb2xvcjogcGFsZXR0ZSh3aGl0ZSk7XG4gICAgcGFkZGluZzogMCAxNSU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgIG1hcmdpbi10b3A6IHNwYWNlKDAuMjUpO1xuICAgIH1cbn1cblxuLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXI7XG59XG5cblxuXG4vLyBQb3N0IGhlcm9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5GbGV4RW1iZWQtcmF0aW8tLWhlcm8ge1xuICAgIHBhZGRpbmctYm90dG9tOiA5MCU7XG4gICAgcGFkZGluZy1ib3R0b206IDkwJTtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7IHBhZGRpbmctYm90dG9tOiA1MHZoOyB9XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4bCkgeyBwYWRkaW5nLWJvdHRvbTogNTAlOyBwYWRkaW5nLWJvdHRvbTogODEuNXZoOyB9XG59XG5cbi5jLXBvc3QtaGdyb3VwIHtcbiAgICBtYXJnaW46ICgkYmxvY2tTcGFjZSAqIDAuNzUpIDA7XG5cbiAgICAmLS1jZW50ZXIge1xuICAgICAgICAuYy1wb3N0LWhlYWRsaW5lIHtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjQ1ZW07XG4gICAgICAgIH1cblxuICAgICAgICAuYy1wb3N0LXN1YmhlYWRsaW5lIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGhlYWRsaW5lU20oKTtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG4gICAgICAgIH1cblxuICAgICAgICAuYy1wb3N0LWhlYWRsaW5lLFxuICAgICAgICAuYy1wb3N0LXN1YmhlYWRsaW5lIHtcbiAgICAgICAgICAgIGNvbG9yOiBwYWxldHRlKHdoaXRlKTtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiA1JTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmMtcG9zdC1oZWFkbGluZSB7XG4gICAgQGluY2x1ZGUgaGVhZGxpbmUoKTtcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxufVxuXG4uYy1wb3N0LXN1YmhlYWRsaW5lIHtcbiAgICBtYXJnaW4tdG9wOiBzcGFjZSgwLjUpO1xuXG4gICAgcCB7XG4gICAgICAgIEBpbmNsdWRlIHRleHRNZXRhKCk7XG4gICAgICAgIGNvbG9yOiBwYWxldHRlKG1lZGl1bSk7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxufVxuXG4vLy5jLXBvc3QtZW5kbGluZSB7XG4vLyAgICBAaW5jbHVkZSB0ZXh0WHMoKTtcbi8vICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBwYWxldHRlKGxpZ2h0KTtcbi8vICAgIGNvbG9yOiBwYWxldHRlKG1lZGl1bSk7XG4vLyAgICBtYXJnaW4tdG9wOiAkcGFyYWdyYXBoU3BhY2UgKiAyO1xuLy8gICAgcGFkZGluZy10b3A6IHNwYWNlKDAuNSk7XG4vL1xuLy8gICAgYSB7XG4vLyAgICAgICAgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygpO1xuLy8gICAgfVxuLy99XG5cblxuXG5cblxuLy8gUG9zdCBhcnRpY2xlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uYy1wb3N0LWFydGljbGUge1xuICAgIG1hcmdpbi10b3A6ICgkYmxvY2tTcGFjZSAqIDAuNzUpO1xuICAgIG1hcmdpbi10b3A6ICgkYmxvY2tTcGFjZSAqIDEuMjUpO1xufVxuXG4ucy1wb3N0IHtcbiAgICBwLFxuICAgIHVsLFxuICAgIGEge1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtc2VyaWY7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICAgIH1cblxuICAgIHA6Zmlyc3QtY2hpbGQge1xuICAgICAgICAvL0BpbmNsdWRlIHRleHRMZygpO1xuICAgICAgICAvL2ZvbnQtZmFtaWx5OiAkZm9udC1zZXJpZjtcblxuICAgICAgICAvL0BpbmNsdWRlIGhlYWRsaW5lU20oKTtcbiAgICAgICAgLy9mb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgICAgICAvL21hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC43NSAqIDAuNTtcblxuXG4gICAgICAgIC8vZm9udC1zaXplOiAyN3B4O1xuICAgICAgICAvL2xldHRlci1zcGFjaW5nOiAwLjAxMjVlbTtcbiAgICAgICAgLy9saW5lLWhlaWdodDogMS4zNTtcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgICAgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygpO1xuICAgIH1cblxuICAgIC8vIGNhcGl0YWxpc2VkIGJvbGQgc2Fuc1xuICAgIHN0cm9uZyB7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgfVxuXG5cdGgyIHtcblx0XHQvL0BpbmNsdWRlIHRleHRSZygpO1xuICAgICAgICBAaW5jbHVkZSBoZWFkbGluZVNtKCk7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICAgICAgd2lkdGg6IDg1JTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogJGJsb2NrU3BhY2UgKiAwLjc1O1xuXHRcdH1cblxuICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJHBhcmFncmFwaFNwYWNlO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJGJsb2NrU3BhY2UgKiAwLjc1ICogMC41O1xuXHRcdH1cblx0fVxuXG4gICAgaHIge1xuICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBwYWxldHRlKGxpZ2h0KTtcblx0XHRtYXJnaW46ICRwYXJhZ3JhcGhTcGFjZSAqIDIgMDtcbiAgICB9XG5cbiAgICBibG9ja3F1b3RlIHAge1xuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHBhbGV0dGUobXV0ZWQpO1xuICAgICAgICBjb2xvcjogcGFsZXR0ZShtZWRpdW0pO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IHNwYWNlKDEpO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAkZ3V0dGVyU3BhY2UgKiAyO1xuICAgIH1cblxufVxuXG5cblxuXG5cblxuXG5cblxuLy8gUG9zdCBhc2lkZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8ucy1hc2lkZSB7XG4vLyAgICBib3JkZXI6IDFweCBzb2xpZCBwYWxldHRlKHRleHQpO1xuLy8gICAgcGFkZGluZzogc3BhY2UoMC4yNSkgc3BhY2UoMC41KSBzcGFjZSgwLjUpO1xuLy99XG5cbi5jLXBvc3QtbWV0YSB7XG4gICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHBhbGV0dGUobGlnaHQpO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAkYmxvY2tTcGFjZSAqIDAuMjtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICRibG9ja1NwYWNlICogMC4yO1xuICAgIH1cblxuICAgIHNwYW4sXG4gICAgc3BhbiBhLFxuICAgIGxpIHtcbiAgICAgICAgQGluY2x1ZGUgdGV4dE1ldGFIZWFkbGluZSgpO1xuICAgIH1cblxuICAgIHAge1xuICAgICAgICBAaW5jbHVkZSB0ZXh0TWV0YSgpO1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1tZWRpdW07XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuXG4gICAgdWwge1xuICAgICAgICAvL2xpc3Qtc3R5bGUtdHlwZTogZGlzYztcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiB1cHBlci1yb21hbjtcbiAgICAgICAgbWFyZ2luOiAwIDAgMCBzcGFjZSgwLjc1KTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIH1cblxuICAgIC8vYSB7XG4gICAgLy8gICAgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygpO1xuICAgIC8vfVxuXG5cbiAgICAvLyB2YXJpYXRpb25zXG4gICAgLy8gLS0tLS0tLS0tLVxuXG4gICAgJi0tZW5kUnVsZSB7XG4gICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBwYWxldHRlKGxpZ2h0KTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW46ICRibG9ja1NwYWNlICogMC4zNzUgMCAwICFpbXBvcnRhbnQ7XG4gICAgICAgIHBhZGRpbmc6ICRibG9ja1NwYWNlICogMC4yIDAgMCAhaW1wb3J0YW50O1xuXG4gICAgICAgIGEge1xuICAgICAgICAgICAgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi0tY3RhLFxuICAgICYtLW5vUnVsZSB7XG4gICAgICAgIGJvcmRlcjogMCAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgJi0tY3RhIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJGJsb2NrU3BhY2UgKiAwLjU7XG4gICAgfVxuXG4gICAgJi0tbm9SdWxlIHNwYW4sXG4gICAgJi0tbm9SdWxlIHNwYW4gYSxcbiAgICAmLS1ub1J1bGUgbGkge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkYmFzZS1saW5lLWhlaWdodC11bml0O1xuICAgIH1cblxuICAgICYtLXNoYXJlIHtcbiAgICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZSAqIDAuNzU7XG4gICAgICAgIH1cblxuICAgICAgICA+IGEge1xuICAgICAgICAgICAgQGluY2x1ZGUgdW5kZXJsaW5lTGluayhub25lKTtcbiAgICAgICAgICAgIGNvbG9yOiBwYWxldHRlKG11dGVkKTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IC0xcHg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuICAgICAgICAgICAgICAgIGNvbG9yOiBwYWxldHRlKG11dGVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gdXNpbmcgdmVuZG9yLmZhbWlseVxuLmMtcG9zdC1zdXBwb3J0ZXJzIHtcbiAgICBtYXJnaW4tYm90dG9tOiAkcGFyYWdyYXBoU3BhY2UgKiAwLjU7XG5cbiAgICBpbWcge1xuICAgICAgICBtYXJnaW4tdG9wOiAkcGFyYWdyYXBoU3BhY2UgKiAwLjc1O1xuICAgICAgICBtYXJnaW4tbGVmdDogJHBhcmFncmFwaFNwYWNlO1xuICAgICAgICB3aWR0aDogMjUlO1xuXG4gICAgICAgIEBpbmNsdWRlIGZpcnN0LWNoaWxkKCkgeyBtYXJnaW4tbGVmdDogMDsgfVxuICAgICAgICBAaW5jbHVkZSBldmVyeSg0KSB7IG1hcmdpbi1sZWZ0OiAwOyB9XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICAgICAgQGluY2x1ZGUgZmlyc3QtY2hpbGQoKSB7IG1hcmdpbi10b3A6ICRwYXJhZ3JhcGhTcGFjZSAqIDAuNTsgfVxuICAgICAgICAgICAgQGluY2x1ZGUgYWxsLWJ1dCgxKSB7IG1hcmdpbi10b3A6ICRwYXJhZ3JhcGhTcGFjZSAqIDEuMjU7IH1cbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG5cblxuXG5cblxuXG4vLyBQb3N0IGluZm9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5jLXBvc3QtaW5mbyB7XG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcbiAgICAvL2JhY2tncm91bmQtY29sb3I6IHBhbGV0dGUodGV4dCk7XG4gICAgLy9tYXJnaW4tdG9wOiAxcHg7XG4gICAgLy9wYWRkaW5nOiAkYmxvY2tTcGFjZSAqIDAuNzUgMDtcbiAgICAvL21hcmdpbi10b3A6ICRibG9ja1NwYWNlICogMS4yNTtcblxuICAgIC8vYm90dG9tOiAtI3tzcGFjZSgxKX07XG4gICAgcG9zaXRpb246IGFic29sdXRlOyAvLyByZW1vdmUgZnJvbSB0aGUgZmxvd1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5jLXBvc3QtaW5mbyAuYy1wb3N0R3JpZCB7XG4gICAgbWFyZ2luOiAwO1xufVxuXG4uYy1wb3N0LWluZm8gLmMtcG9zdEdyaWQgPiAqIHtcbiAgICBmbGV4OiAxIDAgMDtcbiAgICBmbGV4LWJhc2lzOiBjYWxjKDEwdncgLSAycHgpO1xuICAgIGZsZXgtYmFzaXM6IDVlbTtcbiAgICBtYXJnaW46IDA7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAgIC8vZmxleC1iYXNpczogY2FsYygyMHZ3IC0gMnB4KTtcbiAgICB9XG59XG5cbi5jLXBvc3QtaW5mbyAucy1hc2lkZSB7XG4gICAgYm9yZGVyOiAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG5cbiRhc2lkZUNvbG9yOiB0ZXh0O1xuXG4uYy1wb3N0LWluZm8gLmMtcG9zdC1tZXRhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJhY2tncm91bmQpO1xuICAgIGJvcmRlcjogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogJGJsb2NrU3BhY2UgKiAwLjEyNSAkYmxvY2tTcGFjZSAqIDAuMjU7XG5cbiAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCBwYWxldHRlKCRhc2lkZUNvbG9yKTtcbiAgICAgICAgLy9tYXJnaW4tbGVmdDogLTFweDtcbiAgICB9XG5cbiAgICBzcGFuLFxuICAgIHNwYW4gYSxcbiAgICBsaSB7XG4gICAgICAgIGNvbG9yOiBwYWxldHRlKCRhc2lkZUNvbG9yKTtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtYmxhY2s7XG4gICAgfVxuXG4gICAgcCB7XG4gICAgICAgIGNvbG9yOiBwYWxldHRlKCRhc2lkZUNvbG9yKTtcbiAgICB9XG59XG5cbi5jLXBvc3QtaW5mbyAuYy1wb3N0LW1ldGEtLWN0YSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcGFsZXR0ZSgkYXNpZGVDb2xvcikgIWltcG9ydGFudDtcblxuICAgIC50LWJ1dHRvbi0tcHJpbWFyeSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgIGNvbG9yOiBwYWxldHRlKGJhY2tncm91bmQpO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG5cblxuLy8gUG9zdCBuZXh0L3ByZXZcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5jLXBvc3QtbmV4dCB7XG4gICAgbWFyZ2luLXRvcDogJGJsb2NrU3BhY2U7XG5cbiAgICBoMyB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC41O1xuICAgIH1cbn1cbiIsIi8vIHYxLjAuOCBodHRwczovL2dpdGh1Yi5jb20vTHVreVZqL2ZhbWlseS5zY3NzL3JlbGVhc2VzXG5cbi8vLyBTZWxlY3QgYWxsIGNoaWxkcmVuIGZyb20gdGhlIGZpcnN0IHRvIGAkbnVtYC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBpZCBvZiB0aGUgY2hpbGRcbkBtaXhpbiBmaXJzdCgkbnVtKSB7XG4gIEBpZiAkbnVtID09IDEge1xuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICAmOm50aC1jaGlsZCgtbiArICN7JG51bX0pIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLy8gU2VsZWN0IGFsbCBjaGlsZHJlbiBmcm9tIHRoZSBsYXN0IHRvIGAkbnVtYC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBpZCBvZiB0aGUgY2hpbGRcbkBtaXhpbiBsYXN0KCRudW0pIHtcbiAgJjpudGgtbGFzdC1jaGlsZCgtbiArICN7JG51bX0pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gU2VsZWN0IGFsbCBjaGlsZHJlbiBhZnRlciB0aGUgZmlyc3QgdG8gYCRudW1gLlxuLy8vIEBncm91cCB3aXRoLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbi8vLyBAcGFyYW0ge251bWJlcn0gJG51bSAtIGlkIG9mIHRoZSBjaGlsZFxuQG1peGluIGFmdGVyLWZpcnN0KCRudW0pIHtcbiAgJjpudGgtY2hpbGQobiArICN7JG51bSArIDF9KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBhbGwgY2hpbGRyZW4gYmVmb3JlIGAkbnVtYCBmcm9tIHRoZSBsYXN0LlxuLy8vIEBncm91cCB3aXRoLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbi8vLyBAcGFyYW0ge251bWJlcn0gJG51bSAtIGlkIG9mIHRoZSBjaGlsZFxuQG1peGluIGZyb20tZW5kKCRudW0pIHtcbiAgJjpudGgtbGFzdC1jaGlsZCgjeyRudW19KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBhbGwgY2hpbGRyZW4gYmV0d2VlbiBgJGZpcnN0YCBhbmQgYCRsYXN0YC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gYmV0d2VlbigkZmlyc3QsICRsYXN0KSB7XG4gICY6bnRoLWNoaWxkKG4gKyAjeyRmaXJzdH0pOm50aC1jaGlsZCgtbiArICN7JGxhc3R9KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBhbGwgZXZlbiBjaGlsZHJlbiBiZXR3ZWVuIGAkZmlyc3RgIGFuZCBgJGxhc3RgLlxuLy8vIEBncm91cCB3aXRoLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbkBtaXhpbiBldmVuLWJldHdlZW4oJGZpcnN0LCAkbGFzdCkge1xuICAmOm50aC1jaGlsZChldmVuKTpudGgtY2hpbGQobiArICN7JGZpcnN0fSk6bnRoLWNoaWxkKC1uICsgI3skbGFzdH0pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gU2VsZWN0IGFsbCBvZGQgY2hpbGRyZW4gYmV0d2VlbiBgJGZpcnN0YCBhbmQgYCRsYXN0YC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gb2RkLWJldHdlZW4oJGZpcnN0LCAkbGFzdCkge1xuICAmOm50aC1jaGlsZChvZGQpOm50aC1jaGlsZChuICsgI3skZmlyc3R9KTpudGgtY2hpbGQoLW4gKyAjeyRsYXN0fSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTZWxlY3QgYWxsIGAkbnVtYCBjaGlsZHJlbiBiZXR3ZWVuIGAkZmlyc3RgIGFuZCBgJGxhc3RgLlxuLy8vIEBncm91cCB3aXRoLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbkBtaXhpbiBuLWJldHdlZW4oJG51bSwgJGZpcnN0LCAkbGFzdCkge1xuICAmOm50aC1jaGlsZCgjeyRudW19bik6bnRoLWNoaWxkKG4gKyAjeyRmaXJzdH0pOm50aC1jaGlsZCgtbiArICN7JGxhc3R9KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuXG4vLy8gU2VsZWN0IGFsbCBjaGlsZHJlbiBidXQgYCRudW1gLlxuLy8vIEBncm91cCB3aXRoLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbi8vLyBAcGFyYW0ge251bWJlcn0gJG51bSAtIGlkIG9mIHRoZSBjaGlsZFxuQG1peGluIGFsbC1idXQoJG51bSkge1xuICAmOm5vdCg6bnRoLWNoaWxkKCN7JG51bX0pKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBjaGlsZHJlbiBlYWNoIGAkbnVtYC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBpZCBvZiB0aGUgY2hpbGRcbi8vLyBAYWxpYXMgZXZlcnlcbkBtaXhpbiBlYWNoKCRudW0pIHtcbiAgJjpudGgtY2hpbGQoI3skbnVtfW4pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gU2VsZWN0IGNoaWxkcmVuIGVhY2ggYCRudW1gLlxuLy8vIEBncm91cCB3aXRoLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbi8vLyBAcGFyYW0ge251bWJlcn0gJG51bSAtIGlkIG9mIHRoZSBjaGlsZFxuQG1peGluIGV2ZXJ5KCRudW0pIHtcbiAgJjpudGgtY2hpbGQoI3skbnVtfW4pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gU2VsZWN0IHRoZSBgJG51bWAgY2hpbGQgZnJvbSB0aGUgc3RhcnQgYW5kIHRoZSBgJG51bWAgY2hpbGQgZnJvbSB0aGUgbGFzdC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBpZCBvZiB0aGUgY2hpbGRcbkBtaXhpbiBmcm9tLWZpcnN0LWxhc3QoJG51bSkge1xuICAmOm50aC1jaGlsZCgjeyRudW19KSxcbiAgJjpudGgtbGFzdC1jaGlsZCgjeyRudW19KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuXG4vLy8gU2VsZWN0IHRoZSBpdGVtIGluIHRoZSBtaWRkbGUgb2YgYCRudW1gIGNoaWxkLiBPbmx5IHdvcmtzIHdpdGggb2RkIG51bWJlclxuLy8vIGNoYWluLlxuLy8vIEBncm91cCB3aXRoLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbi8vLyBAcGFyYW0ge251bWJlcn0gJG51bSAtIGlkIG9mIHRoZSBjaGlsZFxuQG1peGluIG1pZGRsZSgkbnVtKSB7XG4gICY6bnRoLWNoaWxkKCN7cm91bmQoJG51bSAvIDIpfSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cblxuLy8vIFNlbGVjdCBhbGwgY2hpbGRyZW4gYmV0d2VlbiB0aGUgYCRudW1gIGZpcnN0IGFuZCB0aGUgYCRudW1gIGxhc3QuXG4vLy8gQGdyb3VwIHdpdGgtYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbnVtIC0gaWQgb2YgdGhlIGNoaWxkXG5AbWl4aW4gYWxsLWJ1dC1maXJzdC1sYXN0KCRudW0pIHtcbiAgJjpudGgtY2hpbGQobiArICN7JG51bX0pOm50aC1sYXN0LWNoaWxkKG4gKyAjeyRudW19KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuXG4vLy8gVGhpcyBxdWFudGl0eS1xdWVyeSBtaXhpbiB3aWxsIG9ubHkgc2VsZWN0IHRoZSBmaXJzdCBvZiBgJGxpbWl0YCBpdGVtcy4gSXQgd2lsbCBub3Rcbi8vLyB3b3JrIGlmIHRoZXJlIGlzIG5vdCBhcyBtdWNoIGFzIGl0ZW0gYXMgeW91IHNldCBpbiBgJGxpbWl0YC5cbi8vLyBAZ3JvdXAgUXVhbnRpdHkgcXVlcmllc1xuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbGltaXRcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gZmlyc3Qtb2YoJGxpbWl0KSB7XG4gICY6bnRoLWxhc3QtY2hpbGQoI3skbGltaXR9KTpmaXJzdC1jaGlsZCB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFRoaXMgcXVhbnRpdHktcXVlcnkgbWl4aW4gd2lsbCBvbmx5IHNlbGVjdCB0aGUgbGFzdCBvZiBgJGxpbWl0YCBpdGVtcy4gSXQgd2lsbCBub3Rcbi8vLyBpZiB0aGVyZSBpcyBub3QgYXMgbXVjaCBhcyBpdGVtIGFzIHlvdSBzZXQgaW4gYCRsaW1pdGAuXG4vLy8gQGdyb3VwIFF1YW50aXR5IHF1ZXJpZXNcbi8vLyBAcGFyYW0ge251bWJlcn0gJGxpbWl0XG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGxhc3Qtb2YoJGxpbWl0KSB7XG4gICY6bnRoLW9mLXR5cGUoI3skbGltaXR9KTpudGgtbGFzdC1vZi10eXBlKDEpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gVGhpcyBxdWFudGl0eS1xdWVyeSBtaXhpbiB3aWxsIHNlbGVjdCBldmVyeSBpdGVtcyBpZiB0aGVyZSBpcyBhdCBsZWFzdCBgJG51bWAgaXRlbXMuIEl0IHdpbGwgbm90XG4vLy8gaWYgdGhlcmUgaXMgbm90IGFzIG11Y2ggYXMgaXRlbSBhcyB5b3Ugc2V0IGluIGAkbnVtYC5cbi8vLyBAZ3JvdXAgUXVhbnRpdHkgcXVlcmllc1xuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbGltaXRcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gYXQtbGVhc3QoJG51bSkge1xuICAkc2VsZWN0b3I6ICY7XG4gICRjaGlsZDogbnRoKG50aCgkc2VsZWN0b3IsIC0xKSwgLTEpO1xuXG4gICY6bnRoLWxhc3QtY2hpbGQobiArICN7JG51bX0pLFxuICAmOm50aC1sYXN0LWNoaWxkKG4gKyAjeyRudW19KSB+ICN7JGNoaWxkfSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFRoaXMgcXVhbnRpdHktcXVlcnkgbWl4aW4gd2lsbCBzZWxlY3QgZXZlcnkgaXRlbXMgaWYgdGhlcmUgaXMgYXQgbW9zdCBgJG51bWAgaXRlbXMuIEl0IHdpbGwgbm90XG4vLy8gaWYgdGhlcmUgaXMgbm90IGFzIG11Y2ggYXMgaXRlbSBhcyB5b3Ugc2V0IGluIGAkbnVtYC5cbi8vLyBAZ3JvdXAgUXVhbnRpdHkgcXVlcmllc1xuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbGltaXRcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gYXQtbW9zdCgkbnVtKSB7XG4gICRzZWxlY3RvcjogJjtcbiAgJGNoaWxkOiBudGgobnRoKCRzZWxlY3RvciwgLTEpLCAtMSk7XG5cbiAgJjpudGgtbGFzdC1jaGlsZCgtbiArICN7JG51bX0pOmZpcnN0LWNoaWxkLFxuICAmOm50aC1sYXN0LWNoaWxkKC1uICsgI3skbnVtfSk6Zmlyc3QtY2hpbGQgfiAjeyRjaGlsZH0ge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBUaGlzIHF1YW50aXR5LXF1ZXJ5IG1peGluIHdpbGwgc2VsZWN0IGV2ZXJ5IGl0ZW1zIG9ubHkgaWYgdGhlcmUgaXMgYmV0d2VlbiBgJG1pbmAgYW5kIGAkbWF4YCBpdGVtcy5cbi8vLyBAZ3JvdXAgUXVhbnRpdHkgcXVlcmllc1xuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbGltaXRcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gaW4tYmV0d2VlbigkbWluLCAkbWF4KSB7XG4gICRzZWxlY3RvcjogJjtcbiAgJGNoaWxkOiBudGgobnRoKCRzZWxlY3RvciwgLTEpLCAtMSk7XG5cbiAgJjpudGgtbGFzdC1jaGlsZChuICsgI3skbWlufSk6bnRoLWxhc3QtY2hpbGQoLW4gKyAjeyRtYXh9KTpmaXJzdC1jaGlsZCxcbiAgJjpudGgtbGFzdC1jaGlsZChuICsgI3skbWlufSk6bnRoLWxhc3QtY2hpbGQoLW4gKyAjeyRtYXh9KTpmaXJzdC1jaGlsZCB+ICN7JGNoaWxkfSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCB0aGUgZmlyc3QgZXhhY3QgY2hpbGRcbi8vLyBAZ3JvdXAgbm8tYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGZpcnN0LWNoaWxkKCkge1xuICAmOmZpcnN0LW9mLXR5cGUge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTZWxlY3QgdGhlIGxhc3QgZXhhY3QgY2hpbGRcbi8vLyBAZ3JvdXAgbm8tYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGxhc3QtY2hpbGQoKSB7XG4gICY6bGFzdC1vZi10eXBlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gU2VsZWN0IGFsbCBldmVuIGNoaWxkcmVuLlxuLy8vIEBncm91cCBuby1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gZXZlbigpIHtcbiAgJjpudGgtY2hpbGQoZXZlbikge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTZWxlY3QgYWxsIG9kZCBjaGlsZHJlbi5cbi8vLyBAZ3JvdXAgbm8tYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIG9kZCgpIHtcbiAgJjpudGgtY2hpbGQob2RkKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBvbmx5IHRoZSBmaXJzdCBhbmQgbGFzdCBjaGlsZC5cbi8vLyBAZ3JvdXAgbm8tYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGZpcnN0LWxhc3QoKSB7XG4gICY6Zmlyc3QtY2hpbGQsXG4gICY6bGFzdC1jaGlsZCB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFdpbGwgb25seSBzZWxlY3QgdGhlIGNoaWxkIGlmIGl04oCZcyB1bmlxdWUuXG4vLy8gQGdyb3VwIG5vLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbi8vLyBAYWxpYXMgb25seVxuQG1peGluIHVuaXF1ZSgpIHtcbiAgJjpvbmx5LWNoaWxkIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gV2lsbCBvbmx5IHNlbGVjdCB0aGUgY2hpbGQgaWYgaXTigJlzIHVuaXF1ZS5cbi8vLyBAZ3JvdXAgbm8tYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIG9ubHkoKSB7XG4gICY6b25seS1jaGlsZCB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFdpbGwgb25seSBzZWxlY3QgY2hpbGRyZW4gaWYgdGhleSBhcmUgbm90IHVuaXF1ZS4gTWVhbmluZyBpZiB0aGVyZSBpcyBhdFxuLy8vIGxlYXN0IDIgY2hpbGRyZW4sIHRoZSBzdHlsZSBpcyBhcHBsaWVkLlxuLy8vIEBncm91cCBuby1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gbm90LXVuaXF1ZSgpIHtcbiAgJjpub3QoOm9ubHktY2hpbGQpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5cbi8vLyBUaGlzIG1peGluIGlzIHVzZWQgdG8gYXV0b21hdGljYWxseSBzb3J0IHotaW5kZXggaW4gbnVtZXJpY2FsIG9yZGVyLiBCdXQgaXRcbi8vLyBjYW4gYWxzbyBzb3J0IHRoZW0gaW4gYW50aS1udW1lcmljYWwgb3JkZXIsIGRlcGVuZGluZyB0aGUgcGFyYW1ldGVycyB5b3UgdXNlLlxuLy8vIEBncm91cCB1c2luZyBmdW5jdGlvbnNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBOdW1iZXIgb2YgY2hpbGRyZW5cbi8vLyBAcGFyYW0ge3N0cmluZ30gJGRpcmVjdGlvbiBbZm9yd2FyZF0gLSBEaXJlY3Rpb24gb2YgdGhlIHNvcnRcbi8vLyBAcGFyYW0ge251bWJlcn0gJGluZGV4IFswXSAtIEluZGV4IG9mIHRoZSBzb3J0aW5nXG5AbWl4aW4gY2hpbGQtaW5kZXgoJG51bSwgJGRpcmVjdGlvbjogJ2ZvcndhcmQnLCAkaW5kZXg6IDApIHtcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkbnVtIHtcbiAgICBAaWYgKCRkaXJlY3Rpb24gPT0gJ2ZvcndhcmQnKSB7XG4gICAgICAmOm50aC1jaGlsZCgjeyRpfSkge1xuICAgICAgICB6LWluZGV4OiBvcmRlci1pbmRleCgkaSwgJGluZGV4KTtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSBAZWxzZSBpZiAoJGRpcmVjdGlvbiA9PSAnYmFja3dhcmQnKSB7XG4gICAgICAmOm50aC1sYXN0LWNoaWxkKCN7JGl9KSB7XG4gICAgICAgIHotaW5kZXg6IG9yZGVyLWluZGV4KCRpLCAkaW5kZXgpO1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8vIFVzZWQgYnkgdGhlIGNoaWxkLWluZGV4IG1peGluLiBJdCB3aWxsIHJldHVybmVkIHRoZSBwcm9wZXIgc29ydGVkIG51bWJlcnNcbi8vLyBkZXBlbmRpbmcgb24gdGhlIGAkaW5kZXhgIHZhbHVlLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbnVtIC0gTnVtYmVyIG9mIGNoaWxkcmVuXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRpbmRleCAtIEluZGV4IG9mIHRoZSBzb3J0aW5nXG5AZnVuY3Rpb24gb3JkZXItaW5kZXgoJGksICRpbmRleCkge1xuICBAcmV0dXJuICgkaW5kZXggKyAkaSk7XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgRk9PVEVSXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi5jLWZvb3RlciB7XG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKG5ldXRyYWwpO1xuICAgIHBhZGRpbmc6ICRibG9ja1NwYWNlICogMS4yNSAwO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAmLS1wb3N0IHtcbiAgICAgICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC40ICk7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBwYWxldHRlKHRleHQpO1xuICAgICAgICAvL21hcmdpbi10b3A6ICRibG9ja1NwYWNlICogMS4yNSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgLy9tYXJnaW46ICRibG9ja1NwYWNlIDA7XG4gICAgfVxufVxuXG4uYy1mb290ZXItbmF2IHtcbiAgICBtYXJnaW4tYm90dG9tOiAkYmxvY2tTcGFjZSAqIDEuMjU7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHBhbGV0dGUobGlnaHQpO1xuICAgICAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZTtcbiAgICAgICAgcGFkZGluZy10b3A6ICRibG9ja1NwYWNlO1xuICAgIH1cbn1cblxuLmMtZm9vdGVyLWJsb2NrIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHBhbGV0dGUobGlnaHQpO1xuICAgICAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZTtcbiAgICAgICAgcGFkZGluZy10b3A6ICRibG9ja1NwYWNlO1xuICAgIH1cbn1cblxuLmMtZm9vdGVyLWxvZ28gPiBpbWcge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgLy9vcGFjaXR5OiAwLjI1O1xuICAgIHdpZHRoOiAxNTBweDtcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgLy9tYXJnaW4tdG9wOiAtKCRibG9ja1NwYWNlICogMC4yNSk7XG4gICAgICAgIHdpZHRoOiAxODBweDtcbiAgICB9XG59XG5cbi8vLmMtZm9vdGVyIC5vLWdyaWQgPiAqOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbi8vICAgIG1hcmdpbi1sZWZ0OiBzcGFjZSgwLjUpO1xuLy99XG5cbi51LWlubGluZUJsb2NrV3JhcHBlciA+ICoge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAvL21hcmdpbi1sZWZ0OiBzcGFjZSgxKTsgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAkYmxvY2tTcGFjZSAqIDAuNzU7XG4gICAgfVxufVxuXG4vLy5jLWZvb3RlciBsaSB7XG4vLyAgICBAaW5jbHVkZSB0ZXh0WHMoKTtcbi8vfVxuXG4uYy1mb290ZXIge1xuICAgIHAsXG4gICAgdWwsXG4gICAgbGksXG4gICAgc3BhbixcbiAgICBhIHtcbiAgICAgICAgQGluY2x1ZGUgdGV4dEFzaWRlKCk7XG4gICAgICAgIC8vY29sb3I6IHBhbGV0dGUobXV0ZWQpO1xuICAgICAgICAvL2ZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXI7XG4gICAgfVxufVxuXG4uYy1mb290ZXIgLm8tbGlzdENsZWFuIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uYy1mb290ZXIgLmMtbmF2LWl0ZW0ge1xuICAgIG1hcmdpbi10b3A6IHNwYWNlKDAuMjUpO1xuXG4gICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgfVxuXG4gICAgJi5pcy1hY3RpdmUgYSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xuICAgIH1cbn1cblxuLmMtZm9vdGVyLWluZm8ge1xuICAgIC8vZGlzcGxheTogZmxleDtcbiAgICAvL2p1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAvL21hcmdpbjogMDtcbiAgICAvL1xuICAgIC8vPiAqIHtcbiAgICAvLyAgICBmbGV4LXNocmluazogMTtcbiAgICAvLyAgICBtYXJnaW46IDA7XG4gICAgLy99XG5cbiAgICBwLFxuICAgIHVsLFxuICAgIGxpLFxuICAgIHNwYW4sXG4gICAgYSB7XG4gICAgICAgIGNvbG9yOiByZ2JhKCBwYWxldHRlKHRleHQpLCAwLjcgKTtcbiAgICB9XG59XG5cbi5jLWZvb3Rlci1zb2NpYWxCbG9jayB7XG4gICAgLy9tYXJnaW4tdG9wOiBzcGFjZSgwLjc1KTtcbiAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZSAqIDAuMzMzMzMzO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICAvL2JvcmRlci10b3A6IDFweCBzb2xpZCBwYWxldHRlKHRleHQpO1xuICAgICAgICAvL3BhZGRpbmctdG9wOiBzcGFjZSgxKTtcbiAgICB9XG59XG5cblxuLy8gaGlkZSB0aGUgbG9nbyBvbiBtb2JpbGUgd2hlbiB0aGUgaW5mbyBpcyBub3Qgb2YgYWRlcXVhdGUgYW1vdW50XG4uYy1mb290ZXItaGlkZU1vYmlsZUxvZ28ge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn1cblxuXG5cbi8vIHJldmVyc2VkXG4vLy5jLWZvb3RlciB7XG4vLyAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKHRleHQpO1xuLy8gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG4vLyAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKG5ldXRyYWwtbGlnaHQpO1xuLy8gICAgYm9yZGVyOiAwO1xuLy8gICAgbWFyZ2luLXRvcDogMnB4O1xuLy99XG5cbi8vLmMtZm9vdGVyIHtcbi8vICAgIHAsXG4vLyAgICB1bCxcbi8vICAgIGxpLFxuLy8gICAgYSB7XG4vLyAgICAgICAgY29sb3I6IHBhbGV0dGUobXV0ZWQpO1xuLy8gICAgfVxuLy99XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgIEJVVFRPTlNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuQG1peGluIGJ1dHRvblRoZW1lKCkge1xuXHRAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbigpO1xuXHRib3JkZXItcmFkaXVzOiAwO1xuXHRib3JkZXItc3R5bGU6IHNvbGlkO1xuXHRib3JkZXItd2lkdGg6IDA7XG5cdHBhZGRpbmc6IDAgc3BhY2UoMC41KTtcblxuICAgIC8vIHRoZW1lIHVudXNlZFxuICAgIC8vIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yIGNvbWVzIGZyb20gU3VpdOKAplxuICAgIC8vYm9yZGVyLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcbiAgICAvL2JvcmRlci1yYWRpdXM6IG1hcC1mZXRjaCgkYm9yZGVyLXJhZGl1cywgYmFzZSk7XG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMSApO1xuXHQvLyB0cmFuc2l0aW9uOiBhbGwgdHJhbnNpdGlvbihkdXJhdGlvbiwgc2hvcnQpIHRyYW5zaXRpb24odHlwZSwgYmFzZSk7XG5cdC8vIHZlcnRpY2FsLWFsaWduOiB0b3A7IC8vIDEuXG5cblx0YSB7XG5cblx0fVxuXG5cdCZbZGlzYWJsZWRdIHtcblx0XHRib3JkZXItY29sb3I6IHBhbGV0dGUobXV0ZWQpO1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUobXV0ZWQpO1xuXHRcdGN1cnNvcjogbm90LWFsbG93ZWQ7XG5cdFx0b3BhY2l0eTogMC40O1xuXHR9XG5cblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuXHRcdG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDtcblxuICAgICAgICAvLyB0aGVtZSB1bnVzZWRcbiAgICAgICAgLy9vcGFjaXR5OiAwLjU7XG5cdH1cbn1cblxuQG1peGluIGJ1dHRvblRleHQoKSB7XG4gICAgQGluY2x1ZGUgdHlwZVJlc2V0KCk7XG4gICAgQGluY2x1ZGUgdGV4dEFzaWRlKCk7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcGFsZXR0ZSh0ZXh0KTtcbiAgICBjb2xvcjogcGFsZXR0ZSh0ZXh0KTtcbiAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgIGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGJhc2UpO1xuXG4gICAgLy8gdGhlbWUgdW51c2VkXG4gICAgLy9jb2xvcjogcGFsZXR0ZShicmFuZCk7XG4gICAgLy9mb250LWZhbWlseTogJGZvbnQtYnV0dG9uO1xuICAgIC8vZm9udC1zaXplOiBmb250c2l6ZSh0ZXh0LS1zbSwgeHMpO1xuICAgIC8vbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcblxuICAgIEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB9XG59XG5cblxuLy8gUHJpbWFyeSBidXR0b25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBidXR0b24oKSB7XG5cdEBpbmNsdWRlIGJ1dHRvblRoZW1lKCk7XG5cdEBpbmNsdWRlIGJ1dHRvblRleHQoKTtcbn1cblxuLnQtYnV0dG9uIHtcblx0QGluY2x1ZGUgYnV0dG9uO1xufVxuXG4udC1idXR0b24tLXJldiB7XG5cdEBpbmNsdWRlIGJ1dHRvbjtcblx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xuXHRib3JkZXItd2lkdGg6IDFweDtcbn1cblxuLnQtYnV0dG9uLS1mdWxsIHtcblx0Ly9AaW5jbHVkZSBidXR0b247XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblx0d2lkdGg6IDEwMCU7XG59XG5cblxuXG4vLyBUaWNrZXQgYnV0dG9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kYXJyb3dTaXplOiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGJhc2UpO1xuXG5AbWl4aW4gQXJyb3coKSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgLy9yaWdodDogLSN7JGFycm93U2l6ZSAqIDAuNX07XG4gICAgcmlnaHQ6IC0yM3B4O1xuICAgIHRvcDogLTFweDtcblxufVxuXG4udC1idXR0b24tLXByaW1hcnkge1xuXHRAaW5jbHVkZSBidXR0b24oKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcblx0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcblx0Y29sb3I6IHBhbGV0dGUod2hpdGUpICFpbXBvcnRhbnQ7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9sZDtcbiAgICBtaW4td2lkdGg6IDkyJTtcbiAgICBwYWRkaW5nOiBzcGFjZSgwLjI1KSBzcGFjZSgwLjUpO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICY6YWZ0ZXIge1xuICAgICAgICBAaW5jbHVkZSBBcnJvdygpO1xuICAgICAgICAvL2JvcmRlci10b3A6ICRhcnJvd1NpemUgc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDU5cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAkYXJyb3dTaXplICogMC41IHNvbGlkIHBhbGV0dGUoYnJhbmQpO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcbiAgICAgICAgY29sb3I6IHBhbGV0dGUod2hpdGUpO1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgIH1cbn1cblxuLnQtYnV0dG9uLS1zZWNvbmRhcnkge1xuXHRAaW5jbHVkZSBidXR0b24oKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblx0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKHRleHQpO1xuXHRjb2xvcjogcGFsZXR0ZSh0ZXh0KTtcbiAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgIHBhZGRpbmc6IHNwYWNlKDAuMjUpIHNwYWNlKDEuNSk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJjphZnRlciB7XG4gICAgICAgIC8vQGluY2x1ZGUgQXJyb3coKTtcbiAgICAgICAgLy9ib3JkZXItYm90dG9tOiA1OXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAvL2JvcmRlci1sZWZ0OiAkYXJyb3dTaXplICogMC41IHNvbGlkIHBhbGV0dGUodGV4dCk7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgb24tZXZlbnQoKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAvL2NvbG9yOiBwYWxldHRlKHdoaXRlKTtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9sZDtcbiAgICB9XG59XG5cblxuLy8gU2Vjb25kYXJ5IGJ1dHRvbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vQG1peGluIHRleHRCdXR0b25TbShcbi8vXHQkbWl4aW5Db2xvcjogcGFsZXR0ZShicmFuZC1jb21wbGVtZW50KSxcbi8vXHQkbWl4aW5Cb3JkZXJDb2xvcjogJG1peGluQ29sb3Jcbi8vKSB7XG4vL1x0QGluY2x1ZGUgdHlwZVJlc2V0KCk7XG4vL1x0Y29sb3I6ICRtaXhpbkNvbG9yO1xuLy9cdGZvbnQtZmFtaWx5OiAkZm9udC1idXR0b247XG4vL1x0Zm9udC1zaXplOiBmb250c2l6ZSh0ZXh0LS1zbSwgeHMpO1xuLy9cdGxldHRlci1zcGFjaW5nOiAwLjA1ZW07XG4vL1x0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgY29uY2lzZSk7XG4vL1x0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbi8vXG4vL1x0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuLy9cdFx0Zm9udC1zaXplOiBmb250c2l6ZSh0ZXh0LS1zbSwgcmcpO1xuLy9cdH1cbi8vXG4vL1x0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG4vL1x0XHQvLyBib3JkZXItY29sb3I6IHJnYmEoICRtaXhpbkJvcmRlckNvbG9yLCAwLjUpO1xuLy9cdFx0Ly8gY29sb3I6IHJnYmEoICRtaXhpbkNvbG9yLCAwLjUpO1xuLy9cdFx0Y29sb3I6ICRtaXhpbkNvbG9yO1xuLy9cdH1cbi8vfVxuLy9cbi8vQG1peGluIGJ1dHRvblNlY29uZGFyeSgpIHtcbi8vXHRAaW5jbHVkZSBidXR0b25UaGVtZSgpO1xuLy9cdEBpbmNsdWRlIHRleHRCdXR0b25TbSgpO1xuLy9cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuLy9cdGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xuLy9cdGJvcmRlci13aWR0aDogMXB4O1xuLy9cdGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGNvbmNpc2UpICFpbXBvcnRhbnQ7XG4vL1x0cGFkZGluZy10b3A6IDFweDtcbi8vXG4vL1x0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG4vL1x0fVxuLy99XG4vL1xuLy8udC1idXR0b25TZWNvbmRhcnkge1xuLy9cdEBpbmNsdWRlIGJ1dHRvblNlY29uZGFyeSgpO1xuLy99XG5cblxuLy8gSW52aXNpYmxlIGJ1dHRvbiAoZm9yIGhvbGRpbmcgdGhlIHRvdWNoIHNwYWNlICYgbGF5b3V0KVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy9AbWl4aW4gYnV0dG9uSW52aXNpYmxlICgpIHtcbi8vXHRAaW5jbHVkZSBidXR0b25UaGVtZSgpO1xuLy9cdEBpbmNsdWRlIHRleHRCdXR0b25TbSgkbWl4aW5Db2xvcjogcGFsZXR0ZShicmFuZCkgKTtcbi8vXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbi8vXHRib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuLy9cdHBhZGRpbmc6IDAgMCAwIHNwYWNlKDAuNzUpO1xuLy9cdHRleHQtdHJhbnNmb3JtOiBub25lO1xuLy9cbi8vXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcbi8vXHRcdGNvbG9yOiBwYWxldHRlKGJyYW5kKTtcbi8vXHR9XG4vL31cbi8vXG4vLy50LWJ1dHRvbkludmlzaWJsZSB7XG4vL1x0QGluY2x1ZGUgYnV0dG9uSW52aXNpYmxlKCk7XG4vL31cblxuXG4vLyBCdXR0b24gc2l6ZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vLnQtYnV0dG9uIHtcbi8vXHRAaW5jbHVkZSBidXR0b247XG4vL1xuLy9cdCYtLW1kIHtcbi8vXHRcdGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGJhc2UpO1xuLy9cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuLy9cdFx0d2lkdGg6IHNwYWNlKDUpO1xuLy9cbi8vXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHtcbi8vXHRcdFx0d2lkdGg6IHNwYWNlKDYpO1xuLy9cdFx0fVxuLy9cdH1cbi8vXG4vL1x0Ji0tbGcge1xuLy9cdFx0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgbGFyZ2UpO1xuLy9cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuLy9cdFx0d2lkdGg6IDEwMCU7XG4vL1xuLy9cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuLy9cdFx0XHR3aWR0aDogc3BhY2UoMTIpO1xuLy9cdFx0fVxuLy9cdH1cbi8vXG4vL1x0Ji0tZnVsbCB7XG4vL1x0XHRsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBsYXJnZSk7XG4vL1x0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG4vL1x0XHR3aWR0aDogMTAwJTtcbi8vXHR9XG4vL31cbi8vXG4vLy50LXhzLWJ1dHRvbiB7XG4vL1x0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4cykge1xuLy9cdFx0Ji0tbWQge1xuLy9cdFx0XHRsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBiYXNlKTtcbi8vXHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuLy9cdFx0XHR3aWR0aDogc3BhY2UoNik7XG4vL1x0XHR9XG4vL1x0fVxuLy99XG5cblxuLy8gQ2xvc2UgYnV0dG9uICh0aGlzIGp1c3QgcG9zaXRpb25zIGFuIGljb24pXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4udC1idXR0b25DbG9zZSB7XG5cdGNvbG9yOiBwYWxldHRlKGJyYW5kKTtcblx0cG9zaXRpb246IGZpeGVkO1xuXHRyaWdodDogc3BhY2UoMC41KTtcblx0dG9wOiBzcGFjZSgwLjUpO1xuXHR6LWluZGV4OiBtYXAtZmV0Y2goJHotaW5kZXgsIGZpcnN0KTtcblxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHRvdXRsaW5lOiBub25lO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4cykge1xuXHRcdHJpZ2h0OiBzcGFjZSgxKTtcblx0XHR0b3A6IDMxcHg7XG5cdH1cbn1cblxuXG5cbi8vIFN1YnRpdGxlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyB1c2UgdGhpcyB0byB2ZXJ0aWNhbGx5IGFsaWduIGVsZW1lbnRzIHdpdGggYSBidXR0b25cbi8vIC5CdXR0b25MaW5lSGVpZ2h0IHtcbi8vICAgICBsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBiYXNlKTtcbi8vICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuLy8gfVxuXG4vLyBwYWRkaW5nLXRvcDogMnB4OyAvLyB0aGVtZSB0eXBvZ3JhcGh5IGFsaWdubWVudFxuIiwiXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ09NUE9ORU5UOiBJTUFHRSBCTEVORFNcbi8vIFNlZTogaHR0cDovL2NvZGVwZW4uaW8vR3VpbGgvcGVuL0xFUVdldj9lZGl0b3JzPTExMFxuLy8gU2VlOiBodHRwczovL3NhcmFzb3VlaWRhbi5jb20vZGVtb3MvY3NzLWJsZW5kZXIvXG4vLyBTZWU6IGh0dHA6Ly91bmEuaW0vQ1NTZ3JhbS9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBpbWFnZUJsZW5kKFxuICAgICRibGVuZDogbXVsdGlwbHksXG4gICAgJGNvbG9yOiByZ2JhKCBwYWxldHRlKHRleHQpLCAwLjgpXG4pIHtcbiAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6ICRibGVuZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I7XG59XG5cbi5jLWltYWdlQmxlbmQgeyBAaW5jbHVkZSBpbWFnZUJsZW5kKCk7IH1cbi5jLWltYWdlQmxlbmQtLWp1c3QgeyBAaW5jbHVkZSBpbWFnZUJsZW5kKCRjb2xvcjogcmdiYSggcGFsZXR0ZSh0ZXh0KSwgMC40KSApOyB9XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEZPUk1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuaW5wdXQsXG50ZXh0YXJlYSxcbnNlbGVjdCxcbmxhYmVsIHtcblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0b3V0bGluZTogMDtcblx0fVxufVxuXG4vL2lucHV0Om5vdChbdHlwZT1cInJhZGlvXCJdKSxcbi8vaW5wdXQ6bm90KFt0eXBlPVwic3VibWl0XCJdKSxcbi8vaW5wdXQ6bm90KFwiLkJ1dHRvblwiKSxcbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuaW5wdXRbdHlwZT1cInRlbFwiXSxcbmlucHV0W3R5cGU9XCJkYXRlXCJdLFxuLnNlbGVjdCBzZWxlY3QsXG50ZXh0YXJlYSB7XG5cdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogMDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgLy9tYXJnaW46IDA7IC8vIG5vcm1hbGl6ZSBoYW5kbGVzIHRoaXNcbiAgICByZXNpemU6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcblxuICAgIC8vIHRoZW1lXG4gICAgQGluY2x1ZGUgdGV4dEFzaWRlKCk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShuZXV0cmFsKTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBwYWxldHRlKG5ldXRyYWwpO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgbGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgYmFzZSk7XG5cdHBhZGRpbmc6IDAgc3BhY2UoMC41KTtcblx0dHJhbnNpdGlvbjogYWxsIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgZHVyYXRpb24sIGxvbmcpIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgdHlwZSwgYmFzZSk7XG5cbiAgICAvLyB0aGVtZSB1bnVzZWRcbiAgICAvL2JvcmRlci1yYWRpdXM6IG1hcC1mZXRjaCgkYm9yZGVyLXJhZGl1cywgYmFzZSk7XG4gICAgLy9wYWRkaW5nOiAwIHNwYWNlKDIvMyk7XG5cblx0Ly8gQGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdC8vXHRvdXRsaW5lOiAwO1xuXHQvL31cblxuICAgIC8vIGZpbGxlZC1pbiBmb3JtIHN0eWxpbmdcblx0Jjotd2Via2l0LWF1dG9maWxsIHtcblx0XHQtd2Via2l0LWJveC1zaGFkb3c6IDAgMCAwIHJlbSgxMDApIHBhbGV0dGUoZmFpbnQpIGluc2V0O1xuXHRcdC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcblx0XHRiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuXHR9XG5cbiAgICAvLyBwbGFjZWhvbGRlciBjb2xvclxuXHQkY29sb3ItcGxhY2Vob2xkZXI6IHJnYmEoIHBhbGV0dGUodGV4dCksIDAuNyApO1xuXG5cdCY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG5cdCY6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG5cdCY6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG5cdCY6LW1zLWlucHV0LXBsYWNlaG9sZGVyICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG59XG5cbi8vIHJlaW5zdGF0ZSBsaW5lIGhlaWdodCBmb3IgbXVsdGktcm93IHRleHRhcmVhcy5cblxudGV4dGFyZWEge1xuICAgIGxpbmUtaGVpZ2h0OiAkYmFzZS1saW5lLWhlaWdodC11bml0O1xuICAgIHBhZGRpbmctdG9wOiBzcGFjZSgwLjUpO1xufVxuXG4vLyBtaW1pY2tpbmcgcGxhY2Vob2xkZXIgY29sb3JzLlxuLy8gUmVmOiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzg2MTk0MDYvY3NzLXNlbGVjdGVkLXBzZXVkby1jbGFzcy1zaW1pbGFyLXRvLWNoZWNrZWQtYnV0LWZvci1zZWxlY3QtZWxlbWVudHNcblxuJGNvbG9yLXBsYWNlaG9sZGVyOiByZ2JhKCBwYWxldHRlKHRleHQpLCAwLjUgKTtcblxuaW5wdXRbdHlwZT1cImRhdGVcIl0sXG5vcHRpb25bdHlwZT1cInNlbGVjdGVkXCJdIHtcbiAgICBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyO1xufVxuXG5cblxuLy8gVGhlbWUgdmFyc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtZm9ybVdyYXBwZXIge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC4xNSApO1xuICAgIG1hcmdpbjogJGJsb2NrU3BhY2UgMCAwO1xuXHRwYWRkaW5nOiBzcGFjZSgyKTtcbn1cblxuLmMtZm9ybSB7XG4gICAgbWFyZ2luLXRvcDogc3BhY2UoMik7XG59XG5cbi5jLWZvcm0gbGFiZWwsXG4uYy1mb3JtIC5sYWJlbCB7XG4gICAgQGluY2x1ZGUgdGV4dE1ldGFIZWFkbGluZSgpO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uYy1mb3JtIGxhYmVsLFxuLmMtZm9ybSAuc2VsZWN0IHtcbiAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICBtYXJnaW4tdG9wOiBzcGFjZSgxKTtcbiAgICB9XG59XG5cbi5jLWZvcm0gLnNlbGVjdCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJjphZnRlciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIHJpZ2h0OiAxLjI1cmVtO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHdpZHRoOiAwO1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIG1hcmdpbi10b3A6IC0uMTVyZW07XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICBib3JkZXItdG9wOiAuMzVyZW0gc29saWQ7XG4gICAgICAgIGJvcmRlci1yaWdodDogLjM1cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItYm90dG9tOiAuMzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAuMzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgfVxufVxuXG4uYy1mb3JtIC5zZWxlY3Qgc2VsZWN0IHtcbiAgICAvL2Rpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAvL3dpZHRoOiAxMDAlO1xuICAgIC8vbWFyZ2luOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBvdXRsaW5lOiAwO1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi5jLWZvcm0tYWxlcnQge1xuICAgIGNvbG9yOiBwYWxldHRlKGJhZC1uZXdzKTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA2NnB4O1xuICAgIHJpZ2h0OiAwO1xufVxuXG5cbi8vIE5ld3NsZXR0ZXIgc2lnbnVwIHZhclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtZm9ybVdyYXBwZXIgI21jX2VtYmVkX3NpZ251cCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICAvL3dpZHRoOiA5MCU7XG4gICAgfVxufVxuXG4jbWNfZW1iZWRfc2lnbnVwIHtcblx0aW5wdXRbdHlwZT1cImVtYWlsXCJdIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblx0XHRib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuXHQgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHBhbGV0dGUobXV0ZWQpO1xuXHRcdC8vcGFkZGluZzogMCAwIDAgc3BhY2UoMC41KTtcblx0XHRtYXJnaW4tcmlnaHQ6IHNwYWNlKDAuMjUpO1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cblxuXHQudC1idXR0b24ge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuICAgICAgICBib3JkZXItY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuXHRcdGNvbG9yOiBwYWxldHRlKGJhY2tncm91bmQpO1xuXHR9XG59XG5cblxuXG5cblxuXG5cbi8vIGlucHV0LFxuLy8gdGV4dGFyZWEge1xuLy8gXHRib3JkZXI6IDFweCBzb2xpZCBwYWxldHRlKGJhc2UpO1xuLy8gXHRtYXJnaW4tYm90dG9tOiBzcGFjZSgwLjUpO1xuLy8gfVxuLy9cbi8vIHRleHRhcmVhIHtcbi8vIFx0bGluZS1oZWlnaHQ6IDEuNTtcbi8vIFx0cGFkZGluZy10b3A6IHNwYWNlKDAuNSk7XG4vLyB9XG5cblxuXG5cblxuLy8gUkVGQUNUT1I6IHRleHQgaW5wdXRzIG9ubHkgc28gSSBkb24ndCBvdmVycmlkZSByYWRpbyBidG4gY29tcG9uZW50IHN0eWxlc+KAplxuXG4vL2lucHV0W3R5cGU9XCJ0ZXh0XCJdLCBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIGlucHV0W3R5cGU9XCJ0ZWxcIl0ge1xuLy9cdEBpbmNsdWRlIHRleHRSZygpO1xuLy9cdGNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kLWNvdW50ZXIpLCAwLjcgKTtcbi8vXHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbi8vXHRib3JkZXI6IDA7XG4vL1x0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuLy9cdGJvcmRlci1jb2xvcjogcmdiYSggcGFsZXR0ZShicmFuZC1jb3VudGVyKSwgMC40ICk7XG4vL1x0Ly8gYm9yZGVyLXJhZGl1czogbWFwLWZldGNoKCRib3JkZXItcmFkaXVzLCBiYXNlKTtcbi8vXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4vL1x0Ly8gZm9udC1mYW1pbHk6ICRmb250LXRleHQtcmVndWxhcjtcbi8vXHRsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBsZyk7XG4vL1x0cGFkZGluZzogMDtcbi8vXHRyZXNpemU6IG5vbmU7XG4vL1x0dHJhbnNpdGlvbjogYWxsIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgZHVyYXRpb24sIGxvbmcpIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgdHlwZSwgYmFzZSk7XG4vL1x0d2lkdGg6IDEwMCU7XG4vL1x0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuLy9cbi8vXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcbi8vXHRcdG91dGxpbmU6IDA7XG4vL1x0fVxuLy9cbi8vXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbi8vXHRcdC8vIGZvbnQtc2l6ZTogMTZweDtcbi8vXHR9XG4vL1xuLy9cdCY6LXdlYmtpdC1hdXRvZmlsbCB7XG4vL1x0XHQtd2Via2l0LWJveC1zaGFkb3c6IDAgMCAwIHJlbSgxMDApIGRhcmtlbiggcGFsZXR0ZShuZXV0cmFsKSw0JSkgaW5zZXQ7XG4vL1x0XHQtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogcGFsZXR0ZShtZWRpdW0pO1xuLy9cdFx0YmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcbi8vXHR9XG4vL1xuLy9cdCRjb2xvci1wbGFjZWhvbGRlcjogcmdiYSggcGFsZXR0ZShicmFuZC1jb3VudGVyKSwgMC43ICk7XG4vL1xuLy9cdCY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG4vL1x0JjotbW96LXBsYWNlaG9sZGVyICAgICAgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cbi8vXHQmOjotbW96LXBsYWNlaG9sZGVyICAgICAgICAgIHsgY29sb3I6ICRjb2xvci1wbGFjZWhvbGRlcjsgfVxuLy9cdCY6LW1zLWlucHV0LXBsYWNlaG9sZGVyICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG4vL31cblxuXG4vLyBGbG9hdGluZyBsYWJlbCBwYXR0ZXJuXG4vLyBVc3VhbGx5IHJlcXVpcmVzIEpTIHVubGVzcyB5b3UncmUgdXNpbmcgUmVhY3TigKZcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qIHVuY3NzOmlnbm9yZSAqL1xuLy8uRm9ybS1ncm91cCB7XG4vL1x0cG9zaXRpb246IHJlbGF0aXZlO1xuLy9cbi8vXHQvLyY6bm90KDpsYXN0LWNoaWxkKSB7XG4vL1x0Ly9cdG1hcmdpbjogMCAwIHNwYWNlKDEuMSk7XG4vL1x0Ly99XG4vL1xuLy9cdGxhYmVsIHtcbi8vXHRcdEBpbmNsdWRlIHRleHRMZygpO1xuLy9cdFx0Y29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAxICk7XG4vL1x0XHRjdXJzb3I6IHRleHQ7XG4vL1x0XHRsZWZ0OiAwO1xuLy9cdFx0cG9zaXRpb246IGFic29sdXRlO1xuLy9cdFx0dG9wOiA2cHg7XG4vL1x0XHR0cmFuc2l0aW9uOiBhbGwgbWFwLWZldGNoKCR0cmFuc2l0aW9uLCBkdXJhdGlvbiwgZmFzdCkgbWFwLWZldGNoKCR0cmFuc2l0aW9uLCB0eXBlLCBmaW5lKTtcbi8vXHRcdHotaW5kZXg6IDk5O1xuLy9cdH1cbi8vXG4vL1x0aW5wdXQuRm9ybS1jb250cm9sLFxuLy9cdHRleHRhcmVhLkZvcm0tY29udHJvbCB7XG4vL1x0fVxuLy9cbi8vXHQmLS1zbSB7XG4vL1x0XHQvLyBsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBsZyk7XG4vL1x0XHRsaW5lLWhlaWdodDogMzhweDtcbi8vXG4vL1x0XHRsYWJlbCB7XG4vL1x0XHRcdEBpbmNsdWRlIHRleHRSZygpO1xuLy9cdFx0XHRjb2xvcjogcGFsZXR0ZShicmFuZC1jb3VudGVyKTtcbi8vXHRcdH1cbi8vXG4vL1x0XHRpbnB1dC5Gb3JtLWNvbnRyb2wge1xuLy9cdFx0XHRsaW5lLWhlaWdodDogaW5oZXJpdDtcbi8vXHRcdH1cbi8vXHR9XG4vL1xuLy9cdC8vIHJldGFpbiB0aGVtZSB0eXBvZ3JhcGh5IGFsaWdubWVudFxuLy9cdC8vIGlucHV0LkJ1dHRvbiB7XG4vL1x0Ly8gICAgIHBhZGRpbmctdG9wOiAycHg7XG4vL1x0Ly8gfVxuLy9cbi8vXHQvLyAvKiB1bmNzczppZ25vcmUgKi9cbi8vXHQvLyAmLmlzLWFjdGl2ZSA+IGxhYmVsOm5vdCguaGFzLWVycm9yKSB7XG4vL1x0Ly8gICAgIC8vIGNvbG9yOiBwYWxldHRlKGNoYXJjb2FsKTtcbi8vXHQvLyAgICAgLy8gZm9udC1zaXplOiByZW0oJHNpemVUZXh0U20gKiAwLjY1KTtcbi8vXHQvLyAgICAgb3BhY2l0eTogMDtcbi8vXHQvLyAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKHJlbSgtMTApKTtcbi8vXHQvLyB9XG4vL31cbi8vXG4vLy5Gb3JtLWdyb3VwLmlzLWFjdGl2ZSB7XG4vL1x0bGFiZWwge1xuLy9cdFx0Zm9udC1zaXplOiBmb250c2l6ZSh0ZXh0LS1zbSwgc20pO1xuLy9cdFx0b3BhY2l0eTogMTtcbi8vXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgLTE2cHgpO1xuLy9cdH1cbi8vXG4vL1x0aW5wdXQuRm9ybS1jb250cm9sIHtcbi8vXHRcdGJvcmRlci1jb2xvcjogcmdiYSggcGFsZXR0ZShicmFuZC1jb21wbGVtZW50KSwgMSApO1xuLy9cdFx0Y29sb3I6IHBhbGV0dGUoYnJhbmQtY29tcGxlbWVudCk7XG4vL1x0fVxuLy99XG4vL1xuLy8uRm9ybS1ncm91cC5oYXMtZXJyb3Ige1xuLy9cdGxhYmVsIHtcbi8vXHRcdGNvbG9yOiBwYWxldHRlKGJhZC1uZXdzKTtcbi8vXHR9XG4vL1xuLy9cdGlucHV0LkZvcm0tY29udHJvbCB7XG4vL1x0XHRib3JkZXItY29sb3I6IHBhbGV0dGUoYmFkLW5ld3MpO1xuLy9cdH1cbi8vfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIENPRkZFRSBTRUNSRVRTIElDT05cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLmMtaWNvbiB7XG5cdHdpZHRoOiAxNzlweDtcblx0aGVpZ2h0OiA3MHB4O1xuXG5cdC8vY3Vyc29yOiBwb2ludGVyO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgLy9maWxsOiBjdXJyZW50Q29sb3I7IC8vIFRoZSBjb2xvciBvZiB0aGUgU1ZHIHdpbGwgaW5oZXJpdCB0aGUgcGFyZW50J3MgYGNvbG9yYC5cbiAgICBmaWxsOiBwYWxldHRlKGJyYW5kKTtcblx0bGluZS1oZWlnaHQ6IDE7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdG91dGxpbmU6IDA7XG5cdH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTSEFSRSBBU0lERSBDT01QT05FTlRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLmMtc2hhcmVXcmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYy1zaGFyZSB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xufVxuIiwiXG4udS1tYXJnaW5OVEQzIHsgbWFyZ2luLXRvcDogLSN7c3BhY2UoMS8zKX0gICFpbXBvcnRhbnQ7IH1cblxuLnUtc21Eb3duLWZsZXhPcmRlckZpcnN0IHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbiAgICAgICAgb3JkZXI6IC0xICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG4udS1oaWRlICAgIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG4udS1zbS1oaWRlIHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG4udS1wb3NSZWxhdGl2ZSB7IHBvc2l0aW9uOiByZWxhdGl2ZSFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JCYXNlIHsgY29sb3I6IHBhbGV0dGUoYmFzZSkgIWltcG9ydGFudDsgfVxuLnUtY29sb3JNdXRlZCB7IGNvbG9yOiBwYWxldHRlKG11dGVkKSAhaW1wb3J0YW50OyB9XG4udS1jb2xvck1lZGl1bSB7IGNvbG9yOiBwYWxldHRlKG1lZGl1bSkgIWltcG9ydGFudDsgfVxuLnUtY29sb3JEYXJrIHsgY29sb3I6IHBhbGV0dGUoY2hhcmNvYWwpICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JCcmFuZCB7IGNvbG9yOiBwYWxldHRlKGJyYW5kKSAhaW1wb3J0YW50OyB9XG4udS1jb2xvck5ldXRyYWxEYXJrIHsgY29sb3I6IHBhbGV0dGUobmV1dHJhbC1kYXJrKSAhaW1wb3J0YW50OyB9XG5cblxuLy8gcXVpY2sgc3BhY2Vyc1xuXG4udS1zcGFjZTAgICAgIHsgbWFyZ2luOiAwICFpbXBvcnRhbnQ7IH1cblxuLnUtc3BhY2VUMW9mNCB7IG1hcmdpbi10b3A6IHNwYWNlKDAuMjUpOyB9XG5cbi51LXNwYWNlVEQyICAgeyBtYXJnaW4tdG9wOiBzcGFjZSgwLjUpICFpbXBvcnRhbnQ7IH1cbi51LXNwYWNlVCAgICAgeyBtYXJnaW4tdG9wOiBzcGFjZSgxKSAhaW1wb3J0YW50OyB9XG4udS1zcGFjZVQyICAgIHsgbWFyZ2luLXRvcDogc3BhY2UoMikgIWltcG9ydGFudDsgfVxuLnUtc3BhY2VCICAgICB7IG1hcmdpbi1ib3R0b206IHNwYWNlKDEpICFpbXBvcnRhbnQ7IH1cbi51LXNwYWNlQjIgICAgeyBtYXJnaW4tYm90dG9tOiBzcGFjZSgyKSAhaW1wb3J0YW50OyB9XG5cbi8vIHdyb25nIG5hbWluZywgc2hvdWxkIGJlICdzbURvd24nOlxuLnUtc20tc3BhY2VUICAgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHsgbWFyZ2luLXRvcDogc3BhY2UoMSk7IH0gfVxuLnUtc20tc3BhY2VUMiAgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHsgbWFyZ2luLXRvcDogc3BhY2UoMik7IH0gfVxuXG4vLyByaWdodCBuYW1pbmdcbi51LXNtLXNwYWNlTE4xIHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBtYXJnaW4tbGVmdDogLTFweDsgfSB9XG5cbi51LXNtRG93bi1zcGFjZVIgICB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkgeyBtYXJnaW4tcmlnaHQ6IHNwYWNlKDEpOyB9IH1cbi51LXNtRG93bi1zcGFjZVQgICB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkgeyBtYXJnaW4tdG9wOiBzcGFjZSgxKTsgfSB9XG4udS1zbURvd24tc3BhY2VURDIgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHsgbWFyZ2luLXRvcDogc3BhY2UoMC41KTsgfSB9XG5cbi51LXNtRG93bi1ibG9ja1ItLTNieTQgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHsgbWFyZ2luLXJpZ2h0OiAkYmxvY2tTcGFjZSAqIDAuNzU7IH0gfVxuLnUtc21Eb3duLWJsb2NrVC0tM2J5NCB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkgeyBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZSAqIDAuNzU7IH0gfVxuLnUtc21Eb3duLWJsb2NrQi0tM2J5NCB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkgeyBtYXJnaW4tYm90dG9tOiAkYmxvY2tTcGFjZSAqIDAuNzU7IH0gfVxuXG4udS1zbS1ibG9ja0ItLTFieTQgeyBtYXJnaW4tYm90dG9tOiAkYmxvY2tTcGFjZSAqIDAuMjU7IH1cbi51LXNtLWJsb2NrQi0tMWJ5MyB7IG1hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC4zMzMzMzM7IH1cbi51LXNtLWJsb2NrQi0tMWJ5MiB7IG1hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC41OyB9XG5cbi51LXNtLWJsb2NrVC0tMWJ5NCB7IG1hcmdpbi10b3A6ICRibG9ja1NwYWNlICogMC4yNTsgfVxuLnUtc20tYmxvY2tULS0xYnkzIHsgbWFyZ2luLXRvcDogJGJsb2NrU3BhY2UgKiAwLjMzMzMzMzsgfVxuLnUtc20tYmxvY2tULS0xYnkyIHsgbWFyZ2luLXRvcDogJGJsb2NrU3BhY2UgKiAwLjU7IH1cbiJdfQ== */
